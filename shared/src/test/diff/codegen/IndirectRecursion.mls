// * [OBSOLETE:]
// * Strangely, while Y does not work (cycle check error),
// * Z type checks find thanks to recursive types...


def z: (('a -> 'b) -> (('a -> 'b) & 'c)) -> 'c
//│ z: (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│  = <missing implementation>

// :e // Works since inconsistent constrained types...
:e // No longer signature-checks after fix to freshening levels
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ╔══[ERROR] Cyclic-looking constraint while typing application; a type annotation may be required
//│ ║  l.13: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║        	            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ‹∀ 1. (α47_62'' -> α56_66'')›  <:  α47_73'    PolymorphicType  TypeVariable
//│ ╙──  ... looks like:  ‹∀ 1. (α47_62'' -> α56_66'')›  <:  α47_62''
//│ ((forall 'a, 'b. 'a -> 'b) -> 'c & (forall 'c, 'd. 'c -> 'd) -> 'c) -> error
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│  = [Function: z]


def pow1 = z (fun pow0 -> fun n -> fun x ->
    if n > 0 then pow0 (n - 1) x * x
    else 1
  )
//│ pow1: int -> int -> int
//│     = [Function: pow1]

pow1 3 4
//│ res: int
//│    = 64


:e
z (fun self -> 1)
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.39: 	z (fun self -> 1)
//│ ║        	^^^^^^^^^^^^^^^^^
//│ ╟── integer literal of type `1` is not a function
//│ ║  l.39: 	z (fun self -> 1)
//│ ║        	               ^
//│ ╟── Note: constraint arises from function type:
//│ ║  l.6: 	def z: (('a -> 'b) -> (('a -> 'b) & 'c)) -> 'c
//│ ║       	                       ^^^^^^^^^^
//│ ╟── from intersection type:
//│ ║  l.6: 	def z: (('a -> 'b) -> (('a -> 'b) & 'c)) -> 'c
//│ ╙──     	                      ^^^^^^^^^^^^^^^^^
//│ res: error
//│    = 1


zid = z (fun self -> id)
//│ zid: 'a -> 'a
//│    = [Function: id]

zid 1
//│ res: 1
//│    = 1


zargs = z (fun self -> fun x -> self)
//│ zargs: 'b
//│   where
//│     'b :> anything -> 'b
//│      = [Function (anonymous)]

zargs 1
//│ res: 'b
//│   where
//│     'b :> anything -> 'b
//│    = [Function (anonymous)]

zargs 1 2 3 4
//│ res: 'b
//│   where
//│     'b :> anything -> 'b
//│    = [Function (anonymous)]


loop = z (fun self -> self)
//│ loop: anything -> nothing
//│     = [Function (anonymous)]

:re
loop 1
//│ res: nothing
//│ Runtime error:
//│   RangeError: Maximum call stack size exceeded


def pow pow n x =
    if n > 0 then pow (n - 1) x * x
    else 1
//│ pow: (int -> 'a -> int) -> int -> (int & 'a) -> int
//│    = [Function: pow]

def pow = z pow
pow 3 4
//│ pow: int -> int -> int
//│    = [Function: pow2]
//│ res: int
//│    = 64


def oops = z (fun f -> f)
//│ oops: anything -> nothing
//│     = [Function: oops]

:re
oops 1
//│ res: nothing
//│ Runtime error:
//│   RangeError: Maximum call stack size exceeded



:NoRecursiveTypes

:e
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ╔══[ERROR] Cyclic-looking constraint while typing application; a type annotation may be required
//│ ║  l.125: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║         	            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ‹∀ 1. (α327_342'' -> α336_346'')›  <:  α327_353'    PolymorphicType  TypeVariable
//│ ╙──  ... looks like:  ‹∀ 1. (α327_342'' -> α336_346'')›  <:  α327_342''
//│ ((forall 'a, 'b. 'a -> 'b) -> 'c & (forall 'c, 'd. 'c -> 'd) -> 'c) -> error
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│  = [Function: z1]

:NoCycleCheck

// Exceeds recursion depth limit:
// :e
// FIXME should be caught by cycle checker!
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ╔══[ERROR] Subtyping constraint of the form `?a -> ?b <: (forall ?c, ?d, ?e, ?f, ?g. ?e -> ?f) -> ?h` exceeded recursion depth limit (250)
//│ ║  l.143: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║         	            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── while constraining:  ‹∀ 1. (α417_432'' -> α426_436'')›  <!<  α417_478'
//│ ╟── while constraining:  α417_473'  <!<  α417_478'
//│ ╟── while constraining:  (α417_473',)  <!<  (α417_478',)
//│ ╟── while constraining:  (α417_478' -> α426_482')  <!<  ((α417_473',) -> α420_474')
//│ ╟── while constraining:  ‹∀ 1. (α417_432'' -> α426_436'')›  <!<  ((α417_473',) -> α420_474')
//│ ╟── while constraining:  ‹∀ 1. (α417_432'' -> α426_436'')›  <!<  α417_473'
//│ ╟── while constraining:  α417_468'  <!<  α417_473'
//│ ╟── while constraining:  (α417_468',)  <!<  (α417_473',)
//│ ╟── while constraining:  (α417_473' -> α426_477')  <!<  ((α417_468',) -> α420_469')
//│ ╟── while constraining:  ‹∀ 1. (α417_432'' -> α426_436'')›  <!<  ((α417_468',) -> α420_469')
//│ ╟── while constraining:  ‹∀ 1. (α417_432'' -> α426_436'')›  <!<  α417_468'
//│ ╟── while constraining:  α417_463'  <!<  α417_468'
//│ ╟── while constraining:  (α417_463',)  <!<  (α417_468',)
//│ ╟── while constraining:  (α417_468' -> α426_472')  <!<  ((α417_463',) -> α420_464')
//│ ╟── while constraining:  ‹∀ 1. (α417_432'' -> α426_436'')›  <!<  ((α417_463',) -> α420_464')
//│ ╟── ......
//│ ╟── ......
//│ ╟── while constraining:  (α417_448' -> α426_452')  <!<  ((α417_443',) -> α420_444')
//│ ╟── while constraining:  ‹∀ 1. (α417_432'' -> α426_436'')›  <!<  ((α417_443',) -> α420_444')
//│ ╟── while constraining:  ‹∀ 1. (α417_432'' -> α426_436'')›  <!<  α417_443'
//│ ╟── while constraining:  α417_438'  <!<  α417_443'
//│ ╟── while constraining:  (α417_438',)  <!<  (α417_443',)
//│ ╟── while constraining:  (α417_443' -> α426_447')  <!<  ((α417_438',) -> α420_439')
//│ ╟── while constraining:  ‹∀ 1. (α417_432'' -> α426_436'')›  <!<  ((α417_438',) -> α420_439')
//│ ╟── while constraining:  ‹∀ 1. (α417_432'' -> α426_436'')›  <!<  α417_438'
//│ ╟── while constraining:  α407'  <!<  α417_438'
//│ ╟── while constraining:  (α407',)  <!<  (α417_438',)
//│ ╟── while constraining:  (α417_438' -> α426_442')  <!<  ((α407',) -> α410')
//│ ╟── while constraining:  ‹∀ 1. (α417_432'' -> α426_436'')›  <!<  ((α407',) -> α410')
//│ ╟── while constraining:  ‹∀ 1. (α417_432'' -> α426_436'')›  <!<  α407'
//│ ╟── while constraining:  (‹∀ 1. (α417_432'' -> α426_436'')›,)  <!<  (α407',)
//│ ╙── while constraining:  (α407' -> α416')  <!<  ((‹∀ 1. (α417_432'' -> α426_436'')›,) -> α437')
//│ ((forall 'a, 'b. 'a -> 'b) -> 'c & (forall 'c, 'd. 'c -> 'd) -> 'c) -> error
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│  = [Function: z2]

