
// * Strangely, why Y does not work (cycle check error),
// * Z type checks find thanks to recursive types...


def z: (('a -> 'b) -> (('a -> 'b) & 'c)) -> 'c
//│ z: (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│  = <missing implementation>

// :e
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ((forall 'a, 'b, 'c. ('b -> 'c
//│   where
//│     'a <: 'a -> 'b -> 'c)) -> 'd) -> 'd
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│  = [Function: z]


def pow1 = z (fun pow0 -> fun n -> fun x ->
    if n > 0 then pow0 (n - 1) x * x
    else 1
  )
//│ pow1: int -> int -> int
//│     = [Function (anonymous)]

pow1 3 4
//│ res: int
//│    = 64


def pow pow n x =
    if n > 0 then pow (n - 1) x * x
    else 1
//│ pow: (int -> 'a -> int) -> int -> (int & 'a) -> int
//│    = [Function: pow]

def pow = z pow
pow 3 4
//│ pow: int -> int -> int
//│    = [Function (anonymous)]
//│ res: int
//│    = 64


def oops = z (fun f -> f)
//│ oops: anything -> nothing
//│     = [Function (anonymous)]

:re
oops 1
//│ res: nothing
//│ Runtime error:
//│   RangeError: Maximum call stack size exceeded



:NoRecursiveTypes

:e
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ((forall 'a, 'b, 'c. ('b -> 'c
//│   where
//│     'a <: 'a -> 'b -> 'c)) -> 'd) -> 'd
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.62: 	def z =
//│ ║        	^^^^^^^
//│ ║  l.63: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ‹∀ 1. {(α194_226' -> α198_230'') where: α188_224' <: ((‹∀ 2. {(α195_228''' -> α197_229''') where: α194_226' <: ((α194_226',) -> α196_227''')}›,) -> α198_230'')}›  <:  ((α194_226',) -> α196_244')    PolymorphicType  FunctionType
//│ ╙──  ... looks like:  ‹∀ 1. {(α194'' -> α198'') where: α188_224' <: ((‹∀ 2. {(α195''' -> α197''') where: α194_226' <: ((α194'',) -> α196''')}›,) -> α198'')}›  <:  ((α194'',) -> α196_227''')
//│  = [Function: z1]

:NoCycleCheck

// Exceeds recursion depth limit:
:e
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ((forall 'a, 'b, 'c. ('b -> 'c
//│   where
//│     'a <: 'a -> 'b -> 'c)) -> 'd) -> 'd
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?d, ?e, ?f, ?g, ?h, ?i, ?j, ?k, ?l. ?j -> ?i <: forall ?a, ?b, ?c. ((?a -> ?b) -> (?a -> ?b & ?c)) -> ?c` exceeded recursion depth limit (300)
//│ ║  l.83: 	def z =
//│ ║        	^^^^^^^
//│ ║  l.84: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── while constraining:  ‹∀ 1. {(α253_285' -> α257_289'') where: α247_283' <: ((‹∀ 2. {(α254_287''' -> α256_288''') where: α253_285' <: ((α253_285',) -> α255_286''')}›,) -> α257_289'')}›  <!<  ((α253_285',) -> α255_363')
//│ ╟── while constraining:  α253_285'  <!<  ((α253_285',) -> α255_363')
//│ ╟── while constraining:  {(α254_364' -> α256_365') where: α253_285' <: ((α253_285',) -> α255_363')}  <!<  (‘a' -> ‘b')
//│ ╟── while constraining:  ‹∀ 2. {(α254_287''' -> α256_288''') where: α253_285' <: ((α253_285',) -> α255_286''')}›  <!<  (‘a' -> ‘b')
//│ ╟── while constraining:  (‹∀ 2. {(α254_287''' -> α256_288''') where: α253_285' <: ((α253_285',) -> α255_286''')}›,)  <!<  ((‘a' -> ‘b'),)
//│ ╟── while constraining:  ((‘a' -> ‘b') -> ((‘a' -> ‘b') & ‘c'))  <!<  ((‹∀ 2. {(α254_287''' -> α256_288''') where: α253_285' <: ((α253_285',) -> α255_286''')}›,) -> α257_362')
//│ ╟── while constraining:  α247_283'  <!<  ((‹∀ 2. {(α254_287''' -> α256_288''') where: α253_285' <: ((α253_285',) -> α255_286''')}›,) -> α257_362')
//│ ╟── while constraining:  {(α253_285' -> α257_362') where: α247_283' <: ((‹∀ 2. {(α254_287''' -> α256_288''') where: α253_285' <: ((α253_285',) -> α255_286''')}›,) -> α257_362')}  <!<  ((α253_285',) -> α255_359')
//│ ╟── while constraining:  ‹∀ 1. {(α253_285' -> α257_289'') where: α247_283' <: ((‹∀ 2. {(α254_287''' -> α256_288''') where: α253_285' <: ((α253_285',) -> α255_286''')}›,) -> α257_289'')}›  <!<  ((α253_285',) -> α255_359')
//│ ╟── while constraining:  α253_285'  <!<  ((α253_285',) -> α255_359')
//│ ╟── while constraining:  {(α254_360' -> α256_361') where: α253_285' <: ((α253_285',) -> α255_359')}  <!<  (‘a' -> ‘b')
//│ ╟── while constraining:  ‹∀ 2. {(α254_287''' -> α256_288''') where: α253_285' <: ((α253_285',) -> α255_286''')}›  <!<  (‘a' -> ‘b')
//│ ╟── while constraining:  (‹∀ 2. {(α254_287''' -> α256_288''') where: α253_285' <: ((α253_285',) -> α255_286''')}›,)  <!<  ((‘a' -> ‘b'),)
//│ ╟── while constraining:  ((‘a' -> ‘b') -> ((‘a' -> ‘b') & ‘c'))  <!<  ((‹∀ 2. {(α254_287''' -> α256_288''') where: α253_285' <: ((α253_285',) -> α255_286''')}›,) -> α257_358')
//│ ╟── while constraining:  α247_283'  <!<  ((‹∀ 2. {(α254_287''' -> α256_288''') where: α253_285' <: ((α253_285',) -> α255_286''')}›,) -> α257_358')
//│ ╟── ......
//│ ╟── ......
//│ ╟── while constraining:  α248_284'  <!<  α253_285'
//│ ╟── while constraining:  (α248_284',)  <!<  (α253_285',)
//│ ╟── while constraining:  (α253_285' -> α257_298')  <!<  ((α248_284',) -> α250_295')
//│ ╟── while constraining:  {(α253_285' -> α257_298') where: α247_283' <: ((‹∀ 2. {(α254_287''' -> α256_288''') where: α253_285' <: ((α253_285',) -> α255_286''')}›,) -> α257_298')}  <!<  ((α248_284',) -> α250_295')
//│ ╟── while constraining:  ‹∀ 1. {(α253_285' -> α257_289'') where: α247_283' <: ((‹∀ 2. {(α254_287''' -> α256_288''') where: α253_285' <: ((α253_285',) -> α255_286''')}›,) -> α257_289'')}›  <!<  ((α248_284',) -> α250_295')
//│ ╟── while constraining:  α248_284'  <!<  ((α248_284',) -> α250_295')
//│ ╟── while constraining:  {(α249_296' -> α251_297') where: α248_284' <: ((α248_284',) -> α250_295')}  <!<  (‘a' -> ‘b')
//│ ╟── while constraining:  ‹∀ 1. {(α249_291'' -> α251_292'') where: α248_284' <: ((α248_284',) -> α250_290'')}›  <!<  (‘a' -> ‘b')
//│ ╟── while constraining:  (‹∀ 1. {(α249_291'' -> α251_292'') where: α248_284' <: ((α248_284',) -> α250_290'')}›,)  <!<  ((‘a' -> ‘b'),)
//│ ╟── while constraining:  ((‘a' -> ‘b') -> ((‘a' -> ‘b') & ‘c'))  <!<  ((‹∀ 1. {(α249_291'' -> α251_292'') where: α248_284' <: ((α248_284',) -> α250_290'')}›,) -> α252_293')
//│ ╟── while constraining:  ((‘a' -> ‘b') -> ((‘a' -> ‘b') & ‘c'))  <!<  α247_283'
//│ ╟── while constraining:  (((‘a' -> ‘b') -> ((‘a' -> ‘b') & ‘c')),)  <!<  (α247_283',)
//│ ╟── while constraining:  (α247_283' -> α258_294')  <!<  (((‘a' -> ‘b') -> ((‘a' -> ‘b') & ‘c')) -> ‘c')
//│ ╟── while constraining:  ‹∀ 0. (α247' -> α258')›  <!<  (((‘a' -> ‘b') -> ((‘a' -> ‘b') & ‘c')) -> ‘c')
//│ ╙── while constraining:  ‹∀ 0. (α247' -> α258')›  <!<  ‹∀ 0. ((('a21' -> 'b22') -> (('a21' -> 'b22') & 'c23')) -> 'c23')›
//│  = [Function: z2]

