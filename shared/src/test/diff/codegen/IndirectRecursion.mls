
// * Strangely, why Y does not work (cycle check error),
// * Z type checks find thanks to recursive types...


def z: (('a -> 'b) -> (('a -> 'b) & 'c)) -> 'c
//│ z: (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│  = <missing implementation>

// :e
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ((forall 'a, 'b, 'c, 'd. ('c -> 'd
//│   where
//│     'a <: 'a -> 'b
//│     'b <: 'c -> 'd)) -> 'e) -> 'e
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│  = [Function: z]


def pow1 = z (fun pow0 -> fun n -> fun x ->
    if n > 0 then pow0 (n - 1) x * x
    else 1
  )
//│ pow1: int -> int -> int
//│     = [Function (anonymous)]

pow1 3 4
//│ res: int
//│    = 64


def pow pow n x =
    if n > 0 then pow (n - 1) x * x
    else 1
//│ pow: (int -> 'a -> int) -> int -> (int & 'a) -> int
//│    = [Function: pow]

def pow = z pow
pow 3 4
//│ pow: int -> int -> int
//│    = [Function (anonymous)]
//│ res: int
//│    = 64


def oops = z (fun f -> f)
//│ oops: anything -> nothing
//│     = [Function (anonymous)]

:re
oops 1
//│ res: nothing
//│ Runtime error:
//│   RangeError: Maximum call stack size exceeded



:NoRecursiveTypes

:e
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ((forall 'a, 'b, 'c, 'd. ('c -> 'd
//│   where
//│     'a <: 'a -> 'b
//│     'b <: 'c -> 'd)) -> 'e) -> 'e
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.63: 	def z =
//│ ║        	^^^^^^^
//│ ║  l.64: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ‹∀ 1. {(α204_238' -> α208_242'') where: α198_236' <: ((‹∀ 2. {(α205_240''' -> α207_241''') where: α204_238' <: ((α204_238',) -> α206_239'''), α206_239''' <: ((α205_240''',) -> α207_241''')}›,) -> α208_242'')}›  <:  ((α204_238',) -> α206_256')    PolymorphicType  FunctionType
//│ ╙──  ... looks like:  ‹∀ 1. {(α204'' -> α208'') where: α198_236' <: ((‹∀ 2. {(α205''' -> α207''') where: α204_238' <: ((α204'',) -> α206'''), α206_239''' <: ((α205''',) -> α207''')}›,) -> α208'')}›  <:  ((α204'',) -> α206_239''')
//│  = [Function: z1]

:NoCycleCheck

// Exceeds recursion depth limit:
:e
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ((forall 'a, 'b, 'c, 'd. ('c -> 'd
//│   where
//│     'a <: 'a -> 'b
//│     'b <: 'c -> 'd)) -> 'e) -> 'e
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?d, ?e, ?f, ?g, ?h, ?i, ?j, ?k, ?l. ?j -> ?i <: forall ?a, ?b, ?c. ((?a -> ?b) -> (?a -> ?b & ?c)) -> ?c` exceeded recursion depth limit (300)
//│ ║  l.85: 	def z =
//│ ║        	^^^^^^^
//│ ║  l.86: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── while constraining:  ‹∀ 1. {(α265_299' -> α269_303'') where: α259_297' <: ((‹∀ 2. {(α266_301''' -> α268_302''') where: α265_299' <: ((α265_299',) -> α267_300'''), α267_300''' <: ((α266_301''',) -> α268_302''')}›,) -> α269_303'')}›  <!<  ((α265_299',) -> α267_377')
//│ ╟── while constraining:  α265_299'  <!<  ((α265_299',) -> α267_377')
//│ ╟── while constraining:  {(α266_378' -> α268_379') where: α265_299' <: ((α265_299',) -> α267_377'), α267_377' <: ((α266_378',) -> α268_379')}  <!<  (‘a' -> ‘b')
//│ ╟── while constraining:  ‹∀ 2. {(α266_301''' -> α268_302''') where: α265_299' <: ((α265_299',) -> α267_300'''), α267_300''' <: ((α266_301''',) -> α268_302''')}›  <!<  (‘a' -> ‘b')
//│ ╟── while constraining:  (‹∀ 2. {(α266_301''' -> α268_302''') where: α265_299' <: ((α265_299',) -> α267_300'''), α267_300''' <: ((α266_301''',) -> α268_302''')}›,)  <!<  ((‘a' -> ‘b'),)
//│ ╟── while constraining:  ((‘a' -> ‘b') -> ((‘a' -> ‘b') & ‘c'))  <!<  ((‹∀ 2. {(α266_301''' -> α268_302''') where: α265_299' <: ((α265_299',) -> α267_300'''), α267_300''' <: ((α266_301''',) -> α268_302''')}›,) -> α269_376')
//│ ╟── while constraining:  α259_297'  <!<  ((‹∀ 2. {(α266_301''' -> α268_302''') where: α265_299' <: ((α265_299',) -> α267_300'''), α267_300''' <: ((α266_301''',) -> α268_302''')}›,) -> α269_376')
//│ ╟── while constraining:  {(α265_299' -> α269_376') where: α259_297' <: ((‹∀ 2. {(α266_301''' -> α268_302''') where: α265_299' <: ((α265_299',) -> α267_300'''), α267_300''' <: ((α266_301''',) -> α268_302''')}›,) -> α269_376')}  <!<  ((α265_299',) -> α267_373')
//│ ╟── while constraining:  ‹∀ 1. {(α265_299' -> α269_303'') where: α259_297' <: ((‹∀ 2. {(α266_301''' -> α268_302''') where: α265_299' <: ((α265_299',) -> α267_300'''), α267_300''' <: ((α266_301''',) -> α268_302''')}›,) -> α269_303'')}›  <!<  ((α265_299',) -> α267_373')
//│ ╟── while constraining:  α265_299'  <!<  ((α265_299',) -> α267_373')
//│ ╟── while constraining:  {(α266_374' -> α268_375') where: α265_299' <: ((α265_299',) -> α267_373'), α267_373' <: ((α266_374',) -> α268_375')}  <!<  (‘a' -> ‘b')
//│ ╟── while constraining:  ‹∀ 2. {(α266_301''' -> α268_302''') where: α265_299' <: ((α265_299',) -> α267_300'''), α267_300''' <: ((α266_301''',) -> α268_302''')}›  <!<  (‘a' -> ‘b')
//│ ╟── while constraining:  (‹∀ 2. {(α266_301''' -> α268_302''') where: α265_299' <: ((α265_299',) -> α267_300'''), α267_300''' <: ((α266_301''',) -> α268_302''')}›,)  <!<  ((‘a' -> ‘b'),)
//│ ╟── while constraining:  ((‘a' -> ‘b') -> ((‘a' -> ‘b') & ‘c'))  <!<  ((‹∀ 2. {(α266_301''' -> α268_302''') where: α265_299' <: ((α265_299',) -> α267_300'''), α267_300''' <: ((α266_301''',) -> α268_302''')}›,) -> α269_372')
//│ ╟── while constraining:  α259_297'  <!<  ((‹∀ 2. {(α266_301''' -> α268_302''') where: α265_299' <: ((α265_299',) -> α267_300'''), α267_300''' <: ((α266_301''',) -> α268_302''')}›,) -> α269_372')
//│ ╟── ......
//│ ╟── ......
//│ ╟── while constraining:  α260_298'  <!<  α265_299'
//│ ╟── while constraining:  (α260_298',)  <!<  (α265_299',)
//│ ╟── while constraining:  (α265_299' -> α269_312')  <!<  ((α260_298',) -> α262_309')
//│ ╟── while constraining:  {(α265_299' -> α269_312') where: α259_297' <: ((‹∀ 2. {(α266_301''' -> α268_302''') where: α265_299' <: ((α265_299',) -> α267_300'''), α267_300''' <: ((α266_301''',) -> α268_302''')}›,) -> α269_312')}  <!<  ((α260_298',) -> α262_309')
//│ ╟── while constraining:  ‹∀ 1. {(α265_299' -> α269_303'') where: α259_297' <: ((‹∀ 2. {(α266_301''' -> α268_302''') where: α265_299' <: ((α265_299',) -> α267_300'''), α267_300''' <: ((α266_301''',) -> α268_302''')}›,) -> α269_303'')}›  <!<  ((α260_298',) -> α262_309')
//│ ╟── while constraining:  α260_298'  <!<  ((α260_298',) -> α262_309')
//│ ╟── while constraining:  {(α261_310' -> α263_311') where: α260_298' <: ((α260_298',) -> α262_309'), α262_309' <: ((α261_310',) -> α263_311')}  <!<  (‘a' -> ‘b')
//│ ╟── while constraining:  ‹∀ 1. {(α261_305'' -> α263_306'') where: α260_298' <: ((α260_298',) -> α262_304''), α262_304'' <: ((α261_305'',) -> α263_306'')}›  <!<  (‘a' -> ‘b')
//│ ╟── while constraining:  (‹∀ 1. {(α261_305'' -> α263_306'') where: α260_298' <: ((α260_298',) -> α262_304''), α262_304'' <: ((α261_305'',) -> α263_306'')}›,)  <!<  ((‘a' -> ‘b'),)
//│ ╟── while constraining:  ((‘a' -> ‘b') -> ((‘a' -> ‘b') & ‘c'))  <!<  ((‹∀ 1. {(α261_305'' -> α263_306'') where: α260_298' <: ((α260_298',) -> α262_304''), α262_304'' <: ((α261_305'',) -> α263_306'')}›,) -> α264_307')
//│ ╟── while constraining:  ((‘a' -> ‘b') -> ((‘a' -> ‘b') & ‘c'))  <!<  α259_297'
//│ ╟── while constraining:  (((‘a' -> ‘b') -> ((‘a' -> ‘b') & ‘c')),)  <!<  (α259_297',)
//│ ╟── while constraining:  (α259_297' -> α270_308')  <!<  (((‘a' -> ‘b') -> ((‘a' -> ‘b') & ‘c')) -> ‘c')
//│ ╟── while constraining:  ‹∀ 0. (α259' -> α270')›  <!<  (((‘a' -> ‘b') -> ((‘a' -> ‘b') & ‘c')) -> ‘c')
//│ ╙── while constraining:  ‹∀ 0. (α259' -> α270')›  <!<  ‹∀ 0. ((('a21' -> 'b22') -> (('a21' -> 'b22') & 'c23')) -> 'c23')›
//│  = [Function: z2]

