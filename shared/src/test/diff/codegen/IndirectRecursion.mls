
// * Strangely, why Y does not work (cycle check error),
// * Z type checks find thanks to recursive types...


def z: (('a -> 'b) -> (('a -> 'b) & 'c)) -> 'c
//│ z: (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│  = <missing implementation>

// :e // Works since inconsistent constrained types...
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ((forall 'a, 'b, 'c. ('b -> 'c
//│   where
//│     'a <: 'a -> 'b -> 'c)) -> 'd) -> 'd
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│  = [Function: z]


def pow1 = z (fun pow0 -> fun n -> fun x ->
    if n > 0 then pow0 (n - 1) x * x
    else 1
  )
//│ pow1: int -> int -> int
//│     = [Function (anonymous)]

pow1 3 4
//│ res: int
//│    = 64


:e
z (fun self -> 1)
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.34: 	z (fun self -> 1)
//│ ║        	^^^^^^^^^^^^^^^^^
//│ ╟── integer literal of type `1` is not a function
//│ ║  l.34: 	z (fun self -> 1)
//│ ║        	               ^
//│ ╟── Note: constraint arises from function type:
//│ ║  l.6: 	def z: (('a -> 'b) -> (('a -> 'b) & 'c)) -> 'c
//│ ║       	                       ^^^^^^^^^^
//│ ╟── from intersection type:
//│ ║  l.6: 	def z: (('a -> 'b) -> (('a -> 'b) & 'c)) -> 'c
//│ ╙──     	                      ^^^^^^^^^^^^^^^^^
//│ res: error
//│    = 1


zid = z (fun self -> id)
//│ zid: 'a -> 'a
//│    = [Function: id]

zid 1
//│ res: 1
//│    = 1


zargs = z (fun self -> fun x -> self)
//│ zargs: 'b
//│   where
//│     'b :> anything -> 'b
//│      = [Function (anonymous)]

zargs 1
//│ res: 'b
//│   where
//│     'b :> anything -> 'b
//│    = [Function (anonymous)]

zargs 1 2 3 4
//│ res: 'b
//│   where
//│     'b :> anything -> 'b
//│    = [Function (anonymous)]


loop = z (fun self -> self)
//│ loop: anything -> nothing
//│     = [Function (anonymous)]

:re
loop 1
//│ res: nothing
//│ Runtime error:
//│   RangeError: Maximum call stack size exceeded


def pow pow n x =
    if n > 0 then pow (n - 1) x * x
    else 1
//│ pow: (int -> 'a -> int) -> int -> (int & 'a) -> int
//│    = [Function: pow]

def pow = z pow
pow 3 4
//│ pow: int -> int -> int
//│    = [Function (anonymous)]
//│ res: int
//│    = 64


def oops = z (fun f -> f)
//│ oops: anything -> nothing
//│     = [Function (anonymous)]

:re
oops 1
//│ res: nothing
//│ Runtime error:
//│   RangeError: Maximum call stack size exceeded



:NoRecursiveTypes

:e
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ((forall 'a, 'b, 'c. ('b -> 'c
//│   where
//│     'a <: 'a -> 'b -> 'c)) -> 'd) -> 'd
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition; a type annotation may be required
//│ ║  l.119: 	def z =
//│ ║         	^^^^^^^
//│ ║  l.120: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║         	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ‹∀ 1. {(α305_348' -> α312_352'') where: α296_346' <: ((‹∀ 2. {(α306_350''' -> α308_351''') where: α305_348' <: ((α305_348',) -> α307_349''')}›,) -> α312_352'')}›  <:  ((α305_348',) -> α307_366')    PolymorphicType  FunctionType
//│ ╙──  ... looks like:  ‹∀ 1. {(α305_313'' -> α312_317'') where: α296' <: ((‹∀ 2. {(α306_315''' -> α308_316''') where: α305_313'' <: ((α305_313'',) -> α307_314''')}›,) -> α312_317'')}›  <:  ((α305_313'',) -> α307_349''')
//│  = [Function: z1]

:NoCycleCheck

// Exceeds recursion depth limit:
// :e
// FIXME should be caught by cycle checker!
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ((forall 'a, 'b, 'c. ('b -> 'c
//│   where
//│     'a <: 'a -> 'b -> 'c)) -> 'd) -> 'd
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?d, ?e, ?f, ?g. ?e -> ?d <: forall ?a, ?b, ?c. ((?a -> ?b) -> (?a -> ?b & ?c)) -> ?c` exceeded recursion depth limit (300)
//│ ║  l.141: 	def z =
//│ ║         	^^^^^^^
//│ ║  l.142: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║         	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── while constraining:  ‹∀ 1. {(α378_421' -> α385_425'') where: α369_419' <: ((‹∀ 2. {(α379_423''' -> α381_424''') where: α378_421' <: ((α378_421',) -> α380_422''')}›,) -> α385_425'')}›  <!<  ((α378_421',) -> α380_499')
//│ ╟── while constraining:  α378_421'  <!<  ((α378_421',) -> α380_499')
//│ ╟── while constraining:  {(α379_500' -> α381_501') where: α378_421' <: ((α378_421',) -> α380_499')}  <!<  (‘a_416'' -> ‘b_417'')
//│ ╟── while constraining:  ‹∀ 2. {(α379_423''' -> α381_424''') where: α378_421' <: ((α378_421',) -> α380_422''')}›  <!<  (‘a_416'' -> ‘b_417'')
//│ ╟── while constraining:  (‹∀ 2. {(α379_423''' -> α381_424''') where: α378_421' <: ((α378_421',) -> α380_422''')}›,)  <!<  ((‘a_416'' -> ‘b_417''),)
//│ ╟── while constraining:  ((‘a_416'' -> ‘b_417'') -> ((‘a_416'' -> ‘b_417'') & ‘c_418''))  <!<  ((‹∀ 2. {(α379_423''' -> α381_424''') where: α378_421' <: ((α378_421',) -> α380_422''')}›,) -> α385_498')
//│ ╟── while constraining:  α369_419'  <!<  ((‹∀ 2. {(α379_423''' -> α381_424''') where: α378_421' <: ((α378_421',) -> α380_422''')}›,) -> α385_498')
//│ ╟── while constraining:  {(α378_421' -> α385_498') where: α369_419' <: ((‹∀ 2. {(α379_423''' -> α381_424''') where: α378_421' <: ((α378_421',) -> α380_422''')}›,) -> α385_498')}  <!<  ((α378_421',) -> α380_495')
//│ ╟── while constraining:  ‹∀ 1. {(α378_421' -> α385_425'') where: α369_419' <: ((‹∀ 2. {(α379_423''' -> α381_424''') where: α378_421' <: ((α378_421',) -> α380_422''')}›,) -> α385_425'')}›  <!<  ((α378_421',) -> α380_495')
//│ ╟── while constraining:  α378_421'  <!<  ((α378_421',) -> α380_495')
//│ ╟── while constraining:  {(α379_496' -> α381_497') where: α378_421' <: ((α378_421',) -> α380_495')}  <!<  (‘a_416'' -> ‘b_417'')
//│ ╟── while constraining:  ‹∀ 2. {(α379_423''' -> α381_424''') where: α378_421' <: ((α378_421',) -> α380_422''')}›  <!<  (‘a_416'' -> ‘b_417'')
//│ ╟── while constraining:  (‹∀ 2. {(α379_423''' -> α381_424''') where: α378_421' <: ((α378_421',) -> α380_422''')}›,)  <!<  ((‘a_416'' -> ‘b_417''),)
//│ ╟── while constraining:  ((‘a_416'' -> ‘b_417'') -> ((‘a_416'' -> ‘b_417'') & ‘c_418''))  <!<  ((‹∀ 2. {(α379_423''' -> α381_424''') where: α378_421' <: ((α378_421',) -> α380_422''')}›,) -> α385_494')
//│ ╟── while constraining:  α369_419'  <!<  ((‹∀ 2. {(α379_423''' -> α381_424''') where: α378_421' <: ((α378_421',) -> α380_422''')}›,) -> α385_494')
//│ ╟── ......
//│ ╟── ......
//│ ╟── while constraining:  α370_420'  <!<  α378_421'
//│ ╟── while constraining:  (α370_420',)  <!<  (α378_421',)
//│ ╟── while constraining:  (α378_421' -> α385_434')  <!<  ((α370_420',) -> α372_431')
//│ ╟── while constraining:  {(α378_421' -> α385_434') where: α369_419' <: ((‹∀ 2. {(α379_423''' -> α381_424''') where: α378_421' <: ((α378_421',) -> α380_422''')}›,) -> α385_434')}  <!<  ((α370_420',) -> α372_431')
//│ ╟── while constraining:  ‹∀ 1. {(α378_421' -> α385_425'') where: α369_419' <: ((‹∀ 2. {(α379_423''' -> α381_424''') where: α378_421' <: ((α378_421',) -> α380_422''')}›,) -> α385_425'')}›  <!<  ((α370_420',) -> α372_431')
//│ ╟── while constraining:  α370_420'  <!<  ((α370_420',) -> α372_431')
//│ ╟── while constraining:  {(α371_432' -> α373_433') where: α370_420' <: ((α370_420',) -> α372_431')}  <!<  (‘a_416'' -> ‘b_417'')
//│ ╟── while constraining:  ‹∀ 1. {(α371_427'' -> α373_428'') where: α370_420' <: ((α370_420',) -> α372_426'')}›  <!<  (‘a_416'' -> ‘b_417'')
//│ ╟── while constraining:  (‹∀ 1. {(α371_427'' -> α373_428'') where: α370_420' <: ((α370_420',) -> α372_426'')}›,)  <!<  ((‘a_416'' -> ‘b_417''),)
//│ ╟── while constraining:  ((‘a_416'' -> ‘b_417'') -> ((‘a_416'' -> ‘b_417'') & ‘c_418''))  <!<  ((‹∀ 1. {(α371_427'' -> α373_428'') where: α370_420' <: ((α370_420',) -> α372_426'')}›,) -> α377_429')
//│ ╟── while constraining:  ((‘a_416'' -> ‘b_417'') -> ((‘a_416'' -> ‘b_417'') & ‘c_418''))  <!<  α369_419'
//│ ╟── while constraining:  (((‘a_416'' -> ‘b_417'') -> ((‘a_416'' -> ‘b_417'') & ‘c_418'')),)  <!<  (α369_419',)
//│ ╟── while constraining:  (α369_419' -> α391_430')  <!<  (((‘a_416'' -> ‘b_417'') -> ((‘a_416'' -> ‘b_417'') & ‘c_418'')) -> ‘c_418'')
//│ ╟── while constraining:  ‹∀ 0. (α369' -> α391')›  <!<  (((‘a_416'' -> ‘b_417'') -> ((‘a_416'' -> ‘b_417'') & ‘c_418'')) -> ‘c_418'')
//│ ╙── while constraining:  ‹∀ 0. (α369' -> α391')›  <!<  ‹∀ 0. ((('a21_24' -> 'b22_25') -> (('a21_24' -> 'b22_25') & 'c23_26')) -> 'c23_26')›
//│  = [Function: z2]

