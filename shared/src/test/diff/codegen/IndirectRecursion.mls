
// * Strangely, why Y does not work (cycle check error),
// * Z type checks find thanks to recursive types...


def z: (('a -> 'b) -> (('a -> 'b) & 'c)) -> 'c
//│ z: (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│  = <missing implementation>

:e // due to tapping
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ((forall 'a, 'b, 'c. ('b -> 'c
//│   where
//│     'a <: 'a -> 'b -> 'c)) -> 'd) -> 'd
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│  = [Function: z]


def pow1 = z (fun pow0 -> fun n -> fun x ->
    if n > 0 then pow0 (n - 1) x * x
    else 1
  )
//│ pow1: int -> int -> int
//│     = [Function (anonymous)]

pow1 3 4
//│ res: int
//│    = 64


def pow pow n x =
    if n > 0 then pow (n - 1) x * x
    else 1
//│ pow: (int -> 'a -> int) -> int -> (int & 'a) -> int
//│    = [Function: pow]

def pow = z pow
pow 3 4
//│ pow: int -> int -> int
//│    = [Function (anonymous)]
//│ res: int
//│    = 64


def oops = z (fun f -> f)
//│ oops: anything -> nothing
//│     = [Function (anonymous)]

:re
oops 1
//│ res: nothing
//│ Runtime error:
//│   RangeError: Maximum call stack size exceeded



:NoRecursiveTypes

:e
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ((forall 'a, 'b, 'c. ('b -> 'c
//│   where
//│     'a <: 'a -> 'b -> 'c)) -> 'd) -> 'd
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition; a type annotation may be required
//│ ║  l.62: 	def z =
//│ ║        	^^^^^^^
//│ ║  l.63: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ‹∀ 1. {(α219_259' -> α226_263'') where: α210_257' <: ((‹∀ 2. {(α220_261''' -> α222_262''') where: α219_259' <: ((α219_259',) -> α221_260''')}›,) -> α226_263'')}›  <:  ((α219_259',) -> α221_277')    PolymorphicType  FunctionType
//│ ╙──  ... looks like:  ‹∀ 1. {(α219_227'' -> α226_231'') where: α210' <: ((‹∀ 2. {(α220_229''' -> α222_230''') where: α219_227'' <: ((α219_227'',) -> α221_228''')}›,) -> α226_231'')}›  <:  ((α219_227'',) -> α221_260''')
//│  = [Function: z1]

:NoCycleCheck

// Exceeds recursion depth limit:
// :e
// FIXME should be caught by cycle checker!
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ((forall 'a, 'b, 'c. ('b -> 'c
//│   where
//│     'a <: 'a -> 'b -> 'c)) -> 'd) -> 'd
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?d, ?e, ?f, ?g. ?e -> ?d <: forall ?a, ?b, ?c. ((?a -> ?b) -> (?a -> ?b & ?c)) -> ?c` exceeded recursion depth limit (300)
//│ ║  l.84: 	def z =
//│ ║        	^^^^^^^
//│ ║  l.85: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── while constraining:  ‹∀ 1. {(α289_329' -> α296_333'') where: α280_327' <: ((‹∀ 2. {(α290_331''' -> α292_332''') where: α289_329' <: ((α289_329',) -> α291_330''')}›,) -> α296_333'')}›  <!<  ((α289_329',) -> α291_407')
//│ ╟── while constraining:  α289_329'  <!<  ((α289_329',) -> α291_407')
//│ ╟── while constraining:  {(α290_408' -> α292_409') where: α289_329' <: ((α289_329',) -> α291_407')}  <!<  (‘a' -> ‘b')
//│ ╟── while constraining:  ‹∀ 2. {(α290_331''' -> α292_332''') where: α289_329' <: ((α289_329',) -> α291_330''')}›  <!<  (‘a' -> ‘b')
//│ ╟── while constraining:  (‹∀ 2. {(α290_331''' -> α292_332''') where: α289_329' <: ((α289_329',) -> α291_330''')}›,)  <!<  ((‘a' -> ‘b'),)
//│ ╟── while constraining:  ((‘a' -> ‘b') -> ((‘a' -> ‘b') & ‘c'))  <!<  ((‹∀ 2. {(α290_331''' -> α292_332''') where: α289_329' <: ((α289_329',) -> α291_330''')}›,) -> α296_406')
//│ ╟── while constraining:  α280_327'  <!<  ((‹∀ 2. {(α290_331''' -> α292_332''') where: α289_329' <: ((α289_329',) -> α291_330''')}›,) -> α296_406')
//│ ╟── while constraining:  {(α289_329' -> α296_406') where: α280_327' <: ((‹∀ 2. {(α290_331''' -> α292_332''') where: α289_329' <: ((α289_329',) -> α291_330''')}›,) -> α296_406')}  <!<  ((α289_329',) -> α291_403')
//│ ╟── while constraining:  ‹∀ 1. {(α289_329' -> α296_333'') where: α280_327' <: ((‹∀ 2. {(α290_331''' -> α292_332''') where: α289_329' <: ((α289_329',) -> α291_330''')}›,) -> α296_333'')}›  <!<  ((α289_329',) -> α291_403')
//│ ╟── while constraining:  α289_329'  <!<  ((α289_329',) -> α291_403')
//│ ╟── while constraining:  {(α290_404' -> α292_405') where: α289_329' <: ((α289_329',) -> α291_403')}  <!<  (‘a' -> ‘b')
//│ ╟── while constraining:  ‹∀ 2. {(α290_331''' -> α292_332''') where: α289_329' <: ((α289_329',) -> α291_330''')}›  <!<  (‘a' -> ‘b')
//│ ╟── while constraining:  (‹∀ 2. {(α290_331''' -> α292_332''') where: α289_329' <: ((α289_329',) -> α291_330''')}›,)  <!<  ((‘a' -> ‘b'),)
//│ ╟── while constraining:  ((‘a' -> ‘b') -> ((‘a' -> ‘b') & ‘c'))  <!<  ((‹∀ 2. {(α290_331''' -> α292_332''') where: α289_329' <: ((α289_329',) -> α291_330''')}›,) -> α296_402')
//│ ╟── while constraining:  α280_327'  <!<  ((‹∀ 2. {(α290_331''' -> α292_332''') where: α289_329' <: ((α289_329',) -> α291_330''')}›,) -> α296_402')
//│ ╟── ......
//│ ╟── ......
//│ ╟── while constraining:  α281_328'  <!<  α289_329'
//│ ╟── while constraining:  (α281_328',)  <!<  (α289_329',)
//│ ╟── while constraining:  (α289_329' -> α296_342')  <!<  ((α281_328',) -> α283_339')
//│ ╟── while constraining:  {(α289_329' -> α296_342') where: α280_327' <: ((‹∀ 2. {(α290_331''' -> α292_332''') where: α289_329' <: ((α289_329',) -> α291_330''')}›,) -> α296_342')}  <!<  ((α281_328',) -> α283_339')
//│ ╟── while constraining:  ‹∀ 1. {(α289_329' -> α296_333'') where: α280_327' <: ((‹∀ 2. {(α290_331''' -> α292_332''') where: α289_329' <: ((α289_329',) -> α291_330''')}›,) -> α296_333'')}›  <!<  ((α281_328',) -> α283_339')
//│ ╟── while constraining:  α281_328'  <!<  ((α281_328',) -> α283_339')
//│ ╟── while constraining:  {(α282_340' -> α284_341') where: α281_328' <: ((α281_328',) -> α283_339')}  <!<  (‘a' -> ‘b')
//│ ╟── while constraining:  ‹∀ 1. {(α282_335'' -> α284_336'') where: α281_328' <: ((α281_328',) -> α283_334'')}›  <!<  (‘a' -> ‘b')
//│ ╟── while constraining:  (‹∀ 1. {(α282_335'' -> α284_336'') where: α281_328' <: ((α281_328',) -> α283_334'')}›,)  <!<  ((‘a' -> ‘b'),)
//│ ╟── while constraining:  ((‘a' -> ‘b') -> ((‘a' -> ‘b') & ‘c'))  <!<  ((‹∀ 1. {(α282_335'' -> α284_336'') where: α281_328' <: ((α281_328',) -> α283_334'')}›,) -> α288_337')
//│ ╟── while constraining:  ((‘a' -> ‘b') -> ((‘a' -> ‘b') & ‘c'))  <!<  α280_327'
//│ ╟── while constraining:  (((‘a' -> ‘b') -> ((‘a' -> ‘b') & ‘c')),)  <!<  (α280_327',)
//│ ╟── while constraining:  (α280_327' -> α302_338')  <!<  (((‘a' -> ‘b') -> ((‘a' -> ‘b') & ‘c')) -> ‘c')
//│ ╟── while constraining:  ‹∀ 0. (α280' -> α302')›  <!<  (((‘a' -> ‘b') -> ((‘a' -> ‘b') & ‘c')) -> ‘c')
//│ ╙── while constraining:  ‹∀ 0. (α280' -> α302')›  <!<  ‹∀ 0. ((('a21_24' -> 'b22_25') -> (('a21_24' -> 'b22_25') & 'c23_26')) -> 'c23_26')›
//│  = [Function: z2]

