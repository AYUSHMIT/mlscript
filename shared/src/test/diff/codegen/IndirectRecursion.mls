
// * Strangely, why Y does not work (cycle check error),
// * Z type checks find thanks to recursive types...


def z: (('a -> 'b) -> (('a -> 'b) & 'c)) -> 'c
//│ z: (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│  = <missing implementation>

// :e // Works since inconsistent constrained types...
:e // No longer signature-checks after fix to freshening levels
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ (('a -> 'b
//│   where
//│     forall 'c. ('d -> 'e
//│   where
//│     'c <: (forall 'd, 'f, 'g, 'h. ('f -> 'g
//│   where
//│     'd <: 'd -> ('f -> 'g & 'h))) -> 'e) <: (forall 'c. ('d -> 'e
//│   where
//│     'c <: (forall 'd, 'f, 'g, 'h. ('f -> 'g
//│   where
//│     'd <: 'd -> ('f -> 'g & 'h))) -> 'e)) -> ('a -> 'b & 'i)) -> 'j & 'c) -> 'j
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition; a type annotation may be required
//│ ║  l.12: 	def z =
//│ ║        	^^^^^^^
//│ ║  l.13: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ‹∀ 1. {(α45_105'' -> α52_109'') where: α36_103' :> ((‹∀ 2. {(α46_107''' -> α48_108''') where: α45_105'' :> ((α45_105'',) -> α47_106''')}›,) -> α52_109'')}›  <:  α45_126'    PolymorphicType  TypeVariable
//│ ╙──  ... looks like:  ‹∀ 1. {(α45_53'' -> α52_57'') where: α36' :> ((‹∀ 2. {(α46_55''' -> α48_56''') where: α45_53'' :> ((α45_53'',) -> α47_54''')}›,) -> α52_57'')}›  <:  α45_105''
//│  = [Function: z]


def pow1 = z (fun pow0 -> fun n -> fun x ->
    if n > 0 then pow0 (n - 1) x * x
    else 1
  )
//│ pow1: int -> int -> int
//│     = [Function: pow1]

pow1 3 4
//│ res: int
//│    = 64


:e
z (fun self -> 1)
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.51: 	z (fun self -> 1)
//│ ║        	^^^^^^^^^^^^^^^^^
//│ ╟── integer literal of type `1` is not a function
//│ ║  l.51: 	z (fun self -> 1)
//│ ║        	               ^
//│ ╟── Note: constraint arises from function type:
//│ ║  l.6: 	def z: (('a -> 'b) -> (('a -> 'b) & 'c)) -> 'c
//│ ║       	                       ^^^^^^^^^^
//│ ╟── from intersection type:
//│ ║  l.6: 	def z: (('a -> 'b) -> (('a -> 'b) & 'c)) -> 'c
//│ ╙──     	                      ^^^^^^^^^^^^^^^^^
//│ res: error
//│    = 1


zid = z (fun self -> id)
//│ zid: 'a -> 'a
//│    = [Function: id]

zid 1
//│ res: 1
//│    = 1


zargs = z (fun self -> fun x -> self)
//│ zargs: 'b
//│   where
//│     'b :> anything -> 'b
//│      = [Function (anonymous)]

zargs 1
//│ res: 'b
//│   where
//│     'b :> anything -> 'b
//│    = [Function (anonymous)]

zargs 1 2 3 4
//│ res: 'b
//│   where
//│     'b :> anything -> 'b
//│    = [Function (anonymous)]


loop = z (fun self -> self)
//│ loop: anything -> nothing
//│     = [Function (anonymous)]

:re
loop 1
//│ res: nothing
//│ Runtime error:
//│   RangeError: Maximum call stack size exceeded


def pow pow n x =
    if n > 0 then pow (n - 1) x * x
    else 1
//│ pow: (int -> 'a -> int) -> int -> (int & 'a) -> int
//│    = [Function: pow]

def pow = z pow
pow 3 4
//│ pow: int -> int -> int
//│    = [Function: pow2]
//│ res: int
//│    = 64


def oops = z (fun f -> f)
//│ oops: anything -> nothing
//│     = [Function: oops]

:re
oops 1
//│ res: nothing
//│ Runtime error:
//│   RangeError: Maximum call stack size exceeded



:NoRecursiveTypes

:e
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ (('a -> 'b
//│   where
//│     forall 'c. ('d -> 'e
//│   where
//│     'c <: (forall 'd, 'f, 'g, 'h. ('f -> 'g
//│   where
//│     'd <: 'd -> ('f -> 'g & 'h))) -> 'e) <: (forall 'c. ('d -> 'e
//│   where
//│     'c <: (forall 'd, 'f, 'g, 'h. ('f -> 'g
//│   where
//│     'd <: 'd -> ('f -> 'g & 'h))) -> 'e)) -> ('a -> 'b & 'i)) -> 'j & 'c) -> 'j
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition; a type annotation may be required
//│ ║  l.136: 	def z =
//│ ║         	^^^^^^^
//│ ║  l.137: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║         	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ‹∀ 1. {(α333_393'' -> α340_397'') where: α324_391' :> ((‹∀ 2. {(α334_395''' -> α336_396''') where: α333_393'' :> ((α333_393'',) -> α335_394''')}›,) -> α340_397'')}›  <:  α333_414'    PolymorphicType  TypeVariable
//│ ╙──  ... looks like:  ‹∀ 1. {(α333_341'' -> α340_345'') where: α324' :> ((‹∀ 2. {(α334_343''' -> α336_344''') where: α333_341'' :> ((α333_341'',) -> α335_342''')}›,) -> α340_345'')}›  <:  α333_393''
//│  = [Function: z1]

:NoCycleCheck

// Exceeds recursion depth limit:
// :e
// FIXME should be caught by cycle checker!
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ (('a -> 'b
//│   where
//│     forall 'c. ('d -> 'e
//│   where
//│     'c <: (forall 'd, 'f, 'g, 'h. ('f -> 'g
//│   where
//│     'd <: 'd -> ('f -> 'g & 'h))) -> 'e) <: (forall 'c. ('d -> 'e
//│   where
//│     'c <: (forall 'd, 'f, 'g, 'h. ('f -> 'g
//│   where
//│     'd <: 'd -> ('f -> 'g & 'h))) -> 'e)) -> ('a -> 'b & 'i)) -> 'j & 'c) -> 'j
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?d, ?e, ?f, ?g. ?e -> ?d <: forall ?a, ?b, ?c. ((?a -> ?b) -> (?a -> ?b & ?c)) -> ?c` exceeded recursion depth limit (300)
//│ ║  l.166: 	def z =
//│ ║         	^^^^^^^
//│ ║  l.167: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║         	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── while constraining:  ‹∀ 1. {(α431_491'' -> α438_495'') where: α422_489' :> ((‹∀ 2. {(α432_493''' -> α434_494''') where: α431_491'' :> ((α431_491'',) -> α433_492''')}›,) -> α438_495'')}›  <!<  α431_576'
//│ ╟── while constraining:  α431_568'  <!<  α431_576'
//│ ╟── while constraining:  (α431_568',)  <!<  (α431_576',)
//│ ╟── while constraining:  (α431_576' -> α438_580')  <!<  ((α431_568',) -> α433_573')
//│ ╟── while constraining:  {(α431_576' -> α438_580') where: α422_489' :> ((‹∀ 2. {(α432_578''' -> α434_579''') where: α431_576' :> ((α431_576',) -> α433_577''')}›,) -> α438_580')}  <!<  ((α431_568',) -> α433_573')
//│ ╟── while constraining:  ‹∀ 1. {(α431_491'' -> α438_495'') where: α422_489' :> ((‹∀ 2. {(α432_493''' -> α434_494''') where: α431_491'' :> ((α431_491'',) -> α433_492''')}›,) -> α438_495'')}›  <!<  ((α431_568',) -> α433_573')
//│ ╟── while constraining:  ‹∀ 1. {(α431_491'' -> α438_495'') where: α422_489' :> ((‹∀ 2. {(α432_493''' -> α434_494''') where: α431_491'' :> ((α431_491'',) -> α433_492''')}›,) -> α438_495'')}›  <!<  α431_568'
//│ ╟── while constraining:  α431_560'  <!<  α431_568'
//│ ╟── while constraining:  (α431_560',)  <!<  (α431_568',)
//│ ╟── while constraining:  (α431_568' -> α438_572')  <!<  ((α431_560',) -> α433_565')
//│ ╟── while constraining:  {(α431_568' -> α438_572') where: α422_489' :> ((‹∀ 2. {(α432_570''' -> α434_571''') where: α431_568' :> ((α431_568',) -> α433_569''')}›,) -> α438_572')}  <!<  ((α431_560',) -> α433_565')
//│ ╟── while constraining:  ‹∀ 1. {(α431_491'' -> α438_495'') where: α422_489' :> ((‹∀ 2. {(α432_493''' -> α434_494''') where: α431_491'' :> ((α431_491'',) -> α433_492''')}›,) -> α438_495'')}›  <!<  ((α431_560',) -> α433_565')
//│ ╟── while constraining:  ‹∀ 1. {(α431_491'' -> α438_495'') where: α422_489' :> ((‹∀ 2. {(α432_493''' -> α434_494''') where: α431_491'' :> ((α431_491'',) -> α433_492''')}›,) -> α438_495'')}›  <!<  α431_560'
//│ ╟── while constraining:  α431_552'  <!<  α431_560'
//│ ╟── while constraining:  (α431_552',)  <!<  (α431_560',)
//│ ╟── ......
//│ ╟── ......
//│ ╟── while constraining:  α423_490'  <!<  α431_504'
//│ ╟── while constraining:  (α423_490',)  <!<  (α431_504',)
//│ ╟── while constraining:  (α431_504' -> α438_508')  <!<  ((α423_490',) -> α425_501')
//│ ╟── while constraining:  {(α431_504' -> α438_508') where: α422_489' :> ((‹∀ 2. {(α432_506''' -> α434_507''') where: α431_504' :> ((α431_504',) -> α433_505''')}›,) -> α438_508')}  <!<  ((α423_490',) -> α425_501')
//│ ╟── while constraining:  ‹∀ 1. {(α431_491'' -> α438_495'') where: α422_489' :> ((‹∀ 2. {(α432_493''' -> α434_494''') where: α431_491'' :> ((α431_491'',) -> α433_492''')}›,) -> α438_495'')}›  <!<  ((α423_490',) -> α425_501')
//│ ╟── while constraining:  α423_490'  <!<  ((α423_490',) -> α425_501')
//│ ╟── while constraining:  {(α424_502' -> α426_503') where: α423_490' :> ((α423_490',) -> α425_501')}  <!<  (‘a_486' -> ‘b_487')
//│ ╟── while constraining:  ‹∀ 1. {(α424_497'' -> α426_498'') where: α423_490' :> ((α423_490',) -> α425_496'')}›  <!<  (‘a_486' -> ‘b_487')
//│ ╟── while constraining:  (‹∀ 1. {(α424_497'' -> α426_498'') where: α423_490' :> ((α423_490',) -> α425_496'')}›,)  <!<  ((‘a_486' -> ‘b_487'),)
//│ ╟── while constraining:  ((‘a_486' -> ‘b_487') -> ((‘a_486' -> ‘b_487') & ‘c_488'))  <!<  ((‹∀ 1. {(α424_497'' -> α426_498'') where: α423_490' :> ((α423_490',) -> α425_496'')}›,) -> α430_499')
//│ ╟── while constraining:  ((‘a_486' -> ‘b_487') -> ((‘a_486' -> ‘b_487') & ‘c_488'))  <!<  α422_489'
//│ ╟── while constraining:  (((‘a_486' -> ‘b_487') -> ((‘a_486' -> ‘b_487') & ‘c_488')),)  <!<  (α422_489',)
//│ ╟── while constraining:  (α422_489' -> α444_500')  <!<  (((‘a_486' -> ‘b_487') -> ((‘a_486' -> ‘b_487') & ‘c_488')) -> ‘c_488')
//│ ╟── while constraining:  ‹∀ 0. (α422' -> α444')›  <!<  (((‘a_486' -> ‘b_487') -> ((‘a_486' -> ‘b_487') & ‘c_488')) -> ‘c_488')
//│ ╙── while constraining:  ‹∀ 0. (α422' -> α444')›  <!<  ‹∀ 0. ((('a21_24' -> 'b22_25') -> (('a21_24' -> 'b22_25') & 'c23_26')) -> 'c23_26')›
//│  = [Function: z2]

