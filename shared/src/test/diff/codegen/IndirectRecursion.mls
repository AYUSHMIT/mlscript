
// * Strangely, why Y does not work (cycle check error),
// * Z type checks find thanks to recursive types...


def z: (('a -> 'b) -> (('a -> 'b) & 'c)) -> 'c
//│ z: (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│  = <missing implementation>

// :e // Works since inconsistent constrained types...
:e // No longer signature-checks after fix to freshening levels
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ((forall 'a, 'b, 'c, 'd. ('b -> 'c
//│   where
//│     'a <: 'a -> ('b -> 'c & 'd))) -> 'e) -> 'e
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition; a type annotation may be required
//│ ║  l.12: 	def z =
//│ ║        	^^^^^^^
//│ ║  l.13: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ‹∀ 1. {(α45_90'' -> α52_94'') where: α36_88' <: ((‹∀ 2. {(α46_92''' -> α48_93''') where: α45_90'' <: ((α45_90'',) -> α47_91''')}›,) -> α52_94'')}›  <:  α45_111'    PolymorphicType  TypeVariable
//│ ╙──  ... looks like:  ‹∀ 1. {(α45_53'' -> α52_57'') where: α36' <: ((‹∀ 2. {(α46_55''' -> α48_56''') where: α45_53'' <: ((α45_53'',) -> α47_54''')}›,) -> α52_57'')}›  <:  α45_90''
//│  = [Function: z]


def pow1 = z (fun pow0 -> fun n -> fun x ->
    if n > 0 then pow0 (n - 1) x * x
    else 1
  )
//│ pow1: int -> int -> int
//│     = [Function: pow1]

pow1 3 4
//│ res: int
//│    = 64


:e
z (fun self -> 1)
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.43: 	z (fun self -> 1)
//│ ║        	^^^^^^^^^^^^^^^^^
//│ ╟── integer literal of type `1` is not a function
//│ ║  l.43: 	z (fun self -> 1)
//│ ║        	               ^
//│ ╟── Note: constraint arises from function type:
//│ ║  l.6: 	def z: (('a -> 'b) -> (('a -> 'b) & 'c)) -> 'c
//│ ║       	                       ^^^^^^^^^^
//│ ╟── from intersection type:
//│ ║  l.6: 	def z: (('a -> 'b) -> (('a -> 'b) & 'c)) -> 'c
//│ ╙──     	                      ^^^^^^^^^^^^^^^^^
//│ res: error
//│    = 1


zid = z (fun self -> id)
//│ zid: 'a -> 'a
//│    = [Function: id]

zid 1
//│ res: 1
//│    = 1


zargs = z (fun self -> fun x -> self)
//│ zargs: 'b
//│   where
//│     'b :> anything -> 'b
//│      = [Function (anonymous)]

zargs 1
//│ res: 'b
//│   where
//│     'b :> anything -> 'b
//│    = [Function (anonymous)]

zargs 1 2 3 4
//│ res: 'b
//│   where
//│     'b :> anything -> 'b
//│    = [Function (anonymous)]


loop = z (fun self -> self)
//│ loop: anything -> nothing
//│     = [Function (anonymous)]

:re
loop 1
//│ res: nothing
//│ Runtime error:
//│   RangeError: Maximum call stack size exceeded


def pow pow n x =
    if n > 0 then pow (n - 1) x * x
    else 1
//│ pow: (int -> 'a -> int) -> int -> (int & 'a) -> int
//│    = [Function: pow]

def pow = z pow
pow 3 4
//│ pow: int -> int -> int
//│    = [Function: pow2]
//│ res: int
//│    = 64


def oops = z (fun f -> f)
//│ oops: anything -> nothing
//│     = [Function: oops]

:re
oops 1
//│ res: nothing
//│ Runtime error:
//│   RangeError: Maximum call stack size exceeded



:NoRecursiveTypes

:e
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ((forall 'a, 'b, 'c, 'd. ('b -> 'c
//│   where
//│     'a <: 'a -> ('b -> 'c & 'd))) -> 'e) -> 'e
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition; a type annotation may be required
//│ ║  l.128: 	def z =
//│ ║         	^^^^^^^
//│ ║  l.129: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║         	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ‹∀ 1. {(α318_363'' -> α325_367'') where: α309_361' <: ((‹∀ 2. {(α319_365''' -> α321_366''') where: α318_363'' <: ((α318_363'',) -> α320_364''')}›,) -> α325_367'')}›  <:  α318_384'    PolymorphicType  TypeVariable
//│ ╙──  ... looks like:  ‹∀ 1. {(α318_326'' -> α325_330'') where: α309' <: ((‹∀ 2. {(α319_328''' -> α321_329''') where: α318_326'' <: ((α318_326'',) -> α320_327''')}›,) -> α325_330'')}›  <:  α318_363''
//│  = [Function: z1]

:NoCycleCheck

// Exceeds recursion depth limit:
// :e
// FIXME should be caught by cycle checker!
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ((forall 'a, 'b, 'c, 'd. ('b -> 'c
//│   where
//│     'a <: 'a -> ('b -> 'c & 'd))) -> 'e) -> 'e
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?d, ?e, ?f, ?g. ?e -> ?d <: forall ?a, ?b, ?c. ((?a -> ?b) -> (?a -> ?b & ?c)) -> ?c` exceeded recursion depth limit (300)
//│ ║  l.150: 	def z =
//│ ║         	^^^^^^^
//│ ║  l.151: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║         	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── while constraining:  ‹∀ 1. {(α401_446'' -> α408_450'') where: α392_444' <: ((‹∀ 2. {(α402_448''' -> α404_449''') where: α401_446'' <: ((α401_446'',) -> α403_447''')}›,) -> α408_450'')}›  <!<  α401_531'
//│ ╟── while constraining:  α401_523'  <!<  α401_531'
//│ ╟── while constraining:  (α401_523',)  <!<  (α401_531',)
//│ ╟── while constraining:  (α401_531' -> α408_535')  <!<  ((α401_523',) -> α403_528')
//│ ╟── while constraining:  {(α401_531' -> α408_535') where: α392_444' <: ((‹∀ 2. {(α402_533''' -> α404_534''') where: α401_531' <: ((α401_531',) -> α403_532''')}›,) -> α408_535')}  <!<  ((α401_523',) -> α403_528')
//│ ╟── while constraining:  ‹∀ 1. {(α401_446'' -> α408_450'') where: α392_444' <: ((‹∀ 2. {(α402_448''' -> α404_449''') where: α401_446'' <: ((α401_446'',) -> α403_447''')}›,) -> α408_450'')}›  <!<  ((α401_523',) -> α403_528')
//│ ╟── while constraining:  ‹∀ 1. {(α401_446'' -> α408_450'') where: α392_444' <: ((‹∀ 2. {(α402_448''' -> α404_449''') where: α401_446'' <: ((α401_446'',) -> α403_447''')}›,) -> α408_450'')}›  <!<  α401_523'
//│ ╟── while constraining:  α401_515'  <!<  α401_523'
//│ ╟── while constraining:  (α401_515',)  <!<  (α401_523',)
//│ ╟── while constraining:  (α401_523' -> α408_527')  <!<  ((α401_515',) -> α403_520')
//│ ╟── while constraining:  {(α401_523' -> α408_527') where: α392_444' <: ((‹∀ 2. {(α402_525''' -> α404_526''') where: α401_523' <: ((α401_523',) -> α403_524''')}›,) -> α408_527')}  <!<  ((α401_515',) -> α403_520')
//│ ╟── while constraining:  ‹∀ 1. {(α401_446'' -> α408_450'') where: α392_444' <: ((‹∀ 2. {(α402_448''' -> α404_449''') where: α401_446'' <: ((α401_446'',) -> α403_447''')}›,) -> α408_450'')}›  <!<  ((α401_515',) -> α403_520')
//│ ╟── while constraining:  ‹∀ 1. {(α401_446'' -> α408_450'') where: α392_444' <: ((‹∀ 2. {(α402_448''' -> α404_449''') where: α401_446'' <: ((α401_446'',) -> α403_447''')}›,) -> α408_450'')}›  <!<  α401_515'
//│ ╟── while constraining:  α401_507'  <!<  α401_515'
//│ ╟── while constraining:  (α401_507',)  <!<  (α401_515',)
//│ ╟── ......
//│ ╟── ......
//│ ╟── while constraining:  α393_445'  <!<  α401_459'
//│ ╟── while constraining:  (α393_445',)  <!<  (α401_459',)
//│ ╟── while constraining:  (α401_459' -> α408_463')  <!<  ((α393_445',) -> α395_456')
//│ ╟── while constraining:  {(α401_459' -> α408_463') where: α392_444' <: ((‹∀ 2. {(α402_461''' -> α404_462''') where: α401_459' <: ((α401_459',) -> α403_460''')}›,) -> α408_463')}  <!<  ((α393_445',) -> α395_456')
//│ ╟── while constraining:  ‹∀ 1. {(α401_446'' -> α408_450'') where: α392_444' <: ((‹∀ 2. {(α402_448''' -> α404_449''') where: α401_446'' <: ((α401_446'',) -> α403_447''')}›,) -> α408_450'')}›  <!<  ((α393_445',) -> α395_456')
//│ ╟── while constraining:  α393_445'  <!<  ((α393_445',) -> α395_456')
//│ ╟── while constraining:  {(α394_457' -> α396_458') where: α393_445' <: ((α393_445',) -> α395_456')}  <!<  (‘a_441' -> ‘b_442')
//│ ╟── while constraining:  ‹∀ 1. {(α394_452'' -> α396_453'') where: α393_445' <: ((α393_445',) -> α395_451'')}›  <!<  (‘a_441' -> ‘b_442')
//│ ╟── while constraining:  (‹∀ 1. {(α394_452'' -> α396_453'') where: α393_445' <: ((α393_445',) -> α395_451'')}›,)  <!<  ((‘a_441' -> ‘b_442'),)
//│ ╟── while constraining:  ((‘a_441' -> ‘b_442') -> ((‘a_441' -> ‘b_442') & ‘c_443'))  <!<  ((‹∀ 1. {(α394_452'' -> α396_453'') where: α393_445' <: ((α393_445',) -> α395_451'')}›,) -> α400_454')
//│ ╟── while constraining:  ((‘a_441' -> ‘b_442') -> ((‘a_441' -> ‘b_442') & ‘c_443'))  <!<  α392_444'
//│ ╟── while constraining:  (((‘a_441' -> ‘b_442') -> ((‘a_441' -> ‘b_442') & ‘c_443')),)  <!<  (α392_444',)
//│ ╟── while constraining:  (α392_444' -> α414_455')  <!<  (((‘a_441' -> ‘b_442') -> ((‘a_441' -> ‘b_442') & ‘c_443')) -> ‘c_443')
//│ ╟── while constraining:  ‹∀ 0. (α392' -> α414')›  <!<  (((‘a_441' -> ‘b_442') -> ((‘a_441' -> ‘b_442') & ‘c_443')) -> ‘c_443')
//│ ╙── while constraining:  ‹∀ 0. (α392' -> α414')›  <!<  ‹∀ 0. ((('a21_24' -> 'b22_25') -> (('a21_24' -> 'b22_25') & 'c23_26')) -> 'c23_26')›
//│  = [Function: z2]

