
// * Strangely, why Y does not work (cycle check error),
// * Z type checks find thanks to recursive types...


def z: (('a -> 'b) -> (('a -> 'b) & 'c)) -> 'c
//│ z: (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│  = <missing implementation>

// :e // Works since inconsistent constrained types...
:e // No longer signature-checks after fix to freshening levels
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ((forall 'a, 'b, 'c. ('b -> 'c
//│   where
//│     'a <: 'a -> 'b -> 'c)) -> 'd) -> 'd
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition; a type annotation may be required
//│ ║  l.12: 	def z =
//│ ║        	^^^^^^^
//│ ║  l.13: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ‹∀ 1. {(α45_88'' -> α52_92'') where: α36_86' <: ((‹∀ 2. {(α46_90''' -> α48_91''') where: α45_88'' <: ((α45_88'',) -> α47_89''')}›,) -> α52_92'')}›  <:  α45_109'    PolymorphicType  TypeVariable
//│ ╙──  ... looks like:  ‹∀ 1. {(α45_53'' -> α52_57'') where: α36' <: ((‹∀ 2. {(α46_55''' -> α48_56''') where: α45_53'' <: ((α45_53'',) -> α47_54''')}›,) -> α52_57'')}›  <:  α45_88''
//│  = [Function: z]


def pow1 = z (fun pow0 -> fun n -> fun x ->
    if n > 0 then pow0 (n - 1) x * x
    else 1
  )
//│ pow1: int -> int -> int
//│     = [Function (anonymous)]

pow1 3 4
//│ res: int
//│    = 64


:e
z (fun self -> 1)
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.43: 	z (fun self -> 1)
//│ ║        	^^^^^^^^^^^^^^^^^
//│ ╟── integer literal of type `1` is not a function
//│ ║  l.43: 	z (fun self -> 1)
//│ ║        	               ^
//│ ╟── Note: constraint arises from function type:
//│ ║  l.6: 	def z: (('a -> 'b) -> (('a -> 'b) & 'c)) -> 'c
//│ ║       	                       ^^^^^^^^^^
//│ ╟── from intersection type:
//│ ║  l.6: 	def z: (('a -> 'b) -> (('a -> 'b) & 'c)) -> 'c
//│ ╙──     	                      ^^^^^^^^^^^^^^^^^
//│ res: error
//│    = 1


zid = z (fun self -> id)
//│ zid: 'a -> 'a
//│    = [Function: id]

zid 1
//│ res: 1
//│    = 1


zargs = z (fun self -> fun x -> self)
//│ zargs: 'b
//│   where
//│     'b :> anything -> 'b
//│      = [Function (anonymous)]

zargs 1
//│ res: 'b
//│   where
//│     'b :> anything -> 'b
//│    = [Function (anonymous)]

zargs 1 2 3 4
//│ res: 'b
//│   where
//│     'b :> anything -> 'b
//│    = [Function (anonymous)]


loop = z (fun self -> self)
//│ loop: anything -> nothing
//│     = [Function (anonymous)]

:re
loop 1
//│ res: nothing
//│ Runtime error:
//│   RangeError: Maximum call stack size exceeded


def pow pow n x =
    if n > 0 then pow (n - 1) x * x
    else 1
//│ pow: (int -> 'a -> int) -> int -> (int & 'a) -> int
//│    = [Function: pow]

def pow = z pow
pow 3 4
//│ pow: int -> int -> int
//│    = [Function (anonymous)]
//│ res: int
//│    = 64


def oops = z (fun f -> f)
//│ oops: anything -> nothing
//│     = [Function (anonymous)]

:re
oops 1
//│ res: nothing
//│ Runtime error:
//│   RangeError: Maximum call stack size exceeded



:NoRecursiveTypes

:e
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ((forall 'a, 'b, 'c. ('b -> 'c
//│   where
//│     'a <: 'a -> 'b -> 'c)) -> 'd) -> 'd
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition; a type annotation may be required
//│ ║  l.128: 	def z =
//│ ║         	^^^^^^^
//│ ║  l.129: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║         	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ‹∀ 1. {(α316_359'' -> α323_363'') where: α307_357' <: ((‹∀ 2. {(α317_361''' -> α319_362''') where: α316_359'' <: ((α316_359'',) -> α318_360''')}›,) -> α323_363'')}›  <:  α316_380'    PolymorphicType  TypeVariable
//│ ╙──  ... looks like:  ‹∀ 1. {(α316_324'' -> α323_328'') where: α307' <: ((‹∀ 2. {(α317_326''' -> α319_327''') where: α316_324'' <: ((α316_324'',) -> α318_325''')}›,) -> α323_328'')}›  <:  α316_359''
//│  = [Function: z1]

:NoCycleCheck

// Exceeds recursion depth limit:
// :e
// FIXME should be caught by cycle checker!
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ((forall 'a, 'b, 'c. ('b -> 'c
//│   where
//│     'a <: 'a -> 'b -> 'c)) -> 'd) -> 'd
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?d, ?e, ?f, ?g. ?e -> ?d <: forall ?a, ?b, ?c. ((?a -> ?b) -> (?a -> ?b & ?c)) -> ?c` exceeded recursion depth limit (300)
//│ ║  l.150: 	def z =
//│ ║         	^^^^^^^
//│ ║  l.151: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║         	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── while constraining:  ‹∀ 1. {(α397_440'' -> α404_444'') where: α388_438' <: ((‹∀ 2. {(α398_442''' -> α400_443''') where: α397_440'' <: ((α397_440'',) -> α399_441''')}›,) -> α404_444'')}›  <!<  α397_525'
//│ ╟── while constraining:  α397_517'  <!<  α397_525'
//│ ╟── while constraining:  (α397_517',)  <!<  (α397_525',)
//│ ╟── while constraining:  (α397_525' -> α404_529')  <!<  ((α397_517',) -> α399_522')
//│ ╟── while constraining:  {(α397_525' -> α404_529') where: α388_438' <: ((‹∀ 2. {(α398_527''' -> α400_528''') where: α397_525' <: ((α397_525',) -> α399_526''')}›,) -> α404_529')}  <!<  ((α397_517',) -> α399_522')
//│ ╟── while constraining:  ‹∀ 1. {(α397_440'' -> α404_444'') where: α388_438' <: ((‹∀ 2. {(α398_442''' -> α400_443''') where: α397_440'' <: ((α397_440'',) -> α399_441''')}›,) -> α404_444'')}›  <!<  ((α397_517',) -> α399_522')
//│ ╟── while constraining:  ‹∀ 1. {(α397_440'' -> α404_444'') where: α388_438' <: ((‹∀ 2. {(α398_442''' -> α400_443''') where: α397_440'' <: ((α397_440'',) -> α399_441''')}›,) -> α404_444'')}›  <!<  α397_517'
//│ ╟── while constraining:  α397_509'  <!<  α397_517'
//│ ╟── while constraining:  (α397_509',)  <!<  (α397_517',)
//│ ╟── while constraining:  (α397_517' -> α404_521')  <!<  ((α397_509',) -> α399_514')
//│ ╟── while constraining:  {(α397_517' -> α404_521') where: α388_438' <: ((‹∀ 2. {(α398_519''' -> α400_520''') where: α397_517' <: ((α397_517',) -> α399_518''')}›,) -> α404_521')}  <!<  ((α397_509',) -> α399_514')
//│ ╟── while constraining:  ‹∀ 1. {(α397_440'' -> α404_444'') where: α388_438' <: ((‹∀ 2. {(α398_442''' -> α400_443''') where: α397_440'' <: ((α397_440'',) -> α399_441''')}›,) -> α404_444'')}›  <!<  ((α397_509',) -> α399_514')
//│ ╟── while constraining:  ‹∀ 1. {(α397_440'' -> α404_444'') where: α388_438' <: ((‹∀ 2. {(α398_442''' -> α400_443''') where: α397_440'' <: ((α397_440'',) -> α399_441''')}›,) -> α404_444'')}›  <!<  α397_509'
//│ ╟── while constraining:  α397_501'  <!<  α397_509'
//│ ╟── while constraining:  (α397_501',)  <!<  (α397_509',)
//│ ╟── ......
//│ ╟── ......
//│ ╟── while constraining:  α389_439'  <!<  α397_453'
//│ ╟── while constraining:  (α389_439',)  <!<  (α397_453',)
//│ ╟── while constraining:  (α397_453' -> α404_457')  <!<  ((α389_439',) -> α391_450')
//│ ╟── while constraining:  {(α397_453' -> α404_457') where: α388_438' <: ((‹∀ 2. {(α398_455''' -> α400_456''') where: α397_453' <: ((α397_453',) -> α399_454''')}›,) -> α404_457')}  <!<  ((α389_439',) -> α391_450')
//│ ╟── while constraining:  ‹∀ 1. {(α397_440'' -> α404_444'') where: α388_438' <: ((‹∀ 2. {(α398_442''' -> α400_443''') where: α397_440'' <: ((α397_440'',) -> α399_441''')}›,) -> α404_444'')}›  <!<  ((α389_439',) -> α391_450')
//│ ╟── while constraining:  α389_439'  <!<  ((α389_439',) -> α391_450')
//│ ╟── while constraining:  {(α390_451' -> α392_452') where: α389_439' <: ((α389_439',) -> α391_450')}  <!<  (‘a_435' -> ‘b_436')
//│ ╟── while constraining:  ‹∀ 1. {(α390_446'' -> α392_447'') where: α389_439' <: ((α389_439',) -> α391_445'')}›  <!<  (‘a_435' -> ‘b_436')
//│ ╟── while constraining:  (‹∀ 1. {(α390_446'' -> α392_447'') where: α389_439' <: ((α389_439',) -> α391_445'')}›,)  <!<  ((‘a_435' -> ‘b_436'),)
//│ ╟── while constraining:  ((‘a_435' -> ‘b_436') -> ((‘a_435' -> ‘b_436') & ‘c_437'))  <!<  ((‹∀ 1. {(α390_446'' -> α392_447'') where: α389_439' <: ((α389_439',) -> α391_445'')}›,) -> α396_448')
//│ ╟── while constraining:  ((‘a_435' -> ‘b_436') -> ((‘a_435' -> ‘b_436') & ‘c_437'))  <!<  α388_438'
//│ ╟── while constraining:  (((‘a_435' -> ‘b_436') -> ((‘a_435' -> ‘b_436') & ‘c_437')),)  <!<  (α388_438',)
//│ ╟── while constraining:  (α388_438' -> α410_449')  <!<  (((‘a_435' -> ‘b_436') -> ((‘a_435' -> ‘b_436') & ‘c_437')) -> ‘c_437')
//│ ╟── while constraining:  ‹∀ 0. (α388' -> α410')›  <!<  (((‘a_435' -> ‘b_436') -> ((‘a_435' -> ‘b_436') & ‘c_437')) -> ‘c_437')
//│ ╙── while constraining:  ‹∀ 0. (α388' -> α410')›  <!<  ‹∀ 0. ((('a21_24' -> 'b22_25') -> (('a21_24' -> 'b22_25') & 'c23_26')) -> 'c23_26')›
//│  = [Function: z2]

