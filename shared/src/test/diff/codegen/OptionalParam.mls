:NewParser
:NewDefs

:js
class A(x: int) {}
//│ class A(x: int)
//│ // Prelude
//│ let res;
//│ class TypingUnit {
//│   #A;
//│   constructor() {
//│   }
//│   get A() {
//│     const outer = this;
//│     if (this.#A === undefined) {
//│       class A {
//│         #x;
//│         get x() { return this.#x; }
//│         constructor(x) {
//│           this.#x = x;
//│         }
//│       };
//│       this.#A = ((x) => Object.freeze(new A(x)));
//│       this.#A.class = A;
//│     }
//│     return this.#A;
//│   }
//│ }
//│ const typing_unit = new TypingUnit;
//│ globalThis.A = typing_unit.A;
//│ // End of generated code

:js
class B {}
//│ class B()
//│ // Prelude
//│ class TypingUnit1 {
//│   #B;
//│   constructor() {
//│   }
//│   get B() {
//│     const outer = this;
//│     if (this.#B === undefined) {
//│       class B {};
//│       this.#B = (() => Object.freeze(new B()));
//│       this.#B.class = B;
//│     }
//│     return this.#B;
//│   }
//│ }
//│ const typing_unit1 = new TypingUnit1;
//│ globalThis.B = typing_unit1.B;
//│ // End of generated code

:js
class C {
  constructor(x: int)
  fun f = x + 1
}
//│ class C(x: int) {
//│   fun f: int
//│ }
//│ // Prelude
//│ class TypingUnit2 {
//│   #C;
//│   constructor() {
//│   }
//│   get C() {
//│     const outer = this;
//│     if (this.#C === undefined) {
//│       class C {
//│         #x;
//│         get x() { return this.#x; }
//│         constructor(x) {
//│           this.#x = x;
//│         }
//│         get f() {
//│           const x = this.#x;
//│           return x + 1;
//│         }
//│       };
//│       this.#C = C;
//│     }
//│     return this.#C;
//│   }
//│ }
//│ const typing_unit2 = new TypingUnit2;
//│ globalThis.C = typing_unit2.C;
//│ // End of generated code

let c = new C(1)
c.x
c.f
//│ let c: C
//│ int
//│ c
//│   = C {}
//│ res
//│     = 1
//│ res
//│     = 2

:pe
class D(x: int) {
  constructor(y: int)
}
//│ ╔══[PARSE ERROR] more than one constructor
//│ ║  l.104: 	class D(x: int) {
//│ ╙──       	^^^^^
//│ class D(y: int)

:pe
class E {
  constructor(x: int)
  constructor(y: int)
}
//│ ╔══[PARSE ERROR] more than one constructor
//│ ║  l.113: 	class E {
//│ ╙──       	^^^^^
//│ class E()

// TODO: better check?
:e
constructor(x: int)
//│ ╔══[ERROR] constructor must be in a class.
//│ ║  l.124: 	constructor(x: int)
//│ ╙──       	^^^^^^^^^^^^^^^^^^^
//│ ()
//│ Code generation encountered an error:
//│   unexpected constructor.
