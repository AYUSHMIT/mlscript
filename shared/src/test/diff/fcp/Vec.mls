
:GeneralizeCurriedFunctions
:ArgGen // Type of cons is much simpler without this...

:AllowTypeErrors // FIXME


class Z
class S[P]
  method Inv: P -> P
  method Inv = id
//│ Defined class Z
//│ Defined class S[=P]
//│ Declared S.Inv: S['P] -> 'P -> 'P
//│ Defined S.Inv: S['P] -> (forall 'a. 'a -> 'a)

:IrregularTypes

class Cons[A, N]: { size: S[N]; head: A; tail: Vec[A, N] }
class Nil: { size: Z }
type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ Defined class Cons[+A, =N]
//│ Defined class Nil
//│ Defined type alias Vec[±A, ±N]
//│ ╔══[WARNING] Type definition Vec has bivariant type parameters:
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	     ^^^
//│ ╟── A is irrelevant and may be removed
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	         ^
//│ ╟── N is irrelevant and may be removed
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ╙──      	            ^

type AnyVec[A] = forall 'r. (forall 'p. Nil | Cons[A, S['p]] -> 'r) -> 'r
//│ Defined type alias AnyVec[±A]
//│ ╔══[WARNING] Type definition AnyVec has bivariant type parameters:
//│ ║  l.35: 	type AnyVec[A] = forall 'r. (forall 'p. Nil | Cons[A, S['p]] -> 'r) -> 'r
//│ ║        	     ^^^^^^
//│ ╟── A is irrelevant and may be removed
//│ ║  l.35: 	type AnyVec[A] = forall 'r. (forall 'p. Nil | Cons[A, S['p]] -> 'r) -> 'r
//│ ╙──      	            ^

def Nil = Nil { size = Z{} }
def Cons head tail = Cons { head; tail; size = S{} }
//│ Nil: Nil
//│ Cons: 'a -> (forall 'a, 'head, 'tail, 'P. ((Vec[?, ?] & 'tail) -> (Cons['head, 'P] with {tail: 'tail})
//│   where
//│     'a <: 'head))


def nil k = k Nil
def cons h t k = k (Cons h t)
//│ nil: (Nil -> 'a) -> 'a
//│ cons: 'a -> (forall 'b. (Vec[?, ?] & 'b) -> ((forall 'a, 'b, 'tail, 'P. (Cons[nothing, 'P] with {tail: 'tail}
//│   where
//│     'a <: 'b
//│     'b <: Vec[?, ?] & 'tail
//│     'a <: 'b
//│     'b <: Vec[?, ?] & 'tail)) -> 'c) -> 'c)

nil_ty = nil : Vec[int, Z]
//│ ╔══[ERROR] Type mismatch in type ascription:
//│ ║  l.62: 	nil_ty = nil : Vec[int, Z]
//│ ║        	         ^^^
//│ ╟── application of type `Z` is not an instance of type `N`
//│ ║  l.44: 	def Nil = Nil { size = Z{} }
//│ ║        	                       ^^^
//│ ╟── Note: constraint arises from type alias type parameter:
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	            ^
//│ ╟── Note: class Z is defined at:
//│ ║  l.8: 	class Z
//│ ╙──     	      ^
//│ nil_ty: Vec[?, ?]

def cons_ty : forall 'a. 'a -> Vec['a, 'n] -> Vec['a, S['n]]
//│ cons_ty: anything -> Vec[?, ?] -> Vec[?, ?]

cons_ty = cons : forall 'a. 'a -> Vec['a, 'n] -> Vec['a, S['n]]
//│ ╔══[ERROR] Type mismatch in type ascription:
//│ ║  l.80: 	cons_ty = cons : forall 'a. 'a -> Vec['a, 'n] -> Vec['a, S['n]]
//│ ║        	          ^^^^
//│ ╟── type `S[?p]` is not an instance of type `N`
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                                                     ^^^^^
//│ ╟── Note: constraint arises from type alias type parameter:
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ╙──      	            ^
//│ anything -> Vec[?, ?] -> Vec[?, ?]
//│   <:  cons_ty:
//│ anything -> Vec[?, ?] -> Vec[?, ?]

cons_ty2 = cons : forall 'a. 'a -> Vec['a, 'n] -> Vec['a, S['n]]
//│ ╔══[ERROR] Type mismatch in type ascription:
//│ ║  l.94: 	cons_ty2 = cons : forall 'a. 'a -> Vec['a, 'n] -> Vec['a, S['n]]
//│ ║        	           ^^^^
//│ ╟── type `S[?p]` is not an instance of type `N`
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                                                     ^^^^^
//│ ╟── Note: constraint arises from type alias type parameter:
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ╙──      	            ^
//│ cons_ty2: anything -> Vec[?, ?] -> Vec[?, ?]

type Cons_ty = forall 'a. 'a -> Vec['a, 'n] -> Vec['a, S['n]]
//│ Defined type alias Cons_ty












:exit
====================================================================================================


















cons_ty = cons : Cons_ty
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?a. ?a -> (forall ?b. ?b -> (forall ?c. ?c -> ?d)) <: Cons_ty` took too many steps and ran out of fuel (5000)
//│ ║  l.82: 	cons_ty = cons : Cons_ty
//│ ║        	          ^^^^
//│ ╟──  + ('n527 & 'p583)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ('n527 & 'p583)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p581
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p586
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((s<> & {S#P: mut ('n527 & 'p585)..('n527 & 'p586)}) & ~('p589)) & 'p586) & {S#P: mut ('n527 & 'p585)..('n527 & 'p586)})
//│ ╟──  + 'n527
//│ ╟──  + ('n527 & 'p586)
//│ ╟──  + ('n527 & 'p586)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ('n527 & 'p586)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p581
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p583
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + (((((s<> & {S#P: mut ('n527 & 'p585)..('n527 & 'p586)}) & ~('p589)) & 'p586) & {S#P: mut ('n527 & 'p585)..('n527 & 'p586)}) & 'p583)
//│ ╟──  - (((((~({S#P: mut ('n527 & 'p585)..('n527 & 'p586)}) | ~(s<>)) | {S#P: mut ('n527 & 'p583)..('n527 & 'p582)}) | 'p589) | ~('p586)) | ~(((s<> & {S#P: mut ('n527 & 'p585)..('n527 & 'p586)}) & ~('p589))))
//│ ╟──  - (((((~({S#P: mut ('n527 & 'p585)..('n527 & 'p586)}) | ~(s<>)) | {S#P: mut ('n527 & 'p583)..('n527 & 'p582)}) | 'p589) | ~('p586)) | ~('p586))
//│ ╟──  - (((~({S#P: mut ('n527 & 'p585)..('n527 & 'p586)}) | ~(s<>)) | {S#P: mut ('n527 & 'p583)..('n527 & 'p582)}) | ~((((s<> & {S#P: mut ('n527 & 'p585)..('n527 & 'p586)}) & 'p586) & ~('p589))))
//│ ╟──  - ((~({S#P: mut ('n527 & 'p585)..('n527 & 'p586)}) | ~((s<> & {S#P: mut ('n527 & 'p585)..('n527 & 'p586)}))) | {S#P: mut ('n527 & 'p583)..('n527 & 'p582)})
//│ ╟──  - ((~({S#P: mut ('n527 & 'p585)..('n527 & 'p586)}) | ~((s<> & {S#P: mut ('n527 & 'p585)..('n527 & 'p586)}))) | {S#P: mut ('n527 & 'p583)..('n527 & 'p582)})
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - ((~({S#P: mut ('n527 & 'p585)..('n527 & 'p586)}) | ~((s<> & {S#P: mut ('n527 & 'p585)..('n527 & 'p586)}))) | {S#P: mut ('n527 & 'p583)..('n527 & 'p582)})
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - ((~({S#P: mut ('n527 & 'p585)..('n527 & 'p586)}) | ~((s<> & {S#P: mut ('n527 & 'p585)..('n527 & 'p586)}))) | {S#P: mut ('n527 & 'p583)..('n527 & 'p582)})
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - 'p585
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - ('n527 & 'p585)
//│ ╙──  - 'n527
//│ Cons_ty
//│   <:  cons_ty:
//│ 'a -> Vec['a, 'n] -> Vec['a, S['n]]
//│ ╔══[ERROR] Subtyping constraint of the form `Cons_ty <: forall ?a, ?n. ?a -> Vec[?a, ?n] -> Vec[?a, S[?n]]` took too many steps and ran out of fuel (5000)
//│ ║  l.82: 	cons_ty = cons : Cons_ty
//│ ║        	^^^^^^^^^^^^^^
//│ ╟──  + (((((s<> & {S#P: mut ('n527_623 & 'p585_624)..('n527_623 & 'p586_625)}) & ‘n_640) & 'p586_625) & 'p583_627) & ~({S#P: mut ('n527_623 & 'p583_627)..('n527_623 & 'p582_629)}))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + (((((s<> & {S#P: mut ('n527_623 & 'p585_624)..('n527_623 & 'p586_625)}) & ‘n_640) & 'p586_625) & 'p583_627) & ~({S#P: mut ('n527_623 & 'p583_627)..('n527_623 & 'p582_629)}))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p584_632
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p583_627
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((s<> & {S#P: mut ('n527_623 & 'p585_624)..('n527_623 & 'p586_625)}) & ~('p578_633)) & 'p578_633) & 'p583_627)
//│ ╟──  + ((((s<> & {S#P: mut ('n527_623 & 'p585_624)..('n527_623 & 'p586_625)}) & ~('p578_633)) & 'p578_633) & 'p583_627)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((s<> & {S#P: mut ('n527_623 & 'p585_624)..('n527_623 & 'p586_625)}) & ~('p578_633)) & 'p578_633) & 'p583_627)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p581_626
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p586_625
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + (((((‘n_640 & ~('p589_630)) & 'p586_625) & {S#P: mut ('n527_623 & 'p585_624)..('n527_623 & 'p586_625)}) & s<>) & 'p583_627)
//│ ╟──  - (((((((~({S#P: mut ('n527_623 & 'p585_624)..('n527_623 & 'p586_625)}) | ~(s<>)) | {S#P: mut ('n527_623 & 'p583_627)..('n527_623 & 'p582_629)}) | 'p589_630) | ~('p586_625)) | ~('p583_627)) | ~(‘n_640)) | ~((((s<> & {S#P: mut ('n527_623 & 'p585_624)..('n527_623 & 'p586_625)}) & 'p578_633) & ~('p578_633))))
//│ ╟──  - (((((~({S#P: mut ('n527_623 & 'p585_624)..('n527_623 & 'p586_625)}) | ~(s<>)) | {S#P: mut ('n527_623 & 'p583_627)..('n527_623 & 'p582_629)}) | 'p589_630) | ~('p586_625)) | ~(((((s<> & {S#P: mut ('n527_623 & 'p585_624)..('n527_623 & 'p586_625)}) & ‘n_640) & 'p583_627) & ~('p589_630))))
//│ ╟──  - (((((~({S#P: mut ('n527_623 & 'p585_624)..('n527_623 & 'p586_625)}) | ~(s<>)) | {S#P: mut ('n527_623 & 'p583_627)..('n527_623 & 'p582_629)}) | 'p589_630) | ~('p586_625)) | ~('p586_625))
//│ ╟──  - (((((~({S#P: mut ('n527_623 & 'p585_624)..('n527_623 & 'p586_625)}) | ~(s<>)) | {S#P: mut ('n527_623 & 'p583_627)..('n527_623 & 'p582_629)}) | 'p589_630) | ~('p586_625)) | ~('p586_625))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((~({S#P: mut ('n527_623 & 'p585_624)..('n527_623 & 'p586_625)}) | ~(s<>)) | {S#P: mut ('n527_623 & 'p583_627)..('n527_623 & 'p582_629)}) | 'p589_630) | ~('p586_625)) | ~('p586_625))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((~({S#P: mut ('n527_623 & 'p585_624)..('n527_623 & 'p586_625)}) | ~(s<>)) | {S#P: mut ('n527_623 & 'p583_627)..('n527_623 & 'p582_629)}) | 'p589_630) | ~('p586_625)) | ~('p586_625))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((~({S#P: mut ('n527_623 & 'p585_624)..('n527_623 & 'p586_625)}) | ~(s<>)) | {S#P: mut ('n527_623 & 'p583_627)..('n527_623 & 'p582_629)}) | 'p589_630) | ~('p586_625)) | ~('p586_625))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((~({S#P: mut ('n527_623 & 'p585_624)..('n527_623 & 'p586_625)}) | ~(s<>)) | {S#P: mut ('n527_623 & 'p583_627)..('n527_623 & 'p582_629)}) | 'p589_630) | ~('p586_625)) | ~('p586_625))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((~({S#P: mut ('n527_623 & 'p585_624)..('n527_623 & 'p586_625)}) | ~(s<>)) | {S#P: mut ('n527_623 & 'p583_627)..('n527_623 & 'p582_629)}) | 'p589_630) | ~('p586_625)) | ~('p586_625))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((~({S#P: mut ('n527_623 & 'p585_624)..('n527_623 & 'p586_625)}) | ~(s<>)) | {S#P: mut ('n527_623 & 'p583_627)..('n527_623 & 'p582_629)}) | 'p589_630) | ~('p586_625)) | ~('p586_625))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((~({S#P: mut ('n527_623 & 'p585_624)..('n527_623 & 'p586_625)}) | ~(s<>)) | {S#P: mut ('n527_623 & 'p583_627)..('n527_623 & 'p582_629)}) | 'p589_630) | ~('p586_625)) | ~('p586_625))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╙──  - 'n527_623

cons_ty3 = cons : Cons_ty
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?a. ?a -> (forall ?b. ?b -> (forall ?c. ?c -> ?d)) <: Cons_ty` took too many steps and ran out of fuel (5000)
//│ ║  l.193: 	cons_ty3 = cons : Cons_ty
//│ ║         	           ^^^^
//│ ╟──  + ((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & ~('p578_651)) & 'p578_651) & 'p586_643)
//│ ╟──  + ((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & ~('p578_651)) & 'p578_651) & 'p586_643)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & ~('p578_651)) & 'p578_651) & 'p586_643)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p581_644
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p586_643
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & ~('p589_648)) & 'p586_643) & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)})
//│ ╟──  + 'n527_641
//│ ╟──  + ('n527_641 & 'p586_643)
//│ ╟──  + ('n527_641 & 'p586_643)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ('n527_641 & 'p586_643)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p581_644
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p586_643
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + (((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & ~('p589_648)) & 'p586_643) & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & 'p583_645)
//│ ╟──  + (((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & ~('p589_648)) & 'p586_643) & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & 'p583_645)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p585_642
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p587_649
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p586_643
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & ~('p578_651)) & 'p578_651) & 'p586_643)
//│ ╟──  + ((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & ~('p578_651)) & 'p578_651) & 'p586_643)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & ~('p578_651)) & 'p578_651) & 'p586_643)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p581_644
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p583_645
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & ~('p695)) & 'p695) & ~('p578_651)) & ~('p589_648)) & 'p578_651) & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & 'p583_645)
//│ ╟──  + 'n527_641
//│ ╟──  + ('n527_641 & 'p583_645)
//│ ╟──  + ('n527_641 & 'p583_645)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ('n527_641 & 'p583_645)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p581_644
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p586_643
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + (((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & ~('p578_651)) & 'p578_651) & 'p583_645) & 'p586_643)
//│ ╟──  + (((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & ~('p578_651)) & 'p578_651) & 'p583_645) & 'p586_643)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + (((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & ~('p578_651)) & 'p578_651) & 'p583_645) & 'p586_643)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p581_644
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p583_645
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & ~('p578_651)) & 'p578_651) & 'p583_645)
//│ ╟──  + ((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & ~('p578_651)) & 'p578_651) & 'p583_645)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & ~('p578_651)) & 'p578_651) & 'p583_645)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p581_644
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p586_643
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + (((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & ~('p578_651)) & 'p578_651) & 'p583_645) & 'p586_643)
//│ ╟──  + (((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & ~('p578_651)) & 'p578_651) & 'p583_645) & 'p586_643)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + (((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & ~('p578_651)) & 'p578_651) & 'p583_645) & 'p586_643)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p581_644
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p583_645
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & ~('p578_651)) & 'p578_651) & 'p583_645)
//│ ╟──  + ((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & ~('p578_651)) & 'p578_651) & 'p583_645)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & ~('p578_651)) & 'p578_651) & 'p583_645)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p581_644
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p583_645
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & ~('p695)) & 'p695) & ~('p578_651)) & ~('p589_648)) & 'p578_651) & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & 'p583_645)
//│ ╟──  - ((((((((((~({S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) | ~(s<>)) | {S#P: mut ('n527_641 & 'p583_645)..('n527_641 & 'p582_647)}) | 'p589_648) | ~('p586_643)) | 'p695) | 'p578_651) | ~('p695)) | ~('p578_651)) | ~('p583_645)) | ~(((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & ~('p589_648))))
//│ ╟──  - ((((((((((~({S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) | ~(s<>)) | {S#P: mut ('n527_641 & 'p583_645)..('n527_641 & 'p582_647)}) | 'p589_648) | ~('p586_643)) | 'p695) | 'p578_651) | ~('p695)) | ~('p578_651)) | ~('p583_645)) | ~('p586_643))
//│ ╟──  - ((((((((((~({S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) | ~(s<>)) | {S#P: mut ('n527_641 & 'p583_645)..('n527_641 & 'p582_647)}) | 'p589_648) | ~('p586_643)) | 'p695) | 'p578_651) | ~('p695)) | ~('p578_651)) | ~('p583_645)) | ~((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & 'p583_645) & ~('p589_648))))
//│ ╟──  - ((((((((((~({S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) | ~(s<>)) | {S#P: mut ('n527_641 & 'p583_645)..('n527_641 & 'p582_647)}) | 'p589_648) | ~('p586_643)) | 'p695) | 'p578_651) | ~('p695)) | ~('p578_651)) | ~('p583_645)) | ~((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & 'p578_651) & ~('p578_651))))
//│ ╟──  - ((((((((((~({S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) | ~(s<>)) | {S#P: mut ('n527_641 & 'p583_645)..('n527_641 & 'p582_647)}) | 'p589_648) | ~('p586_643)) | 'p695) | 'p578_651) | ~('p695)) | ~('p578_651)) | ~('p583_645)) | ~(((((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & 'p578_651) & 'p695) & ~('p589_648)) & ~('p578_651)) & ~('p695))))
//│ ╟──  - ((((((((((~({S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) | ~(s<>)) | {S#P: mut ('n527_641 & 'p583_645)..('n527_641 & 'p582_647)}) | 'p589_648) | ~('p586_643)) | 'p695) | 'p578_651) | ~('p695)) | ~('p578_651)) | ~('p583_645)) | ~('p583_645))
//│ ╟──  - ((((((((((~({S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) | ~(s<>)) | {S#P: mut ('n527_641 & 'p583_645)..('n527_641 & 'p582_647)}) | 'p589_648) | ~('p586_643)) | 'p695) | 'p578_651) | ~('p695)) | ~('p578_651)) | ~('p583_645)) | ~(((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & 'p583_645) & 'p578_651) & ~('p578_651))))
//│ ╟──  - ((((((((((~({S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) | ~(s<>)) | {S#P: mut ('n527_641 & 'p583_645)..('n527_641 & 'p582_647)}) | 'p589_648) | ~('p586_643)) | 'p695) | 'p578_651) | ~('p695)) | ~('p578_651)) | ~('p583_645)) | ~((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & 'p578_651) & ~('p578_651))))
//│ ╟──  - (((((((((~({S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) | ~(s<>)) | {S#P: mut ('n527_641 & 'p583_645)..('n527_641 & 'p582_647)}) | 'p589_648) | ~('p586_643)) | 'p695) | 'p578_651) | ~('p695)) | ~('p578_651)) | ~(((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & 'p583_645) & 'p578_651) & ~('p578_651))))
//│ ╟──  - (((((((((~({S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) | ~(s<>)) | {S#P: mut ('n527_641 & 'p583_645)..('n527_641 & 'p582_647)}) | 'p589_648) | ~('p586_643)) | 'p695) | 'p578_651) | ~('p695)) | ~('p578_651)) | ~((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & 'p578_651) & ~('p578_651))))
//│ ╟──  - (((((~({S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) | ~(s<>)) | {S#P: mut ('n527_641 & 'p583_645)..('n527_641 & 'p582_647)}) | 'p589_648) | ~('p586_643)) | ~(((((((s<> & {S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) & 'p578_651) & 'p695) & ~('p589_648)) & ~('p578_651)) & ~('p695))))
//│ ╟──  - (((((~({S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) | ~(s<>)) | {S#P: mut ('n527_641 & 'p583_645)..('n527_641 & 'p582_647)}) | 'p589_648) | ~('p586_643)) | ~('p586_643))
//│ ╟──  - (((((~({S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) | ~(s<>)) | {S#P: mut ('n527_641 & 'p583_645)..('n527_641 & 'p582_647)}) | 'p589_648) | ~('p586_643)) | ~('p586_643))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((~({S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) | ~(s<>)) | {S#P: mut ('n527_641 & 'p583_645)..('n527_641 & 'p582_647)}) | 'p589_648) | ~('p586_643)) | ~('p586_643))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((~({S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) | ~(s<>)) | {S#P: mut ('n527_641 & 'p583_645)..('n527_641 & 'p582_647)}) | 'p589_648) | ~('p586_643)) | ~('p586_643))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((~({S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) | ~(s<>)) | {S#P: mut ('n527_641 & 'p583_645)..('n527_641 & 'p582_647)}) | 'p589_648) | ~('p586_643)) | ~('p586_643))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((~({S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) | ~(s<>)) | {S#P: mut ('n527_641 & 'p583_645)..('n527_641 & 'p582_647)}) | 'p589_648) | ~('p586_643)) | ~('p586_643))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((~({S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) | ~(s<>)) | {S#P: mut ('n527_641 & 'p583_645)..('n527_641 & 'p582_647)}) | 'p589_648) | ~('p586_643)) | ~('p586_643))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((~({S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) | ~(s<>)) | {S#P: mut ('n527_641 & 'p583_645)..('n527_641 & 'p582_647)}) | 'p589_648) | ~('p586_643)) | ~('p586_643))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((~({S#P: mut ('n527_641 & 'p585_642)..('n527_641 & 'p586_643)}) | ~(s<>)) | {S#P: mut ('n527_641 & 'p583_645)..('n527_641 & 'p582_647)}) | 'p589_648) | ~('p586_643)) | ~('p586_643))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╙──  - 'n527_641
//│ cons_ty3: Cons_ty

def cons h (t: Vec['a, 'n]) k = k (Cons h t)
//│ cons: 'a -> (forall 'n. Vec['a, 'n] -> ((forall 'a, 'b, 'A, 'N, 'tail. (Cons['A, 'N] with {head: nothing, tail: 'tail}
//│   where
//│     'a <: 'a
//│     'b <: Vec['A, 'N] & 'tail
//│     'a <: 'a
//│     'b <: Vec['A, 'N] & 'tail)) -> 'c) -> 'c)

cons : Cons_ty
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?b. ?b -> (forall ?a, ?n. Vec[?a, ?n] -> (forall ?c. ?c -> ?d)) <: Cons_ty` took too many steps and ran out of fuel (5000)
//│ ║  l.366: 	cons : Cons_ty
//│ ║         	^^^^
//│ ╟──  + (((((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & ~('p578_785)) & 'p578_785) & 'p586_777) & 'p583_779)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p581_778
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p586_777
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & ~('p589_782)) & 'p586_777) & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)})
//│ ╟──  + 'n527_775
//│ ╟──  + ('n527_775 & 'p586_777)
//│ ╟──  + ('n527_775 & 'p586_777)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ('n527_775 & 'p586_777)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p581_778
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p586_777
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + (((((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & ~('p589_782)) & 'p586_777) & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & 'p583_779)
//│ ╟──  + (((((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & ~('p589_782)) & 'p586_777) & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & 'p583_779)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p585_776
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p587_783
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p586_777
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & ~('p578_785)) & 'p578_785) & 'p586_777)
//│ ╟──  + ((((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & ~('p578_785)) & 'p578_785) & 'p586_777)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & ~('p578_785)) & 'p578_785) & 'p586_777)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p581_778
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p583_779
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((((((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & ~('p821)) & 'p821) & ~('p578_785)) & ~('p589_782)) & 'p578_785) & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & 'p583_779)
//│ ╟──  + 'n527_775
//│ ╟──  + ('n527_775 & 'p583_779)
//│ ╟──  + ('n527_775 & 'p583_779)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ('n527_775 & 'p583_779)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p581_778
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p586_777
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + (((((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & ~('p578_785)) & 'p578_785) & 'p583_779) & 'p586_777)
//│ ╟──  + (((((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & ~('p578_785)) & 'p578_785) & 'p583_779) & 'p586_777)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + (((((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & ~('p578_785)) & 'p578_785) & 'p583_779) & 'p586_777)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p581_778
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p583_779
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & ~('p578_785)) & 'p578_785) & 'p583_779)
//│ ╟──  + ((((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & ~('p578_785)) & 'p578_785) & 'p583_779)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & ~('p578_785)) & 'p578_785) & 'p583_779)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p581_778
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p586_777
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + (((((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & ~('p578_785)) & 'p578_785) & 'p583_779) & 'p586_777)
//│ ╟──  + (((((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & ~('p578_785)) & 'p578_785) & 'p583_779) & 'p586_777)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + (((((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & ~('p578_785)) & 'p578_785) & 'p583_779) & 'p586_777)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p581_778
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p583_779
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & ~('p578_785)) & 'p578_785) & 'p583_779)
//│ ╟──  + ((((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & ~('p578_785)) & 'p578_785) & 'p583_779)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & ~('p578_785)) & 'p578_785) & 'p583_779)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p581_778
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p583_779
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((((((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & ~('p821)) & 'p821) & ~('p578_785)) & ~('p589_782)) & 'p578_785) & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & 'p583_779)
//│ ╟──  - ((((((((((~({S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) | ~(s<>)) | {S#P: mut ('n527_775 & 'p583_779)..('n527_775 & 'p582_781)}) | 'p589_782) | ~('p586_777)) | 'p821) | 'p578_785) | ~('p821)) | ~('p578_785)) | ~('p583_779)) | ~(((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & ~('p589_782))))
//│ ╟──  - ((((((((((~({S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) | ~(s<>)) | {S#P: mut ('n527_775 & 'p583_779)..('n527_775 & 'p582_781)}) | 'p589_782) | ~('p586_777)) | 'p821) | 'p578_785) | ~('p821)) | ~('p578_785)) | ~('p583_779)) | ~('p586_777))
//│ ╟──  - ((((((((((~({S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) | ~(s<>)) | {S#P: mut ('n527_775 & 'p583_779)..('n527_775 & 'p582_781)}) | 'p589_782) | ~('p586_777)) | 'p821) | 'p578_785) | ~('p821)) | ~('p578_785)) | ~('p583_779)) | ~((((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & 'p583_779) & ~('p589_782))))
//│ ╟──  - ((((((((((~({S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) | ~(s<>)) | {S#P: mut ('n527_775 & 'p583_779)..('n527_775 & 'p582_781)}) | 'p589_782) | ~('p586_777)) | 'p821) | 'p578_785) | ~('p821)) | ~('p578_785)) | ~('p583_779)) | ~((((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & 'p578_785) & ~('p578_785))))
//│ ╟──  - ((((((((((~({S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) | ~(s<>)) | {S#P: mut ('n527_775 & 'p583_779)..('n527_775 & 'p582_781)}) | 'p589_782) | ~('p586_777)) | 'p821) | 'p578_785) | ~('p821)) | ~('p578_785)) | ~('p583_779)) | ~(((((((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & 'p578_785) & 'p821) & ~('p589_782)) & ~('p578_785)) & ~('p821))))
//│ ╟──  - ((((((((((~({S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) | ~(s<>)) | {S#P: mut ('n527_775 & 'p583_779)..('n527_775 & 'p582_781)}) | 'p589_782) | ~('p586_777)) | 'p821) | 'p578_785) | ~('p821)) | ~('p578_785)) | ~('p583_779)) | ~('p583_779))
//│ ╟──  - ((((((((((~({S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) | ~(s<>)) | {S#P: mut ('n527_775 & 'p583_779)..('n527_775 & 'p582_781)}) | 'p589_782) | ~('p586_777)) | 'p821) | 'p578_785) | ~('p821)) | ~('p578_785)) | ~('p583_779)) | ~(((((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & 'p583_779) & 'p578_785) & ~('p578_785))))
//│ ╟──  - ((((((((((~({S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) | ~(s<>)) | {S#P: mut ('n527_775 & 'p583_779)..('n527_775 & 'p582_781)}) | 'p589_782) | ~('p586_777)) | 'p821) | 'p578_785) | ~('p821)) | ~('p578_785)) | ~('p583_779)) | ~((((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & 'p578_785) & ~('p578_785))))
//│ ╟──  - (((((((((~({S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) | ~(s<>)) | {S#P: mut ('n527_775 & 'p583_779)..('n527_775 & 'p582_781)}) | 'p589_782) | ~('p586_777)) | 'p821) | 'p578_785) | ~('p821)) | ~('p578_785)) | ~(((((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & 'p583_779) & 'p578_785) & ~('p578_785))))
//│ ╟──  - (((((((((~({S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) | ~(s<>)) | {S#P: mut ('n527_775 & 'p583_779)..('n527_775 & 'p582_781)}) | 'p589_782) | ~('p586_777)) | 'p821) | 'p578_785) | ~('p821)) | ~('p578_785)) | ~((((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & 'p578_785) & ~('p578_785))))
//│ ╟──  - (((((~({S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) | ~(s<>)) | {S#P: mut ('n527_775 & 'p583_779)..('n527_775 & 'p582_781)}) | 'p589_782) | ~('p586_777)) | ~(((((((s<> & {S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) & 'p578_785) & 'p821) & ~('p589_782)) & ~('p578_785)) & ~('p821))))
//│ ╟──  - (((((~({S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) | ~(s<>)) | {S#P: mut ('n527_775 & 'p583_779)..('n527_775 & 'p582_781)}) | 'p589_782) | ~('p586_777)) | ~('p586_777))
//│ ╟──  - (((((~({S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) | ~(s<>)) | {S#P: mut ('n527_775 & 'p583_779)..('n527_775 & 'p582_781)}) | 'p589_782) | ~('p586_777)) | ~('p586_777))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((~({S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) | ~(s<>)) | {S#P: mut ('n527_775 & 'p583_779)..('n527_775 & 'p582_781)}) | 'p589_782) | ~('p586_777)) | ~('p586_777))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((~({S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) | ~(s<>)) | {S#P: mut ('n527_775 & 'p583_779)..('n527_775 & 'p582_781)}) | 'p589_782) | ~('p586_777)) | ~('p586_777))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((~({S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) | ~(s<>)) | {S#P: mut ('n527_775 & 'p583_779)..('n527_775 & 'p582_781)}) | 'p589_782) | ~('p586_777)) | ~('p586_777))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((~({S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) | ~(s<>)) | {S#P: mut ('n527_775 & 'p583_779)..('n527_775 & 'p582_781)}) | 'p589_782) | ~('p586_777)) | ~('p586_777))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((~({S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) | ~(s<>)) | {S#P: mut ('n527_775 & 'p583_779)..('n527_775 & 'p582_781)}) | 'p589_782) | ~('p586_777)) | ~('p586_777))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((~({S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) | ~(s<>)) | {S#P: mut ('n527_775 & 'p583_779)..('n527_775 & 'p582_781)}) | 'p589_782) | ~('p586_777)) | ~('p586_777))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((~({S#P: mut ('n527_775 & 'p585_776)..('n527_775 & 'p586_777)}) | ~(s<>)) | {S#P: mut ('n527_775 & 'p583_779)..('n527_775 & 'p582_781)}) | 'p589_782) | ~('p586_777)) | ~('p586_777))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╙──  - 'n527_775
//│ res: Cons_ty

def cons h (t: Vec['a, 'n]) k = k (Cons h t)
//│ cons: 'a -> (forall 'n. Vec['a, 'n] -> ((forall 'a, 'b, 'A, 'N, 'tail. (Cons['A, 'N] with {head: nothing, tail: 'tail}
//│   where
//│     'b <: Vec['A, 'N] & 'tail
//│     'a <: 'a
//│     'b <: Vec['A, 'N] & 'tail
//│     'a <: 'a)) -> 'c) -> 'c)

cons : Cons_ty
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?b. ?b -> (forall ?a, ?n. Vec[?a, ?n] -> (forall ?c. ?c -> ?d)) <: Cons_ty` took too many steps and ran out of fuel (5000)
//│ ║  l.535: 	cons : Cons_ty
//│ ║         	^^^^
//│ ╟──  + (((((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & ~('p578_912)) & 'p578_912) & 'p586_904) & 'p583_906)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p581_905
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p586_904
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & ~('p589_909)) & 'p586_904) & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)})
//│ ╟──  + 'n527_902
//│ ╟──  + ('n527_902 & 'p586_904)
//│ ╟──  + ('n527_902 & 'p586_904)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ('n527_902 & 'p586_904)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p581_905
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p586_904
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + (((((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & ~('p589_909)) & 'p586_904) & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & 'p583_906)
//│ ╟──  + (((((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & ~('p589_909)) & 'p586_904) & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & 'p583_906)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p585_903
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p587_910
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p586_904
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & ~('p578_912)) & 'p578_912) & 'p586_904)
//│ ╟──  + ((((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & ~('p578_912)) & 'p578_912) & 'p586_904)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & ~('p578_912)) & 'p578_912) & 'p586_904)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p581_905
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p583_906
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((((((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & ~('p948)) & 'p948) & ~('p578_912)) & ~('p589_909)) & 'p578_912) & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & 'p583_906)
//│ ╟──  + 'n527_902
//│ ╟──  + ('n527_902 & 'p583_906)
//│ ╟──  + ('n527_902 & 'p583_906)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ('n527_902 & 'p583_906)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p581_905
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p586_904
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + (((((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & ~('p578_912)) & 'p578_912) & 'p583_906) & 'p586_904)
//│ ╟──  + (((((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & ~('p578_912)) & 'p578_912) & 'p583_906) & 'p586_904)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + (((((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & ~('p578_912)) & 'p578_912) & 'p583_906) & 'p586_904)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p581_905
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p583_906
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & ~('p578_912)) & 'p578_912) & 'p583_906)
//│ ╟──  + ((((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & ~('p578_912)) & 'p578_912) & 'p583_906)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & ~('p578_912)) & 'p578_912) & 'p583_906)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p581_905
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p586_904
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + (((((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & ~('p578_912)) & 'p578_912) & 'p583_906) & 'p586_904)
//│ ╟──  + (((((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & ~('p578_912)) & 'p578_912) & 'p583_906) & 'p586_904)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + (((((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & ~('p578_912)) & 'p578_912) & 'p583_906) & 'p586_904)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p581_905
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p583_906
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & ~('p578_912)) & 'p578_912) & 'p583_906)
//│ ╟──  + ((((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & ~('p578_912)) & 'p578_912) & 'p583_906)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & ~('p578_912)) & 'p578_912) & 'p583_906)
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p581_905
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p583_906
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + ((((((((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & ~('p948)) & 'p948) & ~('p578_912)) & ~('p589_909)) & 'p578_912) & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & 'p583_906)
//│ ╟──  - ((((((((((~({S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) | ~(s<>)) | {S#P: mut ('n527_902 & 'p583_906)..('n527_902 & 'p582_908)}) | 'p589_909) | ~('p586_904)) | 'p948) | 'p578_912) | ~('p948)) | ~('p578_912)) | ~('p583_906)) | ~(((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & ~('p589_909))))
//│ ╟──  - ((((((((((~({S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) | ~(s<>)) | {S#P: mut ('n527_902 & 'p583_906)..('n527_902 & 'p582_908)}) | 'p589_909) | ~('p586_904)) | 'p948) | 'p578_912) | ~('p948)) | ~('p578_912)) | ~('p583_906)) | ~('p586_904))
//│ ╟──  - ((((((((((~({S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) | ~(s<>)) | {S#P: mut ('n527_902 & 'p583_906)..('n527_902 & 'p582_908)}) | 'p589_909) | ~('p586_904)) | 'p948) | 'p578_912) | ~('p948)) | ~('p578_912)) | ~('p583_906)) | ~((((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & 'p583_906) & ~('p589_909))))
//│ ╟──  - ((((((((((~({S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) | ~(s<>)) | {S#P: mut ('n527_902 & 'p583_906)..('n527_902 & 'p582_908)}) | 'p589_909) | ~('p586_904)) | 'p948) | 'p578_912) | ~('p948)) | ~('p578_912)) | ~('p583_906)) | ~((((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & 'p578_912) & ~('p578_912))))
//│ ╟──  - ((((((((((~({S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) | ~(s<>)) | {S#P: mut ('n527_902 & 'p583_906)..('n527_902 & 'p582_908)}) | 'p589_909) | ~('p586_904)) | 'p948) | 'p578_912) | ~('p948)) | ~('p578_912)) | ~('p583_906)) | ~(((((((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & 'p578_912) & 'p948) & ~('p589_909)) & ~('p578_912)) & ~('p948))))
//│ ╟──  - ((((((((((~({S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) | ~(s<>)) | {S#P: mut ('n527_902 & 'p583_906)..('n527_902 & 'p582_908)}) | 'p589_909) | ~('p586_904)) | 'p948) | 'p578_912) | ~('p948)) | ~('p578_912)) | ~('p583_906)) | ~('p583_906))
//│ ╟──  - ((((((((((~({S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) | ~(s<>)) | {S#P: mut ('n527_902 & 'p583_906)..('n527_902 & 'p582_908)}) | 'p589_909) | ~('p586_904)) | 'p948) | 'p578_912) | ~('p948)) | ~('p578_912)) | ~('p583_906)) | ~(((((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & 'p583_906) & 'p578_912) & ~('p578_912))))
//│ ╟──  - ((((((((((~({S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) | ~(s<>)) | {S#P: mut ('n527_902 & 'p583_906)..('n527_902 & 'p582_908)}) | 'p589_909) | ~('p586_904)) | 'p948) | 'p578_912) | ~('p948)) | ~('p578_912)) | ~('p583_906)) | ~((((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & 'p578_912) & ~('p578_912))))
//│ ╟──  - (((((((((~({S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) | ~(s<>)) | {S#P: mut ('n527_902 & 'p583_906)..('n527_902 & 'p582_908)}) | 'p589_909) | ~('p586_904)) | 'p948) | 'p578_912) | ~('p948)) | ~('p578_912)) | ~(((((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & 'p583_906) & 'p578_912) & ~('p578_912))))
//│ ╟──  - (((((((((~({S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) | ~(s<>)) | {S#P: mut ('n527_902 & 'p583_906)..('n527_902 & 'p582_908)}) | 'p589_909) | ~('p586_904)) | 'p948) | 'p578_912) | ~('p948)) | ~('p578_912)) | ~((((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & 'p578_912) & ~('p578_912))))
//│ ╟──  - (((((~({S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) | ~(s<>)) | {S#P: mut ('n527_902 & 'p583_906)..('n527_902 & 'p582_908)}) | 'p589_909) | ~('p586_904)) | ~(((((((s<> & {S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) & 'p578_912) & 'p948) & ~('p589_909)) & ~('p578_912)) & ~('p948))))
//│ ╟──  - (((((~({S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) | ~(s<>)) | {S#P: mut ('n527_902 & 'p583_906)..('n527_902 & 'p582_908)}) | 'p589_909) | ~('p586_904)) | ~('p586_904))
//│ ╟──  - (((((~({S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) | ~(s<>)) | {S#P: mut ('n527_902 & 'p583_906)..('n527_902 & 'p582_908)}) | 'p589_909) | ~('p586_904)) | ~('p586_904))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((~({S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) | ~(s<>)) | {S#P: mut ('n527_902 & 'p583_906)..('n527_902 & 'p582_908)}) | 'p589_909) | ~('p586_904)) | ~('p586_904))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((~({S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) | ~(s<>)) | {S#P: mut ('n527_902 & 'p583_906)..('n527_902 & 'p582_908)}) | 'p589_909) | ~('p586_904)) | ~('p586_904))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((~({S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) | ~(s<>)) | {S#P: mut ('n527_902 & 'p583_906)..('n527_902 & 'p582_908)}) | 'p589_909) | ~('p586_904)) | ~('p586_904))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((~({S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) | ~(s<>)) | {S#P: mut ('n527_902 & 'p583_906)..('n527_902 & 'p582_908)}) | 'p589_909) | ~('p586_904)) | ~('p586_904))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((~({S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) | ~(s<>)) | {S#P: mut ('n527_902 & 'p583_906)..('n527_902 & 'p582_908)}) | 'p589_909) | ~('p586_904)) | ~('p586_904))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((~({S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) | ~(s<>)) | {S#P: mut ('n527_902 & 'p583_906)..('n527_902 & 'p582_908)}) | 'p589_909) | ~('p586_904)) | ~('p586_904))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((~({S#P: mut ('n527_902 & 'p585_903)..('n527_902 & 'p586_904)}) | ~(s<>)) | {S#P: mut ('n527_902 & 'p583_906)..('n527_902 & 'p582_908)}) | 'p589_909) | ~('p586_904)) | ~('p586_904))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╙──  - 'n527_902
//│ res: Cons_ty


// v0 = nil

// v0_ty = v0 : Vec[int, Z]

v1_ = Cons 1 nil
//│ v1_: Cons[1, 'P] with {tail: forall 'a. (Nil -> 'a) -> 'a}

v1_ty = v1_ : Cons[int, Z]
//│ v1_ty: Cons[int, Z]

v1_0 = cons 1 nil
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.707: 	v1_0 = cons 1 nil
//│ ║         	       ^^^^^^^^^^
//│ ╟── application of type `Z` is not an instance of type `'n`
//│ ║  l.29: 	def Nil = Nil { size = Z{} }
//│ ║        	                       ^^^
//│ ╟── Note: class Z is defined at:
//│ ║  l.8: 	class Z
//│ ╙──     	      ^
//│ v1_0: error

v1_0 : Vec[int, S[Z]]
//│ res: Vec[int, S[Z]]

v1_1 k = k v1_
//│ v1_1: ((forall 'P. Cons[1, 'P] with {tail: forall 'a. (Nil -> 'a) -> 'a}) -> 'b) -> 'b

:e
v1_1 : Vec[int, S[Z]]
//│ ╔══[ERROR] Type mismatch in type ascription:
//│ ║  l.726: 	v1_1 : Vec[int, S[Z]]
//│ ║         	^^^^
//│ ╟── application of type `Z` does not match type `nothing`
//│ ║  l.29: 	def Nil = Nil { size = Z{} }
//│ ║        	                       ^^^
//│ ╟── Note: class Z is defined at:
//│ ║  l.8: 	class Z
//│ ╙──     	      ^
//│ res: Vec[int, S[Z]]


v1_tty = cons_ty 1 nil_ty
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.739: 	v1_tty = cons_ty 1 nil_ty
//│ ║         	         ^^^^^^^^^^^^^^^^
//│ ╟── type `Z` is not an instance of type `'n`
//│ ║  l.47: 	nil_ty = nil : Vec[int, Z]
//│ ╙──      	                        ^
//│ v1_tty: error

v1_tty = cons_ty2 1 nil_ty
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.748: 	v1_tty = cons_ty2 1 nil_ty
//│ ║         	         ^^^^^^^^^^^^^^^^^
//│ ╟── type `int` is not an instance of type `'a`
//│ ║  l.47: 	nil_ty = nil : Vec[int, Z]
//│ ║        	                   ^^^
//│ ╟── Note: constraint arises from quantified type variable:
//│ ║  l.73: 	cons_ty2 = cons : forall 'a. 'a -> Vec['a, 'n] -> Vec['a, S['n]]
//│ ╙──      	                         ^^
//│ v1_tty: error

v1_tty = cons_ty3 1 nil_ty
//│ ╔══[ERROR] Subtyping constraint of the form `?a <: Vec[int, Z] -> ?b` took too many steps and ran out of fuel (5000)
//│ ║  l.760: 	v1_tty = cons_ty3 1 nil_ty
//│ ║         	         ^^^^^^^^^^^^^^^^^
//│ ╟──  + (((((((s<> & {S#P: mut ('n527_1253 & 'p585_1254)..('n527_1253 & 'p586_1255)}) & 'p586_1255) & 'p583_1257) & z<>) & ~('p578_1263)) & 'p578_1263) & ~({S#P: mut ('n527_1253 & 'p583_1257)..('n527_1253 & 'p582_1259)}))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + (((((((s<> & {S#P: mut ('n527_1253 & 'p585_1254)..('n527_1253 & 'p586_1255)}) & 'p586_1255) & 'p583_1257) & z<>) & ~('p578_1263)) & 'p578_1263) & ~({S#P: mut ('n527_1253 & 'p583_1257)..('n527_1253 & 'p582_1259)}))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + (((((((s<> & {S#P: mut ('n527_1253 & 'p585_1254)..('n527_1253 & 'p586_1255)}) & 'p586_1255) & 'p583_1257) & z<>) & ~('p578_1263)) & 'p578_1263) & ~({S#P: mut ('n527_1253 & 'p583_1257)..('n527_1253 & 'p582_1259)}))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + (((((((s<> & {S#P: mut ('n527_1253 & 'p585_1254)..('n527_1253 & 'p586_1255)}) & 'p586_1255) & 'p583_1257) & z<>) & ~('p578_1263)) & 'p578_1263) & ~({S#P: mut ('n527_1253 & 'p583_1257)..('n527_1253 & 'p582_1259)}))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p581_1256
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + 'p586_1255
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  + (((z<> & ~('p589_1260)) & 'p586_1255) & 'p583_1257)
//│ ╟──  - (((((('n527_1253 | 'p589_1260) | ~('p586_1255)) | ~({S#P: mut ('n527_1253 & 'p585_1254)..('n527_1253 & 'p586_1255)})) | ~(s<>)) | ~('p583_1257)) | ~(((z<> & 'p583_1257) & ~('p589_1260))))
//│ ╟──  - (((((('n527_1253 | 'p589_1260) | ~('p586_1255)) | ~({S#P: mut ('n527_1253 & 'p585_1254)..('n527_1253 & 'p586_1255)})) | ~(s<>)) | ~('p583_1257)) | ~('p586_1255))
//│ ╟──  - (((((('n527_1253 | 'p589_1260) | ~('p586_1255)) | ~({S#P: mut ('n527_1253 & 'p585_1254)..('n527_1253 & 'p586_1255)})) | ~(s<>)) | ~('p583_1257)) | ~('p586_1255))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((('n527_1253 | 'p589_1260) | ~('p586_1255)) | ~({S#P: mut ('n527_1253 & 'p585_1254)..('n527_1253 & 'p586_1255)})) | ~(s<>)) | ~('p583_1257)) | ~('p586_1255))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((('n527_1253 | 'p589_1260) | ~('p586_1255)) | ~({S#P: mut ('n527_1253 & 'p585_1254)..('n527_1253 & 'p586_1255)})) | ~(s<>)) | ~('p583_1257)) | ~('p586_1255))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((('n527_1253 | 'p589_1260) | ~('p586_1255)) | ~({S#P: mut ('n527_1253 & 'p585_1254)..('n527_1253 & 'p586_1255)})) | ~(s<>)) | ~('p583_1257)) | ~('p586_1255))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((('n527_1253 | 'p589_1260) | ~('p586_1255)) | ~({S#P: mut ('n527_1253 & 'p585_1254)..('n527_1253 & 'p586_1255)})) | ~(s<>)) | ~('p583_1257)) | ~('p586_1255))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((('n527_1253 | 'p589_1260) | ~('p586_1255)) | ~({S#P: mut ('n527_1253 & 'p585_1254)..('n527_1253 & 'p586_1255)})) | ~(s<>)) | ~('p583_1257)) | ~('p586_1255))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((('n527_1253 | 'p589_1260) | ~('p586_1255)) | ~({S#P: mut ('n527_1253 & 'p585_1254)..('n527_1253 & 'p586_1255)})) | ~(s<>)) | ~('p583_1257)) | ~('p586_1255))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╟──  - (((((('n527_1253 | 'p589_1260) | ~('p586_1255)) | ~({S#P: mut ('n527_1253 & 'p585_1254)..('n527_1253 & 'p586_1255)})) | ~(s<>)) | ~('p583_1257)) | ~('p586_1255))
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                    ^^
//│ ╙──  - 'n527_1253
//│ v1_tty: error


v2 = cons 1 (cons 2 nil)
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.813: 	v2 = cons 1 (cons 2 nil)
//│ ║         	     ^^^^^^^^^^^^^^^^^^^
//│ ╟── type `S[?p]` is not an instance of type `'n`
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ╙──      	                                                                     ^^^^^
//│ v2: error


def impossible x = case x of {}
//│ impossible: nothing -> nothing

def head1 vec = vec (fun v -> case v of {
  | Nil -> impossible v.size
  | Cons -> v.head
  })
//│ head1: ((forall 'head. ((Cons[?, ?]\size\tail with {head: 'head}) | Nil & {size: nothing}) -> 'head) -> 'a) -> 'a

def head1_ty : Vec['a, S['p]] -> 'a
head1_ty = head1
//│ head1_ty: Vec['a, S['p]] -> 'a
//│ ((forall 'head. ((Cons[?, ?]\size\tail with {head: 'head}) | Nil & {size: nothing}) -> 'head) -> 'a) -> 'a
//│   <:  head1_ty:
//│ Vec['a, S['p]] -> 'a

// FIXME works without `:GeneralizeCurriedFunctions`!
def head2 (vec: Vec['a, S['p]]) = vec (fun v -> case v of {
  | Nil -> impossible v.size
  | Cons -> v.head
  })
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.840: 	def head2 (vec: Vec['a, S['p]]) = vec (fun v -> case v of {
//│ ║         	                                  ^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.841: 	  | Nil -> impossible v.size
//│ ║         	^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.842: 	  | Cons -> v.head
//│ ║         	^^^^^^^^^^^^^^^^^^
//│ ║  l.843: 	  })
//│ ║         	^^^^
//│ ╟── type `‘a` is not an instance of type `'r`
//│ ║  l.840: 	def head2 (vec: Vec['a, S['p]]) = vec (fun v -> case v of {
//│ ║         	                    ^^
//│ ╟── but it flows into field selection with expected type `‘r`
//│ ║  l.842: 	  | Cons -> v.head
//│ ║         	            ^^^^^^
//│ ╟── Note: constraint arises from quantified type variable:
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ╙──      	                        ^^
//│ head2: Vec[?, S['p]] -> error

head1 v1
head1 v2
//│ ╔══[ERROR] identifier not found: v1
//│ ║  l.864: 	head1 v1
//│ ╙──       	      ^^
//│ res: error
//│ res: error

:e
head1 nil
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.873: 	head1 nil
//│ ║         	^^^^^^^^^
//│ ╟── application of type `Z` does not match type `nothing`
//│ ║  l.29: 	def Nil = Nil { size = Z{} }
//│ ║        	                       ^^^
//│ ╟── Note: constraint arises from reference:
//│ ║  l.823: 	def impossible x = case x of {}
//│ ║         	                        ^
//│ ╟── from field selection:
//│ ║  l.827: 	  | Nil -> impossible v.size
//│ ║         	                      ^^^^^^
//│ ╟── Note: class Z is defined at:
//│ ║  l.8: 	class Z
//│ ╙──     	      ^
//│ res: error


rec def sum vec = vec (fun v -> case v of {
  | Nil -> 0
  | Cons -> v.head + sum v.tail
  })
//│ sum: 'a -> 'b
//│   where
//│     'a <: (((Cons[?, ?]\size with {head: int, tail: 'a}) | Nil) -> int) -> (int & 'b)

def sum_ty : Vec[int, 'n] -> int
//│ sum_ty: Vec[int, 'n] -> int

// FIXME should be a cycle error
sum_ty = sum
//│ 'a -> 'b
//│   where
//│     'a <: (((Cons[?, ?]\size with {head: int, tail: 'a}) | Nil) -> int) -> (int & 'b)
//│   <:  sum_ty:
//│ Vec[int, 'n] -> int
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?a, ?sum, ?b, ?c, ?d, ?tail, ?head, ?e, ?f, ?g. ?sum <: forall ?n. Vec[int, ?n] -> int` exceeded recursion depth limit (300)
//│ ║  l.904: 	sum_ty = sum
//│ ║         	^^^^^^^^^^^^
//│ ╟── while constraining:  ‹∀ 0. (‹∀ 1. (((Nil & {size: (‘n' | S[((((((((((‘p_1544' & ‘p_1547') & ‘p_1550') & ‘p_1553') & ‘p_1556') & ‘p_1559') & ‘p_1562') & ‘p_1565') & ‘p_1568') & ‘p_1571') & ‘p_1574')])}) | (Cons[int<number>,S['p43'']] & Cons[int<number>,(‘n' | S[((((((((((‘p_1544' & ‘p_1547') & ‘p_1550') & ‘p_1553') & ‘p_1556') & ‘p_1559') & ‘p_1562') & ‘p_1565') & ‘p_1568') & ‘p_1571') & ‘p_1574')])])) -> 'r42')› -> 'r42')›  <!<  (((α1488_1534' -> (0<int,number> | α1495_1539')),) -> α1496_1540')
//│ ╟── while constraining:  Vec[int<number>,(‘n' | S[((((((((((‘p_1544' & ‘p_1547') & ‘p_1550') & ‘p_1553') & ‘p_1556') & ‘p_1559') & ‘p_1562') & ‘p_1565') & ‘p_1568') & ‘p_1571') & ‘p_1574')])]  <!<  (((α1488_1534' -> (0<int,number> | α1495_1539')),) -> α1496_1540')
//│ ╟── while constraining:  Vec[int<number>,(‘n' | S[((((((((((‘p_1544' & ‘p_1547') & ‘p_1550') & ‘p_1553') & ‘p_1556') & ‘p_1559') & ‘p_1562') & ‘p_1565') & ‘p_1568') & ‘p_1571') & ‘p_1574')])]  <!<  α1487_1533'
//│ ╟── while constraining:  Vec[int<number>,(‘n' | S[((((((((((‘p_1544' & ‘p_1547') & ‘p_1550') & ‘p_1553') & ‘p_1556') & ‘p_1559') & ‘p_1562') & ‘p_1565') & ‘p_1568') & ‘p_1571') & ‘p_1574')])]  <!<  tail1493_1537'
//│ ╟── while constraining:  (cons<> & {Cons#N: mut (S[((((((((((‘p_1544' & ‘p_1547') & ‘p_1550') & ‘p_1553') & ‘p_1556') & ‘p_1559') & ‘p_1562') & ‘p_1565') & ‘p_1568') & ‘p_1571') & ‘p_1574')] | ‘n')..((S[‘p_1574'] & ‘n') | S[((((((((((‘p_1544' & ‘p_1547') & ‘p_1550') & ‘p_1553') & ‘p_1556') & ‘p_1559') & ‘p_1562') & ‘p_1565') & ‘p_1568') & ‘p_1571') | ‘p_1574')]), size: S[(‘n' | S[((((((((((‘p_1544' & ‘p_1547') & ‘p_1550') & ‘p_1553') & ‘p_1556') & ‘p_1559') & ‘p_1562') & ‘p_1565') & ‘p_1568') & ‘p_1571') & ‘p_1574')])], Cons#A: mut ..int<number>, tail: Vec[int<number>,(‘n' | S[((((((((((‘p_1544' & ‘p_1547') & ‘p_1550') & ‘p_1553') & ‘p_1556') & ‘p_1559') & ‘p_1562') & ‘p_1565') & ‘p_1568') & ‘p_1571') & ‘p_1574')])], head: int<number>})  <!<  {tail: tail1493_1537'}
//│ ╟── while constraining:  (cons<> & {Cons#N: mut (S[((((((((((‘p_1544' & ‘p_1547') & ‘p_1550') & ‘p_1553') & ‘p_1556') & ‘p_1559') & ‘p_1562') & ‘p_1565') & ‘p_1568') & ‘p_1571') & ‘p_1574')] | ‘n')..((S[‘p_1574'] & ‘n') | S[((((((((((‘p_1544' & ‘p_1547') & ‘p_1550') & ‘p_1553') & ‘p_1556') & ‘p_1559') & ‘p_1562') & ‘p_1565') & ‘p_1568') & ‘p_1571') | ‘p_1574')]), size: S[(‘n' | S[((((((((((‘p_1544' & ‘p_1547') & ‘p_1550') & ‘p_1553') & ‘p_1556') & ‘p_1559') & ‘p_1562') & ‘p_1565') & ‘p_1568') & ‘p_1571') & ‘p_1574')])], Cons#A: mut ..int<number>, tail: Vec[int<number>,(‘n' | S[((((((((((‘p_1544' & ‘p_1547') & ‘p_1550') & ‘p_1553') & ‘p_1556') & ‘p_1559') & ‘p_1562') & ‘p_1565') & ‘p_1568') & ‘p_1571') & ‘p_1574')])], head: int<number>})  <!<  α1490_1536'
//│ ╟── while constraining:  (Cons[int<number>,S[‘p_1574'..‘p_1574']..S[‘p_1574'..‘p_1574']] & Cons[int<number>,(‘n' | S[(((((((((‘p_1544' & ‘p_1547') & ‘p_1550') & ‘p_1553') & ‘p_1556') & ‘p_1559') & ‘p_1562') & ‘p_1565') & ‘p_1568') & ‘p_1571')])])  <!<  ((nil<> & α1489_1535') | ((cons<> & α1490_1536') & ~(nil<>)))
//│ ╟── while constraining:  ((Nil & {size: (‘n' | S[(((((((((‘p_1544' & ‘p_1547') & ‘p_1550') & ‘p_1553') & ‘p_1556') & ‘p_1559') & ‘p_1562') & ‘p_1565') & ‘p_1568') & ‘p_1571')])}) | (Cons[int<number>,S[‘p_1574'..‘p_1574']..S[‘p_1574'..‘p_1574']] & Cons[int<number>,(‘n' | S[(((((((((‘p_1544' & ‘p_1547') & ‘p_1550') & ‘p_1553') & ‘p_1556') & ‘p_1559') & ‘p_1562') & ‘p_1565') & ‘p_1568') & ‘p_1571')])]))  <!<  ((nil<> & α1489_1535') | ((cons<> & α1490_1536') & ~(nil<>)))
//│ ╟── while constraining:  ((Nil & {size: (‘n' | S[(((((((((‘p_1544' & ‘p_1547') & ‘p_1550') & ‘p_1553') & ‘p_1556') & ‘p_1559') & ‘p_1562') & ‘p_1565') & ‘p_1568') & ‘p_1571')])}) | (Cons[int<number>,S[‘p_1574'..‘p_1574']..S[‘p_1574'..‘p_1574']] & Cons[int<number>,(‘n' | S[(((((((((‘p_1544' & ‘p_1547') & ‘p_1550') & ‘p_1553') & ‘p_1556') & ‘p_1559') & ‘p_1562') & ‘p_1565') & ‘p_1568') & ‘p_1571')])]))  <!<  α1488_1534'
//│ ╟── while constraining:  ((Nil & {size: (‘n' | S[(((((((((‘p_1544' & ‘p_1547') & ‘p_1550') & ‘p_1553') & ‘p_1556') & ‘p_1559') & ‘p_1562') & ‘p_1565') & ‘p_1568') & ‘p_1571')])}) | (Cons[int<number>,S[‘p'']] & Cons[int<number>,(‘n' | S[(((((((((‘p_1544' & ‘p_1547') & ‘p_1550') & ‘p_1553') & ‘p_1556') & ‘p_1559') & ‘p_1562') & ‘p_1565') & ‘p_1568') & ‘p_1571')])]))  <!<  α1488_1534'
//│ ╟── while constraining:  (α1488_1534' -> (0<int,number> | α1495_1539'))  <!<  ‹∀ 1. (((Nil & {size: (‘n' | S[(((((((((‘p_1544' & ‘p_1547') & ‘p_1550') & ‘p_1553') & ‘p_1556') & ‘p_1559') & ‘p_1562') & ‘p_1565') & ‘p_1568') & ‘p_1571')])}) | (Cons[int<number>,S['p43_1572'']] & Cons[int<number>,(‘n' | S[(((((((((‘p_1544' & ‘p_1547') & ‘p_1550') & ‘p_1553') & ‘p_1556') & ‘p_1559') & ‘p_1562') & ‘p_1565') & ‘p_1568') & ‘p_1571')])])) -> 'r42_1573')›
//│ ╟── while constraining:  ((α1488_1534' -> (0<int,number> | α1495_1539')),)  <!<  (‹∀ 1. (((Nil & {size: (‘n' | S[(((((((((‘p_1544' & ‘p_1547') & ‘p_1550') & ‘p_1553') & ‘p_1556') & ‘p_1559') & ‘p_1562') & ‘p_1565') & ‘p_1568') & ‘p_1571')])}) | (Cons[int<number>,S['p43_1572'']] & Cons[int<number>,(‘n' | S[(((((((((‘p_1544' & ‘p_1547') & ‘p_1550') & ‘p_1553') & ‘p_1556') & ‘p_1559') & ‘p_1562') & ‘p_1565') & ‘p_1568') & ‘p_1571')])])) -> 'r42_1573')›,)
//│ ╟── while constraining:  (‹∀ 1. (((Nil & {size: (‘n' | S[(((((((((‘p_1544' & ‘p_1547') & ‘p_1550') & ‘p_1553') & ‘p_1556') & ‘p_1559') & ‘p_1562') & ‘p_1565') & ‘p_1568') & ‘p_1571')])}) | (Cons[int<number>,S['p43_1572'']] & Cons[int<number>,(‘n' | S[(((((((((‘p_1544' & ‘p_1547') & ‘p_1550') & ‘p_1553') & ‘p_1556') & ‘p_1559') & ‘p_1562') & ‘p_1565') & ‘p_1568') & ‘p_1571')])])) -> 'r42_1573')› -> 'r42_1573')  <!<  (((α1488_1534' -> (0<int,number> | α1495_1539')),) -> α1496_1540')
//│ ╟── while constraining:  ‹∀ 0. (‹∀ 1. (((Nil & {size: (‘n' | S[(((((((((‘p_1544' & ‘p_1547') & ‘p_1550') & ‘p_1553') & ‘p_1556') & ‘p_1559') & ‘p_1562') & ‘p_1565') & ‘p_1568') & ‘p_1571')])}) | (Cons[int<number>,S['p43'']] & Cons[int<number>,(‘n' | S[(((((((((‘p_1544' & ‘p_1547') & ‘p_1550') & ‘p_1553') & ‘p_1556') & ‘p_1559') & ‘p_1562') & ‘p_1565') & ‘p_1568') & ‘p_1571')])])) -> 'r42')› -> 'r42')›  <!<  (((α1488_1534' -> (0<int,number> | α1495_1539')),) -> α1496_1540')
//│ ╟── while constraining:  Vec[int<number>,(‘n' | S[(((((((((‘p_1544' & ‘p_1547') & ‘p_1550') & ‘p_1553') & ‘p_1556') & ‘p_1559') & ‘p_1562') & ‘p_1565') & ‘p_1568') & ‘p_1571')])]  <!<  (((α1488_1534' -> (0<int,number> | α1495_1539')),) -> α1496_1540')
//│ ╟── ......
//│ ╟── ......
//│ ╟── while constraining:  ((Nil & {size: ‘n'}) | (Cons[Int,S[‘p_1544'..‘p_1544']..S[‘p_1544'..‘p_1544']] & Cons[Int,‘n']))  <!<  ((nil<> & α1489_1535') | ((cons<> & α1490_1536') & ~(nil<>)))
//│ ╟── while constraining:  ((Nil & {size: ‘n'}) | (Cons[Int,S[‘p_1544'..‘p_1544']..S[‘p_1544'..‘p_1544']] & Cons[Int,‘n']))  <!<  α1488_1534'
//│ ╟── while constraining:  ((Nil & {size: ‘n'}) | (Cons[Int,S[‘p'']] & Cons[Int,‘n']))  <!<  α1488_1534'
//│ ╟── while constraining:  (α1488_1534' -> (0<int,number> | α1495_1539'))  <!<  ‹∀ 1. (((Nil & {size: ‘n'}) | (Cons[Int,S['p43_1542'']] & Cons[Int,‘n'])) -> 'r42_1543')›
//│ ╟── while constraining:  ((α1488_1534' -> (0<int,number> | α1495_1539')),)  <!<  (‹∀ 1. (((Nil & {size: ‘n'}) | (Cons[Int,S['p43_1542'']] & Cons[Int,‘n'])) -> 'r42_1543')›,)
//│ ╟── while constraining:  (‹∀ 1. (((Nil & {size: ‘n'}) | (Cons[Int,S['p43_1542'']] & Cons[Int,‘n'])) -> 'r42_1543')› -> 'r42_1543')  <!<  (((α1488_1534' -> (0<int,number> | α1495_1539')),) -> α1496_1540')
//│ ╟── while constraining:  ‹∀ 0. (‹∀ 1. (((Nil & {size: ‘n'}) | (Cons[Int,S['p43'']] & Cons[Int,‘n'])) -> 'r42')› -> 'r42')›  <!<  (((α1488_1534' -> (0<int,number> | α1495_1539')),) -> α1496_1540')
//│ ╟── while constraining:  Vec[Int,‘n']  <!<  (((α1488_1534' -> (0<int,number> | α1495_1539')),) -> α1496_1540')
//│ ╟── while constraining:  Vec[Int,‘n']  <!<  α1487_1533'
//│ ╟── while constraining:  (Vec[Int,‘n'],)  <!<  (α1487_1533',)
//│ ╟── while constraining:  (α1487_1533' -> α1496_1540')  <!<  (Vec[Int,‘n'] -> Int)
//│ ╟── while constraining:  sum1486_1532'  <!<  (Vec[Int,‘n'] -> Int)
//│ ╟── while constraining:  ‹∀ 0. sum1486'›  <!<  (Vec[Int,‘n'] -> Int)
//│ ╟── while constraining:  ‹∀ 0. ‹∀ 0. sum1486'››  <!<  (Vec[Int,‘n'] -> Int)
//│ ╙── while constraining:  ‹∀ 0. ‹∀ 0. sum1486'››  <!<  ‹∀ 0. (Vec[Int,'n1511'] -> Int)›


sum nil
//│ res: int

sum v1_0
//│ res: error

sum v2
//│ res: error




// === === === ERROR CASES === === === //


:ShowRelativeLineNums
:AllowTypeErrors


def head1_ty v = case v of {
  | Nil -> impossible v.size
  | Cons -> v.head
  }
//│ ((Cons[?, ?]\size\tail with {head: 'head}) | Nil & {size: nothing}) -> 'head
//│   <:  head1_ty:
//│ Vec['a, S['p]] -> 'a
//│ ╔══[ERROR] Type mismatch in def definition:
//│ ║  l.+1: 	def head1_ty v = case v of {
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.+2: 	  | Nil -> impossible v.size
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.+3: 	  | Cons -> v.head
//│ ║        	^^^^^^^^^^^^^^^^^^
//│ ║  l.+4: 	  }
//│ ║        	^^^
//│ ╟── type `(forall ?p. (Cons[‘a, in S[in ‘p & ?p out ?p | ‘p] out S[in ?p | ‘p out ‘p & ?p]] | (Nil with {size: S[‘p]})) -> ?r) -> ?r` does not match type `Cons[?, ?] & ?a | Nil & ?b`
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── Note: constraint arises from reference:
//│ ║  l.+1: 	def head1_ty v = case v of {
//│ ╙──      	                      ^


sum v1_ty
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.+1: 	sum v1_ty
//│ ║        	^^^^^^^^^
//│ ╟── type `Cons[int, Z]` is not a function
//│ ║  l.704: 	v1_ty = v1_ : Cons[int, Z]
//│ ║         	              ^^^^^^^^^^^^
//│ ╟── but it flows into reference with expected type `(?a -> ?b) -> ?c`
//│ ║  l.+1: 	sum v1_ty
//│ ║        	    ^^^^^
//│ ╟── Note: constraint arises from application:
//│ ║  l.892: 	rec def sum vec = vec (fun v -> case v of {
//│ ║         	                  ^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.893: 	  | Nil -> 0
//│ ║         	^^^^^^^^^^^^
//│ ║  l.894: 	  | Cons -> v.head + sum v.tail
//│ ║         	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.895: 	  })
//│ ║         	^^^^
//│ ╟── from reference:
//│ ║  l.892: 	rec def sum vec = vec (fun v -> case v of {
//│ ╙──       	                  ^^^
//│ res: error


