
:GeneralizeCurriedFunctions
:ArgGen // Type of cons is much simpler without this...

:AllowTypeErrors // FIXME


class Z
class S[P]
  method Inv: P -> P
  method Inv = id
//│ Defined class Z
//│ Defined class S[=P]
//│ Declared S.Inv: S['P] -> 'P -> 'P
//│ Defined S.Inv: S['P] -> (forall 'a. 'a -> 'a)

:IrregularTypes

class Cons[A, N]: { size: S[N]; head: A; tail: Vec[A, N] }
class Nil: { size: Z }
type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ Defined class Cons[+A, =N]
//│ Defined class Nil
//│ Defined type alias Vec[+A, =N]

type AnyVec[A] = forall 'r. (forall 'p. Nil | Cons[A, S['p]] -> 'r) -> 'r
//│ Defined type alias AnyVec[+A]

def Nil = Nil { size = Z{} }
def Cons head tail = Cons { head; tail; size = S{} }
//│ Nil: Nil
//│ Cons: 'a -> (forall 'A, 'N, 'tail. (Vec['A, 'N] & 'tail) -> (Cons['A | 'a, 'N] with {head: 'a, tail: 'tail}))


def nil k = k Nil
def cons h t k = k (Cons h t)
//│ nil: (Nil -> 'a) -> 'a
//│ cons: 'a -> (forall 'b. 'b -> ((forall 'a, 'b, 'A, 'N. (Cons['A | 'a, 'N] with {head: 'a, tail: 'b}
//│   where
//│     'b <: Vec['A, 'N]
//│     'b <: Vec['A, 'N])) -> 'c) -> 'c)

nil_ty = nil : Vec[int, Z]
//│ nil_ty: Vec[int, Z]

def cons_ty : forall 'a. 'a -> Vec['a, 'n] -> Vec['a, S['n]]
//│ cons_ty: 'a -> Vec['a, 'n] -> Vec['a, S['n]]

// FIXME runs out of fuel, making the test very slow...
// cons_ty = cons : forall 'a. 'a -> Vec['a, 'n] -> Vec['a, S['n]]

// FIXME runs out of fuel, making the test very slow...
// cons_ty2 = cons : forall 'a. 'a -> Vec['a, 'n] -> Vec['a, S['n]]

type Cons_ty = forall 'a. 'a -> Vec['a, 'n] -> Vec['a, S['n]]
//│ Defined type alias Cons_ty












// :exit
// ====================================================================================================


















cons_ty = cons : Cons_ty
//│ ╔══[ERROR] Type mismatch in type ascription:
//│ ║  l.89: 	cons_ty = cons : Cons_ty
//│ ║        	          ^^^^
//│ ╟── type `‘n_247` is not an instance of type `S`
//│ ║  l.55: 	type Cons_ty = forall 'a. 'a -> Vec['a, 'n] -> Vec['a, S['n]]
//│ ║        	                                        ^^
//│ ╟── Note: constraint arises from applied type reference:
//│ ║  l.55: 	type Cons_ty = forall 'a. 'a -> Vec['a, 'n] -> Vec['a, S['n]]
//│ ╙──      	                                                       ^^^^^
//│ Cons_ty
//│   <:  cons_ty:
//│ 'a -> Vec['a, 'n] -> Vec['a, S['n]]

cons_ty3 = cons : Cons_ty
//│ ╔══[ERROR] Type mismatch in type ascription:
//│ ║  l.103: 	cons_ty3 = cons : Cons_ty
//│ ║         	           ^^^^
//│ ╟── type `‘n_301` is not an instance of type `S`
//│ ║  l.55: 	type Cons_ty = forall 'a. 'a -> Vec['a, 'n] -> Vec['a, S['n]]
//│ ║        	                                        ^^
//│ ╟── Note: constraint arises from applied type reference:
//│ ║  l.55: 	type Cons_ty = forall 'a. 'a -> Vec['a, 'n] -> Vec['a, S['n]]
//│ ╙──      	                                                       ^^^^^
//│ cons_ty3: Cons_ty

def cons h (t: Vec['a, 'n]) k = k (Cons h t)
//│ cons: 'b -> (forall 'a, 'n. Vec['a, 'n] -> (forall 'c. ((Cons['a | 'b, 'n] with {head: 'b, tail: Vec['a, 'n]}) -> 'c) -> 'c))

cons : Cons_ty
//│ ╔══[ERROR] Type mismatch in type ascription:
//│ ║  l.118: 	cons : Cons_ty
//│ ║         	^^^^
//│ ╟── expression of type `S[in ‘n_434 & ?p out ‘n_434 & ?p0]` is not an instance of type `'n_434`
//│ ╟── Note: constraint arises from type variable:
//│ ║  l.55: 	type Cons_ty = forall 'a. 'a -> Vec['a, 'n] -> Vec['a, S['n]]
//│ ║        	                                        ^^
//│ ╟── from type variable:
//│ ║  l.115: 	def cons h (t: Vec['a, 'n]) k = k (Cons h t)
//│ ╙──       	                       ^^
//│ res: Cons_ty

def cons h (t: Vec['a, 'n]) k = k (Cons h t)
//│ cons: 'b -> (forall 'a, 'n. Vec['a, 'n] -> (forall 'c. ((Cons['a | 'b, 'n] with {head: 'b, tail: Vec['a, 'n]}) -> 'c) -> 'c))

cons : Cons_ty
//│ ╔══[ERROR] Type mismatch in type ascription:
//│ ║  l.134: 	cons : Cons_ty
//│ ║         	^^^^
//│ ╟── expression of type `S[in ‘n_567 & ?p out ‘n_567 & ?p0]` is not an instance of type `'n_567`
//│ ╟── Note: constraint arises from type variable:
//│ ║  l.55: 	type Cons_ty = forall 'a. 'a -> Vec['a, 'n] -> Vec['a, S['n]]
//│ ║        	                                        ^^
//│ ╟── from type variable:
//│ ║  l.131: 	def cons h (t: Vec['a, 'n]) k = k (Cons h t)
//│ ╙──       	                       ^^
//│ res: Cons_ty


// v0 = nil

// v0_ty = v0 : Vec[int, Z]

v1_ = Cons 1 nil
//│ v1_: Cons[1, 'P] with {tail: forall 'a. (Nil -> 'a) -> 'a}
//│   where
//│     'P :> Z

v1_ty = v1_ : Cons[int, Z]
//│ v1_ty: Cons[int, Z]

v1_0 = cons 1 nil
//│ v1_0: ((Cons[1, 'n] with {tail: Vec[nothing, 'n]}) -> 'a) -> 'a
//│   where
//│     'n :> Z

v1_0 : Vec[int, S[Z]]
//│ ╔══[ERROR] Type mismatch in type ascription:
//│ ║  l.165: 	v1_0 : Vec[int, S[Z]]
//│ ║         	^^^^
//│ ╟── application of type `Z` is not an instance of type `S`
//│ ║  l.29: 	def Nil = Nil { size = Z{} }
//│ ║        	                       ^^^
//│ ╟── Note: constraint arises from applied type reference:
//│ ║  l.165: 	v1_0 : Vec[int, S[Z]]
//│ ║         	                ^^^^
//│ ╟── Note: class Z is defined at:
//│ ║  l.8: 	class Z
//│ ╙──     	      ^
//│ res: Vec[int, S[Z]]

v1_1 k = k v1_
//│ v1_1: ((forall 'P. Cons[1, 'P] with {tail: forall 'a. (Nil -> 'a) -> 'a}) -> 'b) -> 'b
//│   where
//│     'P :> Z

// :e
v1_1 : Vec[int, S[Z]]
//│ ╔══[ERROR] Type mismatch in type ascription:
//│ ║  l.186: 	v1_1 : Vec[int, S[Z]]
//│ ║         	^^^^
//│ ╟── application of type `Z` is not an instance of type `S`
//│ ║  l.29: 	def Nil = Nil { size = Z{} }
//│ ║        	                       ^^^
//│ ╟── Note: constraint arises from applied type reference:
//│ ║  l.186: 	v1_1 : Vec[int, S[Z]]
//│ ║         	                ^^^^
//│ ╟── Note: class Z is defined at:
//│ ║  l.8: 	class Z
//│ ╙──     	      ^
//│ res: Vec[int, S[Z]]


v1_tty = cons_ty 1 nil_ty
//│ v1_tty: Vec[int, S['n]]
//│   where
//│     'n :> Z
//│        <: S[in ‘p_808_810 | ‘p_808_811 out ‘p_808_810 & ‘p_808_811] | Z

v1_tty = cons_ty2 1 nil_ty
//│ ╔══[ERROR] identifier not found: cons_ty2
//│ ║  l.208: 	v1_tty = cons_ty2 1 nil_ty
//│ ╙──       	         ^^^^^^^^
//│ v1_tty: error

v1_tty = cons_ty3 1 nil_ty
//│ v1_tty: Vec[int, S['n]]
//│   where
//│     'n :> Z
//│        <: S[in ‘p_828_830 | ‘p_828_831 out ‘p_828_830 & ‘p_828_831] | Z


v2 = cons 1 (cons 2 nil)
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.221: 	v2 = cons 1 (cons 2 nil)
//│ ║         	     ^^^^^^^^^^^^^^^^^^^
//│ ╟── application of type `Z` is not an instance of type `S`
//│ ║  l.29: 	def Nil = Nil { size = Z{} }
//│ ║        	                       ^^^
//│ ╟── Note: constraint arises from applied type reference:
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                                                     ^^^^^
//│ ╟── Note: class Z is defined at:
//│ ║  l.8: 	class Z
//│ ╙──     	      ^
//│ v2: error


def impossible x = case x of {}
//│ impossible: nothing -> nothing

def head1 vec = vec (fun v -> case v of {
  | Nil -> impossible v.size
  | Cons -> v.head
  })
//│ head1: ((forall 'head. ((Cons[?, ?]\size\tail with {head: 'head}) | Nil & {size: nothing}) -> 'head) -> 'a) -> 'a

def head1_ty : Vec['a, S['p]] -> 'a
head1_ty = head1
//│ head1_ty: Vec['a, S['p]] -> 'a
//│ ((forall 'head. ((Cons[?, ?]\size\tail with {head: 'head}) | Nil & {size: nothing}) -> 'head) -> 'a) -> 'a
//│   <:  head1_ty:
//│ Vec['a, S['p]] -> 'a

// FIXME works without `:GeneralizeCurriedFunctions`!
def head2 (vec: Vec['a, S['p]]) = vec (fun v -> case v of {
  | Nil -> impossible v.size
  | Cons -> v.head
  })
//│ head2: Vec['a, S['p]] -> 'a

head1 v1
head1 v2
//│ ╔══[ERROR] identifier not found: v1
//│ ║  l.260: 	head1 v1
//│ ╙──       	      ^^
//│ res: error
//│ res: error

:e
head1 nil
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.269: 	head1 nil
//│ ║         	^^^^^^^^^
//│ ╟── application of type `Z` does not match type `nothing`
//│ ║  l.29: 	def Nil = Nil { size = Z{} }
//│ ║        	                       ^^^
//│ ╟── Note: constraint arises from reference:
//│ ║  l.237: 	def impossible x = case x of {}
//│ ║         	                        ^
//│ ╟── from field selection:
//│ ║  l.241: 	  | Nil -> impossible v.size
//│ ║         	                      ^^^^^^
//│ ╟── Note: class Z is defined at:
//│ ║  l.8: 	class Z
//│ ╙──     	      ^
//│ res: error


rec def sum vec = vec (fun v -> case v of {
  | Nil -> 0
  | Cons -> v.head + sum v.tail
  })
//│ sum: 'a -> 'b
//│   where
//│     'a <: (((Cons[?, ?]\size with {head: int, tail: 'a}) | Nil) -> int) -> (int & 'b)

def sum_ty : Vec[int, 'n] -> int
//│ sum_ty: Vec[int, 'n] -> int

// FIXME should be a cycle error
sum_ty = sum
//│ 'a -> 'b
//│   where
//│     'a <: (((Cons[?, ?]\size with {head: int, tail: 'a}) | Nil) -> int) -> (int & 'b)
//│   <:  sum_ty:
//│ Vec[int, 'n] -> int
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?a, ?sum, ?b, ?c, ?d, ?tail, ?head, ?e, ?f, ?g. ?sum <: forall ?n. Vec[int, ?n] -> int` exceeded recursion depth limit (300)
//│ ║  l.300: 	sum_ty = sum
//│ ║         	^^^^^^^^^^^^
//│ ╟── while constraining:  ‹∀ 2. (‹∀ 3. (((Nil & {size: (‘n_1130' | S[((((((((((‘p_1143_1144' & ‘p_1147_1148') & ‘p_1151_1152') & ‘p_1155_1156') & ‘p_1159_1160') & ‘p_1163_1164') & ‘p_1167_1168') & ‘p_1171_1172') & ‘p_1175_1176') & ‘p_1179_1180') & ‘p_1183_1184')])}) | (Cons[int<number>,S['p45_47'''']] & Cons[int<number>,(‘n_1130' | S[((((((((((‘p_1143_1144' & ‘p_1147_1148') & ‘p_1151_1152') & ‘p_1155_1156') & ‘p_1159_1160') & ‘p_1163_1164') & ‘p_1167_1168') & ‘p_1171_1172') & ‘p_1175_1176') & ‘p_1179_1180') & ‘p_1183_1184')])])) -> 'r44_48''')› -> 'r44_48''')›  <!<  (((α1085_1133' -> (0<int,number> | α1092_1138')),) -> α1093_1139')
//│ ╟── while constraining:  Vec[int<number>,(‘n_1130' | S[((((((((((‘p_1143_1144' & ‘p_1147_1148') & ‘p_1151_1152') & ‘p_1155_1156') & ‘p_1159_1160') & ‘p_1163_1164') & ‘p_1167_1168') & ‘p_1171_1172') & ‘p_1175_1176') & ‘p_1179_1180') & ‘p_1183_1184')])]  <!<  (((α1085_1133' -> (0<int,number> | α1092_1138')),) -> α1093_1139')
//│ ╟── while constraining:  Vec[int<number>,(‘n_1130' | S[((((((((((‘p_1143_1144' & ‘p_1147_1148') & ‘p_1151_1152') & ‘p_1155_1156') & ‘p_1159_1160') & ‘p_1163_1164') & ‘p_1167_1168') & ‘p_1171_1172') & ‘p_1175_1176') & ‘p_1179_1180') & ‘p_1183_1184')])]  <!<  α1084_1132'
//│ ╟── while constraining:  Vec[int<number>,(‘n_1130' | S[((((((((((‘p_1143_1144' & ‘p_1147_1148') & ‘p_1151_1152') & ‘p_1155_1156') & ‘p_1159_1160') & ‘p_1163_1164') & ‘p_1167_1168') & ‘p_1171_1172') & ‘p_1175_1176') & ‘p_1179_1180') & ‘p_1183_1184')])]  <!<  tail1090_1136'
//│ ╟── while constraining:  (cons<> & {Cons#N: mut (S[((((((((((‘p_1143_1144' & ‘p_1147_1148') & ‘p_1151_1152') & ‘p_1155_1156') & ‘p_1159_1160') & ‘p_1163_1164') & ‘p_1167_1168') & ‘p_1171_1172') & ‘p_1175_1176') & ‘p_1179_1180') & ‘p_1183_1184')] | ‘n_1130')..((S[‘p_1183_1184'] & ‘n_1130') | S[((((((((((‘p_1143_1144' & ‘p_1147_1148') & ‘p_1151_1152') & ‘p_1155_1156') & ‘p_1159_1160') & ‘p_1163_1164') & ‘p_1167_1168') & ‘p_1171_1172') & ‘p_1175_1176') & ‘p_1179_1180') | ‘p_1183_1184')]), size: S[(‘n_1130' | S[((((((((((‘p_1143_1144' & ‘p_1147_1148') & ‘p_1151_1152') & ‘p_1155_1156') & ‘p_1159_1160') & ‘p_1163_1164') & ‘p_1167_1168') & ‘p_1171_1172') & ‘p_1175_1176') & ‘p_1179_1180') & ‘p_1183_1184')])], Cons#A: mut ..int<number>, tail: Vec[int<number>,(‘n_1130' | S[((((((((((‘p_1143_1144' & ‘p_1147_1148') & ‘p_1151_1152') & ‘p_1155_1156') & ‘p_1159_1160') & ‘p_1163_1164') & ‘p_1167_1168') & ‘p_1171_1172') & ‘p_1175_1176') & ‘p_1179_1180') & ‘p_1183_1184')])], head: int<number>})  <!<  {tail: tail1090_1136'}
//│ ╟── while constraining:  (cons<> & {Cons#N: mut (S[((((((((((‘p_1143_1144' & ‘p_1147_1148') & ‘p_1151_1152') & ‘p_1155_1156') & ‘p_1159_1160') & ‘p_1163_1164') & ‘p_1167_1168') & ‘p_1171_1172') & ‘p_1175_1176') & ‘p_1179_1180') & ‘p_1183_1184')] | ‘n_1130')..((S[‘p_1183_1184'] & ‘n_1130') | S[((((((((((‘p_1143_1144' & ‘p_1147_1148') & ‘p_1151_1152') & ‘p_1155_1156') & ‘p_1159_1160') & ‘p_1163_1164') & ‘p_1167_1168') & ‘p_1171_1172') & ‘p_1175_1176') & ‘p_1179_1180') | ‘p_1183_1184')]), size: S[(‘n_1130' | S[((((((((((‘p_1143_1144' & ‘p_1147_1148') & ‘p_1151_1152') & ‘p_1155_1156') & ‘p_1159_1160') & ‘p_1163_1164') & ‘p_1167_1168') & ‘p_1171_1172') & ‘p_1175_1176') & ‘p_1179_1180') & ‘p_1183_1184')])], Cons#A: mut ..int<number>, tail: Vec[int<number>,(‘n_1130' | S[((((((((((‘p_1143_1144' & ‘p_1147_1148') & ‘p_1151_1152') & ‘p_1155_1156') & ‘p_1159_1160') & ‘p_1163_1164') & ‘p_1167_1168') & ‘p_1171_1172') & ‘p_1175_1176') & ‘p_1179_1180') & ‘p_1183_1184')])], head: int<number>})  <!<  α1087_1135'
//│ ╟── while constraining:  (Cons[int<number>,S[‘p_1183_1184'..‘p_1183_1184']..S[‘p_1183_1184'..‘p_1183_1184']] & Cons[int<number>,(‘n_1130' | S[(((((((((‘p_1143_1144' & ‘p_1147_1148') & ‘p_1151_1152') & ‘p_1155_1156') & ‘p_1159_1160') & ‘p_1163_1164') & ‘p_1167_1168') & ‘p_1171_1172') & ‘p_1175_1176') & ‘p_1179_1180')])])  <!<  ((nil<> & α1086_1134') | ((cons<> & α1087_1135') & ~(nil<>)))
//│ ╟── while constraining:  ((Nil & {size: (‘n_1130' | S[(((((((((‘p_1143_1144' & ‘p_1147_1148') & ‘p_1151_1152') & ‘p_1155_1156') & ‘p_1159_1160') & ‘p_1163_1164') & ‘p_1167_1168') & ‘p_1171_1172') & ‘p_1175_1176') & ‘p_1179_1180')])}) | (Cons[int<number>,S[‘p_1183_1184'..‘p_1183_1184']..S[‘p_1183_1184'..‘p_1183_1184']] & Cons[int<number>,(‘n_1130' | S[(((((((((‘p_1143_1144' & ‘p_1147_1148') & ‘p_1151_1152') & ‘p_1155_1156') & ‘p_1159_1160') & ‘p_1163_1164') & ‘p_1167_1168') & ‘p_1171_1172') & ‘p_1175_1176') & ‘p_1179_1180')])]))  <!<  ((nil<> & α1086_1134') | ((cons<> & α1087_1135') & ~(nil<>)))
//│ ╟── while constraining:  ((Nil & {size: (‘n_1130' | S[(((((((((‘p_1143_1144' & ‘p_1147_1148') & ‘p_1151_1152') & ‘p_1155_1156') & ‘p_1159_1160') & ‘p_1163_1164') & ‘p_1167_1168') & ‘p_1171_1172') & ‘p_1175_1176') & ‘p_1179_1180')])}) | (Cons[int<number>,S[‘p_1183_1184'..‘p_1183_1184']..S[‘p_1183_1184'..‘p_1183_1184']] & Cons[int<number>,(‘n_1130' | S[(((((((((‘p_1143_1144' & ‘p_1147_1148') & ‘p_1151_1152') & ‘p_1155_1156') & ‘p_1159_1160') & ‘p_1163_1164') & ‘p_1167_1168') & ‘p_1171_1172') & ‘p_1175_1176') & ‘p_1179_1180')])]))  <!<  α1085_1133'
//│ ╟── while constraining:  ((Nil & {size: (‘n_1130' | S[(((((((((‘p_1143_1144' & ‘p_1147_1148') & ‘p_1151_1152') & ‘p_1155_1156') & ‘p_1159_1160') & ‘p_1163_1164') & ‘p_1167_1168') & ‘p_1171_1172') & ‘p_1175_1176') & ‘p_1179_1180')])}) | (Cons[int<number>,S[‘p_1183'']] & Cons[int<number>,(‘n_1130' | S[(((((((((‘p_1143_1144' & ‘p_1147_1148') & ‘p_1151_1152') & ‘p_1155_1156') & ‘p_1159_1160') & ‘p_1163_1164') & ‘p_1167_1168') & ‘p_1171_1172') & ‘p_1175_1176') & ‘p_1179_1180')])]))  <!<  α1085_1133'
//│ ╟── while constraining:  (α1085_1133' -> (0<int,number> | α1092_1138'))  <!<  ‹∀ 3. (((Nil & {size: (‘n_1130' | S[(((((((((‘p_1143_1144' & ‘p_1147_1148') & ‘p_1151_1152') & ‘p_1155_1156') & ‘p_1159_1160') & ‘p_1163_1164') & ‘p_1167_1168') & ‘p_1171_1172') & ‘p_1175_1176') & ‘p_1179_1180')])}) | (Cons[int<number>,S['p45_1181'''']] & Cons[int<number>,(‘n_1130' | S[(((((((((‘p_1143_1144' & ‘p_1147_1148') & ‘p_1151_1152') & ‘p_1155_1156') & ‘p_1159_1160') & ‘p_1163_1164') & ‘p_1167_1168') & ‘p_1171_1172') & ‘p_1175_1176') & ‘p_1179_1180')])])) -> 'r44_1182')›
//│ ╟── while constraining:  ((α1085_1133' -> (0<int,number> | α1092_1138')),)  <!<  (‹∀ 3. (((Nil & {size: (‘n_1130' | S[(((((((((‘p_1143_1144' & ‘p_1147_1148') & ‘p_1151_1152') & ‘p_1155_1156') & ‘p_1159_1160') & ‘p_1163_1164') & ‘p_1167_1168') & ‘p_1171_1172') & ‘p_1175_1176') & ‘p_1179_1180')])}) | (Cons[int<number>,S['p45_1181'''']] & Cons[int<number>,(‘n_1130' | S[(((((((((‘p_1143_1144' & ‘p_1147_1148') & ‘p_1151_1152') & ‘p_1155_1156') & ‘p_1159_1160') & ‘p_1163_1164') & ‘p_1167_1168') & ‘p_1171_1172') & ‘p_1175_1176') & ‘p_1179_1180')])])) -> 'r44_1182')›,)
//│ ╟── while constraining:  (‹∀ 3. (((Nil & {size: (‘n_1130' | S[(((((((((‘p_1143_1144' & ‘p_1147_1148') & ‘p_1151_1152') & ‘p_1155_1156') & ‘p_1159_1160') & ‘p_1163_1164') & ‘p_1167_1168') & ‘p_1171_1172') & ‘p_1175_1176') & ‘p_1179_1180')])}) | (Cons[int<number>,S['p45_1181'''']] & Cons[int<number>,(‘n_1130' | S[(((((((((‘p_1143_1144' & ‘p_1147_1148') & ‘p_1151_1152') & ‘p_1155_1156') & ‘p_1159_1160') & ‘p_1163_1164') & ‘p_1167_1168') & ‘p_1171_1172') & ‘p_1175_1176') & ‘p_1179_1180')])])) -> 'r44_1182')› -> 'r44_1182')  <!<  (((α1085_1133' -> (0<int,number> | α1092_1138')),) -> α1093_1139')
//│ ╟── while constraining:  ‹∀ 2. (‹∀ 3. (((Nil & {size: (‘n_1130' | S[(((((((((‘p_1143_1144' & ‘p_1147_1148') & ‘p_1151_1152') & ‘p_1155_1156') & ‘p_1159_1160') & ‘p_1163_1164') & ‘p_1167_1168') & ‘p_1171_1172') & ‘p_1175_1176') & ‘p_1179_1180')])}) | (Cons[int<number>,S['p45_47'''']] & Cons[int<number>,(‘n_1130' | S[(((((((((‘p_1143_1144' & ‘p_1147_1148') & ‘p_1151_1152') & ‘p_1155_1156') & ‘p_1159_1160') & ‘p_1163_1164') & ‘p_1167_1168') & ‘p_1171_1172') & ‘p_1175_1176') & ‘p_1179_1180')])])) -> 'r44_48''')› -> 'r44_48''')›  <!<  (((α1085_1133' -> (0<int,number> | α1092_1138')),) -> α1093_1139')
//│ ╟── while constraining:  Vec[int<number>,(‘n_1130' | S[(((((((((‘p_1143_1144' & ‘p_1147_1148') & ‘p_1151_1152') & ‘p_1155_1156') & ‘p_1159_1160') & ‘p_1163_1164') & ‘p_1167_1168') & ‘p_1171_1172') & ‘p_1175_1176') & ‘p_1179_1180')])]  <!<  (((α1085_1133' -> (0<int,number> | α1092_1138')),) -> α1093_1139')
//│ ╟── ......
//│ ╟── ......
//│ ╟── while constraining:  ((Nil & {size: ‘n_1130'}) | (Cons[Int,S[‘p_1143_1144'..‘p_1143_1144']..S[‘p_1143_1144'..‘p_1143_1144']] & Cons[Int,‘n_1130']))  <!<  ((nil<> & α1086_1134') | ((cons<> & α1087_1135') & ~(nil<>)))
//│ ╟── while constraining:  ((Nil & {size: ‘n_1130'}) | (Cons[Int,S[‘p_1143_1144'..‘p_1143_1144']..S[‘p_1143_1144'..‘p_1143_1144']] & Cons[Int,‘n_1130']))  <!<  α1085_1133'
//│ ╟── while constraining:  ((Nil & {size: ‘n_1130'}) | (Cons[Int,S[‘p_1143'']] & Cons[Int,‘n_1130']))  <!<  α1085_1133'
//│ ╟── while constraining:  (α1085_1133' -> (0<int,number> | α1092_1138'))  <!<  ‹∀ 3. (((Nil & {size: ‘n_1130'}) | (Cons[Int,S['p45_1141'''']] & Cons[Int,‘n_1130'])) -> 'r44_1142')›
//│ ╟── while constraining:  ((α1085_1133' -> (0<int,number> | α1092_1138')),)  <!<  (‹∀ 3. (((Nil & {size: ‘n_1130'}) | (Cons[Int,S['p45_1141'''']] & Cons[Int,‘n_1130'])) -> 'r44_1142')›,)
//│ ╟── while constraining:  (‹∀ 3. (((Nil & {size: ‘n_1130'}) | (Cons[Int,S['p45_1141'''']] & Cons[Int,‘n_1130'])) -> 'r44_1142')› -> 'r44_1142')  <!<  (((α1085_1133' -> (0<int,number> | α1092_1138')),) -> α1093_1139')
//│ ╟── while constraining:  ‹∀ 2. (‹∀ 3. (((Nil & {size: ‘n_1130'}) | (Cons[Int,S['p45_47'''']] & Cons[Int,‘n_1130'])) -> 'r44_48''')› -> 'r44_48''')›  <!<  (((α1085_1133' -> (0<int,number> | α1092_1138')),) -> α1093_1139')
//│ ╟── while constraining:  Vec[Int,‘n_1130']  <!<  (((α1085_1133' -> (0<int,number> | α1092_1138')),) -> α1093_1139')
//│ ╟── while constraining:  Vec[Int,‘n_1130']  <!<  α1084_1132'
//│ ╟── while constraining:  (Vec[Int,‘n_1130'],)  <!<  (α1084_1132',)
//│ ╟── while constraining:  (α1084_1132' -> α1093_1139')  <!<  (Vec[Int,‘n_1130'] -> Int)
//│ ╟── while constraining:  sum1083_1131'  <!<  (Vec[Int,‘n_1130'] -> Int)
//│ ╟── while constraining:  ‹∀ 0. sum1083'›  <!<  (Vec[Int,‘n_1130'] -> Int)
//│ ╟── while constraining:  ‹∀ 0. ‹∀ 0. sum1083'››  <!<  (Vec[Int,‘n_1130'] -> Int)
//│ ╙── while constraining:  ‹∀ 0. ‹∀ 0. sum1083'››  <!<  ‹∀ 0. (Vec[Int,'n1108_1109'] -> Int)›


sum nil
//│ res: int

sum v1_0
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?b, ?sum, ?c, ?d, ?e, ?tail, ?head, ?f, ?g, ?h. ?sum <: (forall ?a, ?i, ?j, ?n, ?k. ?j) -> ?l` exceeded recursion depth limit (300)
//│ ║  l.346: 	sum v1_0
//│ ║         	^^^^^^^^
//│ ╟── while constraining:  (((Nil & {size: ('n479_1227 | S[((((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277) & ‘p_1280_1281)])}) | (Cons['a478_1233,S[‘p_1284']] & Cons['a478_1233,('n479_1227 | S[((((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277) & ‘p_1280_1281)])])),)  <!<  (α1085_1214,)
//│ ╟── while constraining:  (α1085_1214 -> (0<int,number> | α1092_1219))  <!<  (((Nil & {size: ('n479_1227 | S[((((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277) & ‘p_1280_1281)])}) | (Cons['a478_1233,S[‘p_1284']] & Cons['a478_1233,('n479_1227 | S[((((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277) & ‘p_1280_1281)])])) -> 'r44_1283)
//│ ╟── while constraining:  (α1085_1214 -> (0<int,number> | α1092_1219))  <!<  ‹∀ 3. (((Nil & {size: ('n479_1227 | S[((((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277) & ‘p_1280_1281)])}) | (Cons['a478_1233,S['p45_1282'''']] & Cons['a478_1233,('n479_1227 | S[((((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277) & ‘p_1280_1281)])])) -> 'r44_1283)›
//│ ╟── while constraining:  ((α1085_1214 -> (0<int,number> | α1092_1219)),)  <!<  (‹∀ 3. (((Nil & {size: ('n479_1227 | S[((((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277) & ‘p_1280_1281)])}) | (Cons['a478_1233,S['p45_1282'''']] & Cons['a478_1233,('n479_1227 | S[((((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277) & ‘p_1280_1281)])])) -> 'r44_1283)›,)
//│ ╟── while constraining:  (‹∀ 3. (((Nil & {size: ('n479_1227 | S[((((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277) & ‘p_1280_1281)])}) | (Cons['a478_1233,S['p45_1282'''']] & Cons['a478_1233,('n479_1227 | S[((((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277) & ‘p_1280_1281)])])) -> 'r44_1283)› -> 'r44_1283)  <!<  (((α1085_1214 -> (0<int,number> | α1092_1219)),) -> α1093_1220)
//│ ╟── while constraining:  ‹∀ 2. (‹∀ 3. (((Nil & {size: ('n479_1227 | S[((((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277) & ‘p_1280_1281)])}) | (Cons['a478_1233,S['p45_47'''']] & Cons['a478_1233,('n479_1227 | S[((((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277) & ‘p_1280_1281)])])) -> 'r44_48''')› -> 'r44_48''')›  <!<  (((α1085_1214 -> (0<int,number> | α1092_1219)),) -> α1093_1220)
//│ ╟── while constraining:  Vec['a478_1233,('n479_1227 | S[((((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277) & ‘p_1280_1281)])]  <!<  (((α1085_1214 -> (0<int,number> | α1092_1219)),) -> α1093_1220)
//│ ╟── while constraining:  Vec['a478_1233,('n479_1227 | S[((((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277) & ‘p_1280_1281)])]  <!<  α1084_1213
//│ ╟── while constraining:  Vec['a478_1233,('n479_1227 | S[((((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277) & ‘p_1280_1281)])]  <!<  tail1090_1217
//│ ╟── while constraining:  (cons<> & {Cons#N: mut (S[((((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277) & ‘p_1280_1281)] | 'n479_1227)..((S[‘p_1280_1281] & 'n479_1227) | S[((((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277) | ‘p_1280_1281)]), size: S[('n479_1227 | S[((((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277) & ‘p_1280_1281)])], Cons#A: mut ..'a478_1233, tail: Vec['a478_1233,('n479_1227 | S[((((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277) & ‘p_1280_1281)])], head: 'a478_1233})  <!<  {tail: tail1090_1217}
//│ ╟── while constraining:  (cons<> & {Cons#N: mut (S[((((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277) & ‘p_1280_1281)] | 'n479_1227)..((S[‘p_1280_1281] & 'n479_1227) | S[((((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277) | ‘p_1280_1281)]), size: S[('n479_1227 | S[((((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277) & ‘p_1280_1281)])], Cons#A: mut ..'a478_1233, tail: Vec['a478_1233,('n479_1227 | S[((((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277) & ‘p_1280_1281)])], head: 'a478_1233})  <!<  α1087_1216
//│ ╟── while constraining:  (Cons['a478_1233,S[‘p_1280_1281..‘p_1280_1281]..S[‘p_1280_1281..‘p_1280_1281]] & Cons['a478_1233,('n479_1227 | S[(((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277)])])  <!<  ((nil<> & α1086_1215) | ((cons<> & α1087_1216) & ~(nil<>)))
//│ ╟── while constraining:  ((Nil & {size: ('n479_1227 | S[(((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277)])}) | (Cons['a478_1233,S[‘p_1280_1281..‘p_1280_1281]..S[‘p_1280_1281..‘p_1280_1281]] & Cons['a478_1233,('n479_1227 | S[(((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277)])]))  <!<  ((nil<> & α1086_1215) | ((cons<> & α1087_1216) & ~(nil<>)))
//│ ╟── while constraining:  ((Nil & {size: ('n479_1227 | S[(((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277)])}) | (Cons['a478_1233,S[‘p_1280_1281..‘p_1280_1281]..S[‘p_1280_1281..‘p_1280_1281]] & Cons['a478_1233,('n479_1227 | S[(((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277)])]))  <!<  α1085_1214
//│ ╟── while constraining:  ((Nil & {size: ('n479_1227 | S[(((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277)])}) | (Cons['a478_1233,S[‘p_1280']] & Cons['a478_1233,('n479_1227 | S[(((((((‘p_1248_1249 & ‘p_1252_1253) & ‘p_1256_1257) & ‘p_1260_1261) & ‘p_1264_1265) & ‘p_1268_1269) & ‘p_1272_1273) & ‘p_1276_1277)])]))  <!<  α1085_1214
//│ ╟── ......
//│ ╟── ......
//│ ╟── while constraining:  ‹∀ 4. α499_1224'''''›  <!<  ((nil<> & α1086_1215) | ((cons<> & α1087_1216) & ~(nil<>)))
//│ ╟── while constraining:  ‹∀ 4. α499_1224'''''›  <!<  α1085_1214
//│ ╟── while constraining:  (‹∀ 4. α499_1224'''''›,)  <!<  (α1085_1214,)
//│ ╟── while constraining:  (α1085_1214 -> (0<int,number> | α1092_1219))  <!<  ((‹∀ 4. α499_1224'''''›,) -> α516_1237)
//│ ╟── while constraining:  (α1085_1214 -> (0<int,number> | α1092_1219))  <!<  α480_1236
//│ ╟── while constraining:  ((α1085_1214 -> (0<int,number> | α1092_1219)),)  <!<  (α480_1236,)
//│ ╟── while constraining:  (α480_1236 -> α516_1237)  <!<  (((α1085_1214 -> (0<int,number> | α1092_1219)),) -> α1093_1220)
//│ ╟── while constraining:  ‹∀ 3. (α480_1223'''' -> α516_1235'''')›  <!<  (((α1085_1214 -> (0<int,number> | α1092_1219)),) -> α1093_1220)
//│ ╟── while constraining:  α697_1222  <!<  (((α1085_1214 -> (0<int,number> | α1092_1219)),) -> α1093_1220)
//│ ╟── while constraining:  ‹∀ 0. α697'›  <!<  (((α1085_1214 -> (0<int,number> | α1092_1219)),) -> α1093_1220)
//│ ╟── while constraining:  ‹∀ 0. α697'›  <!<  α1084_1213
//│ ╟── while constraining:  (‹∀ 0. α697'›,)  <!<  (α1084_1213,)
//│ ╟── while constraining:  (α1084_1213 -> α1093_1220)  <!<  ((‹∀ 0. α697'›,) -> α1211)
//│ ╟── while constraining:  sum1083_1212  <!<  ((‹∀ 0. α697'›,) -> α1211)
//│ ╙── while constraining:  ‹∀ 0. sum1083'›  <!<  ((‹∀ 0. α697'›,) -> α1211)
//│ res: error

sum v2
//│ res: error




// === === === ERROR CASES === === === //


:ShowRelativeLineNums
:AllowTypeErrors


def head1_ty v = case v of {
  | Nil -> impossible v.size
  | Cons -> v.head
  }
//│ ((Cons[?, ?]\size\tail with {head: 'head}) | Nil & {size: nothing}) -> 'head
//│   <:  head1_ty:
//│ Vec['a, S['p]] -> 'a
//│ ╔══[ERROR] Type mismatch in def definition:
//│ ║  l.+1: 	def head1_ty v = case v of {
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.+2: 	  | Nil -> impossible v.size
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.+3: 	  | Cons -> v.head
//│ ║        	^^^^^^^^^^^^^^^^^^
//│ ║  l.+4: 	  }
//│ ║        	^^^
//│ ╟── type `(forall ?p. (Cons[‘a_1349, in S[in ‘p_1350 & ?p out ?p | ‘p_1350] out S[in ?p | ‘p_1350 out ‘p_1350 & ?p]] | (Nil with {size: S[‘p_1350]})) -> ?r) -> ?r` does not match type `Cons[?, ?] & ?a | Nil & ?b`
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── Note: constraint arises from reference:
//│ ║  l.+1: 	def head1_ty v = case v of {
//│ ╙──      	                      ^


sum v1_ty
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.+1: 	sum v1_ty
//│ ║        	^^^^^^^^^
//│ ╟── type `Cons[int, Z]` is not a function
//│ ║  l.157: 	v1_ty = v1_ : Cons[int, Z]
//│ ║         	              ^^^^^^^^^^^^
//│ ╟── but it flows into reference with expected type `(?a -> ?b) -> ?c`
//│ ║  l.+1: 	sum v1_ty
//│ ║        	    ^^^^^
//│ ╟── Note: constraint arises from application:
//│ ║  l.288: 	rec def sum vec = vec (fun v -> case v of {
//│ ║         	                  ^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.289: 	  | Nil -> 0
//│ ║         	^^^^^^^^^^^^
//│ ║  l.290: 	  | Cons -> v.head + sum v.tail
//│ ║         	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.291: 	  })
//│ ║         	^^^^
//│ ╟── from reference:
//│ ║  l.288: 	rec def sum vec = vec (fun v -> case v of {
//│ ╙──       	                  ^^^
//│ res: error


