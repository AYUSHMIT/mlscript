:NoRecursiveTypes
:GeneralizeCurriedFunctions
:NoConstrainedTypes
:DistributeForalls



I x = x
K x y = x
//│ I: 'a -> 'a
//│  = [Function: I]
//│ K: 'a -> (forall 'b. 'b -> 'a)
//│  = [Function: K]

id x = x
iter2 f x = f(f x)
//│ id: 'a -> 'a
//│   = [Function: id]
//│ iter2: (('a | 'b) -> 'c & 'd -> 'a & 'e) -> (forall 'f, 'g. ('d & 'f) -> ('g | 'c))
//│      = [Function: iter2]

iter2 iter2
//│ res: ('a -> ('b & 'c) & 'b -> 'a & 'd) -> (forall 'e, 'f, 'g. ('b & 'e) -> ('f | 'c) | 'g)
//│    = [Function (anonymous)]

id iter2 iter2
//│ res: ('a -> ('b & 'c) & 'b -> 'a & 'd) -> (forall 'e, 'f, 'g. ('b & 'e) -> ('f | 'c) | 'g)
//│    = [Function (anonymous)]

iter2 iter2 K
//│ res: ('a & 'b) -> ('c | 'd)
//│   where
//│     'b :> 'd
//│     'd :> forall 'e. 'e -> (forall 'f. 'f -> 'b)
//│    = [Function (anonymous)]



// (λzy. y(zI)(zK))(λx. xx).
foo = (fun z -> fun y -> y (z I) (z K))
//│ foo: ((forall 'a. 'a -> (forall 'b. 'b -> 'a)) -> 'c & (forall 'd. 'd -> 'd) -> 'e & 'f) -> (forall 'g, 'h, 'i, 'j, 'k. (('g | 'e) -> (('h | 'c) -> 'i & 'j) & 'k) -> 'i)
//│    = [Function: foo]

foo (fun x -> x x)
//│ res: ((forall 'a, 'b. 'a -> 'a | 'b) -> ((forall 'c, 'd. 'd -> (forall 'e. 'e -> (forall 'f. 'f -> 'e)) | 'c) -> 'g & 'h) & 'i) -> 'g
//│    = [Function (anonymous)]

n0_ s z = z
def n0: forall 'X. ('X -> 'X) -> 'X -> 'X
n0 = n0_
//│ n0_: 'a -> (forall 'b. 'b -> 'b)
//│    = [Function: n0_]
//│ n0: ('X -> 'X) -> 'X -> 'X
//│   = <missing implementation>
//│ 'a -> (forall 'b. 'b -> 'b)
//│   <:  n0:
//│ ('X -> 'X) -> 'X -> 'X
//│   = [Function: n0_]

succ_ n s z = s (n s z)
def succ: (forall 'X. ('X -> 'X) -> 'X -> 'X) -> (forall 'X. ('X -> 'X) -> 'X -> 'X)
succ = succ_
//│ succ_: ('a -> ('b -> 'c & 'd) & 'e) -> (forall 'f, 'g, 'h. (('c | 'f) -> 'g & 'a & 'h) -> (forall 'i, 'j. ('b & 'i) -> ('j | 'g)))
//│      = [Function: succ_]
//│ succ: (forall 'X. ('X -> 'X) -> 'X -> 'X) -> (forall 'X0. ('X0 -> 'X0) -> 'X0 -> 'X0)
//│     = <missing implementation>
//│ ('a -> ('b -> 'c & 'd) & 'e) -> (forall 'f, 'g, 'h. (('c | 'g) -> 'h & 'a & 'f) -> (forall 'i, 'j. ('b & 'i) -> ('j | 'h)))
//│   <:  succ:
//│ (forall 'X. ('X -> 'X) -> 'X -> 'X) -> (forall 'X0. ('X0 -> 'X0) -> 'X0 -> 'X0)
//│     = [Function: succ_]

c2 = succ (succ n0)
//│ c2: ('X -> 'X) -> 'X -> 'X
//│   = [Function (anonymous)]

c2 c2 K
//│ res: ('X & 'a) -> (forall 'b. 'X | 'b -> 'a)
//│   where
//│     'X :> forall 'c. 'c -> 'X
//│    = [Function (anonymous)]

c2_ = succ_ (succ_ n0)
//│ c2_: (('a | 'b) -> 'c & 'X -> 'a & 'X -> 'X & 'd) -> (forall 'e, 'f. ('X & 'e) -> ('f | 'c))
//│    = [Function (anonymous)]

c2_ c2_
//│ res: nothing -> (forall 'a, 'b, 'c. 'a -> 'b | 'c)
//│    = [Function (anonymous)]

c2_ c2_ K
//│ res: ('a & 'b & 'c) -> (forall 'd, 'e, 'f. ('e & 'f) -> ('g | 'h) | 'd)
//│   where
//│     'b :> forall 'i, 'e, 'f. ('i & 'e & 'f) -> ('b | 'g | 'h)
//│     'g :> forall 'e, 'j. ('e & 'j) -> ('g | 'c)
//│     'c :> forall 'f, 'k, 'i, 'j, 'l, 'e. ('i & 'e & 'j & 'l & 'f & 'k) -> ('b | 'g | 'c | 'h)
//│     'h :> forall 'e, 'l. ('e & 'l) -> ('b | 'g)
//│    = [Function (anonymous)]

c2__ = succ_ (succ_ n0_)
//│ c2__: (('a | 'b) -> 'c & 'd -> 'a & 'e) -> (forall 'f, 'g. ('d & 'f) -> ('g | 'c))
//│     = [Function (anonymous)]

c2__ c2__
//│ res: ('a -> ('b & 'c) & 'b -> 'a & 'd) -> (forall 'e, 'f, 'g. ('b & 'e) -> ('f | 'c) | 'g)
//│    = [Function (anonymous)]

c2__ c2__ K
//│ res: ('a & 'b) -> ('c | 'd)
//│   where
//│     'b :> 'd
//│     'd :> forall 'e. 'e -> (forall 'f. 'f -> 'b)
//│    = [Function (anonymous)]




// ==============

:ConstrainedTypes
:DontDistributeForalls

// ==============



id x = x
iter2 f x = f(f x)
//│ id: 'a -> 'a
//│   = [Function: id1]
//│ iter2: 'a -> (forall 'a, 'b, 'c, 'd. ('b -> 'd
//│   where
//│     'a <: 'b -> 'c & 'c -> 'd))
//│      = [Function: iter21]

iter2 iter2
//│ res: 'a -> 'b
//│   where
//│     forall 'c. 'c -> (forall 'd, 'c, 'e, 'f. ('e -> 'd
//│   where
//│     'c <: 'e -> 'f & 'f -> 'd)) <: 'a -> 'g & 'g -> 'b
//│    = [Function (anonymous)]

id iter2 iter2
//│ res: 'a -> 'b
//│   where
//│     forall 'c. 'c -> (forall 'c, 'd, 'e, 'f. ('d -> 'f
//│   where
//│     'c <: 'd -> 'e & 'e -> 'f)) <: 'a -> 'g & 'g -> 'b
//│    = [Function (anonymous)]


iter2 iter2 K
//│ res: 'a -> 'b
//│   where
//│     forall 'c, 'd, 'e. ('c -> 'e
//│   where
//│     forall 'f. 'f -> (forall 'g. 'g -> 'f) <: 'c -> 'd & 'd -> 'e) <: 'a -> 'h & 'h -> 'b
//│    = [Function (anonymous)]



// (λzy. y(zI)(zK))(λx. xx).
foo = (fun z -> fun y -> y (z I) (z K))
//│ foo: 'a -> (forall 'b, 'c, 'a, 'd, 'e, 'f. (('e -> ('b -> 'f & 'd) & 'c) -> 'f
//│   where
//│     'a <: (forall 'g. 'g -> 'g) -> 'e & (forall 'h. 'h -> (forall 'i. 'i -> 'h)) -> 'b))
//│    = [Function: foo1]

foo (fun x -> x x)
//│ res: ('a -> ('b -> 'c & 'd) & 'e) -> 'c
//│   where
//│     forall 'f, 'g. ('f -> 'g & 'f) -> 'g <: (forall 'h. 'h -> 'h) -> 'a & (forall 'i. 'i -> (forall 'j. 'j -> 'i)) -> 'b
//│    = [Function (anonymous)]

n0_ s z = z
def n0: forall 'X. ('X -> 'X) -> 'X -> 'X
n0 = n0_
//│ n0_: 'a -> (forall 'b. 'b -> 'b)
//│    = [Function: n0_1]
//│ n0: ('X -> 'X) -> 'X -> 'X
//│   = <missing implementation>
//│ 'a -> (forall 'b. 'b -> 'b)
//│   <:  n0:
//│ ('X -> 'X) -> 'X -> 'X
//│   = [Function: n0_1]

succ_ n s z = s (n s z)
def succ: (forall 'X. ('X -> 'X) -> 'X -> 'X) -> (forall 'X. ('X -> 'X) -> 'X -> 'X)
succ = succ_
//│ succ_: 'a -> (forall 'b. 'b -> (forall 'c, 'd, 'b, 'a, 'e, 'f. ('c -> 'd
//│   where
//│     'b <: 'f -> 'd
//│     'a <: 'b -> ('c -> 'f & 'e))))
//│      = [Function: succ_1]
//│ succ: (forall 'X. ('X -> 'X) -> 'X -> 'X) -> (forall 'X0. ('X0 -> 'X0) -> 'X0 -> 'X0)
//│     = <missing implementation>
//│ 'a -> (forall 'b. 'b -> (forall 'c, 'd, 'e, 'f, 'b, 'a. ('f -> 'e
//│   where
//│     'a <: 'b -> ('f -> 'd & 'c)
//│     'b <: 'd -> 'e)))
//│   <:  succ:
//│ (forall 'X. ('X -> 'X) -> 'X -> 'X) -> (forall 'X0. ('X0 -> 'X0) -> 'X0 -> 'X0)
//│     = [Function: succ_1]

c2 = succ (succ n0)
//│ c2: ('X -> 'X) -> 'X -> 'X
//│   = [Function (anonymous)]

c2 c2 K
//│ res: ('X & 'a) -> (forall 'b. 'X | 'b -> 'a)
//│   where
//│     'X :> forall 'c. 'c -> 'X
//│    = [Function (anonymous)]

c2_ = succ_ (succ_ n0)
//│ c2_: 'a -> (forall 'b, 'c, 'd, 'a, 'e. ('b -> 'c
//│   where
//│     forall 'f. 'f -> (forall 'f, 'g, 'h, 'i, 'j. ('j -> 'g
//│   where
//│     forall 'X. ('X -> 'X) -> 'X -> 'X <: 'f -> ('j -> 'i & 'h)
//│     'f <: 'i -> 'g)) <: 'a -> ('b -> 'e & 'd)
//│     'a <: 'e -> 'c))
//│    = [Function (anonymous)]

c2_ c2_
//│ res: 'a -> 'b
//│   where
//│     forall 'c. 'c -> (forall 'd, 'e, 'f, 'g, 'c. ('g -> 'f
//│   where
//│     'c <: 'e -> 'f
//│     forall 'h. 'h -> (forall 'i, 'j, 'h, 'k, 'l. ('j -> 'k
//│   where
//│     'h <: 'i -> 'k
//│     forall 'X. ('X -> 'X) -> 'X -> 'X <: 'h -> ('j -> 'i & 'l))) <: 'c -> ('g -> 'e & 'd))) <: 'm -> 'b
//│     forall 'n. 'n -> (forall 'o, 'p, 'n, 'q, 'r. ('r -> 'q
//│   where
//│     'n <: 'o -> 'q
//│     forall 'X. ('X -> 'X) -> 'X -> 'X <: 'n -> ('r -> 'o & 'p))) <: (forall 'c. 'c -> (forall 'd, 'e, 'f, 'g, 'c. ('g -> 'f
//│   where
//│     'c <: 'e -> 'f
//│     forall 'h. 'h -> (forall 'i, 'j, 'h, 'k, 'l. ('j -> 'k
//│   where
//│     'h <: 'i -> 'k
//│     forall 'X. ('X -> 'X) -> 'X -> 'X <: 'h -> ('j -> 'i & 'l))) <: 'c -> ('g -> 'e & 'd)))) -> ('a -> 'm & 's)
//│    = [Function (anonymous)]

c2_ c2_ K
//│ res: 'a -> 'b
//│   where
//│     forall 'c. 'c -> (forall 'd, 'e, 'f, 'c, 'g. ('e -> 'd
//│   where
//│     'c <: 'f -> 'd
//│     forall 'X. ('X -> 'X) -> 'X -> 'X <: 'c -> ('e -> 'f & 'g))) <: (forall 'h, 'i, 'j, 'k. ('i -> 'h
//│   where
//│     'l <: 'j -> 'h
//│     forall 'm. 'm -> (forall 'n, 'o, 'm, 'p, 'q. ('p -> 'o
//│   where
//│     'm <: 'q -> 'o
//│     forall 'X. ('X -> 'X) -> 'X -> 'X <: 'm -> ('p -> 'q & 'n))) <: 'l -> ('i -> 'j & 'k))) -> ('a -> 'r & 's)
//│     forall 'h, 'i, 'j, 'k. ('i -> 'h
//│   where
//│     'l <: 'j -> 'h
//│     forall 'm. 'm -> (forall 'n, 'o, 'm, 'p, 'q. ('p -> 'o
//│   where
//│     'm <: 'q -> 'o
//│     forall 'X. ('X -> 'X) -> 'X -> 'X <: 'm -> ('p -> 'q & 'n))) <: 'l -> ('i -> 'j & 'k)) <: 'r -> 'b
//│   where
//│     'l :> forall 't, 'u, 'v, 'w, 'x. (('v & 'u) -> (forall 't, 'y. 'y -> 'v | 't)
//│   where
//│     'l <: 'w -> 't
//│     forall 'z. 'z -> (forall 'a1, 'z, 'b1, 'c1, 'd1. ('a1 -> 'b1
//│   where
//│     forall 'X. ('X -> 'X) -> 'X -> 'X <: 'z -> ('a1 -> 'd1 & 'c1)
//│     'z <: 'd1 -> 'b1)) <: 'l -> ('u -> 'w & 'x))
//│    = [Function (anonymous)]

c2__ = succ_ (succ_ n0_)
//│ c2__: 'a -> (forall 'b, 'c, 'a, 'd, 'e. ('c -> 'd
//│   where
//│     forall 'f. 'f -> (forall 'f, 'g, 'h, 'i, 'j. ('g -> 'h
//│   where
//│     'f <: 'j -> 'h
//│     forall 'k. 'k -> (forall 'l. 'l -> 'l) <: 'f -> ('g -> 'j & 'i))) <: 'a -> ('c -> 'b & 'e)
//│     'a <: 'b -> 'd))
//│     = [Function (anonymous)]

c2__ c2__
//│ res: 'a -> 'b
//│   where
//│     forall 'c. 'c -> (forall 'd, 'e, 'f, 'c, 'g. ('g -> 'f
//│   where
//│     forall 'h. 'h -> (forall 'i. 'i -> 'i) <: 'c -> ('g -> 'd & 'e)
//│     'c <: 'd -> 'f)) <: (forall 'j. 'j -> (forall 'k, 'l, 'j, 'm, 'n. ('n -> 'k
//│   where
//│     'j <: 'm -> 'k
//│     forall 'o. 'o -> (forall 'p, 'q, 'o, 'r, 's. ('s -> 'p
//│   where
//│     'o <: 'r -> 'p
//│     forall 'h. 'h -> (forall 'i. 'i -> 'i) <: 'o -> ('s -> 'r & 'q))) <: 'j -> ('n -> 'm & 'l)))) -> ('a -> 't & 'u)
//│     forall 'j. 'j -> (forall 'k, 'l, 'j, 'm, 'n. ('n -> 'k
//│   where
//│     'j <: 'm -> 'k
//│     forall 'o. 'o -> (forall 'p, 'q, 'o, 'r, 's. ('s -> 'p
//│   where
//│     'o <: 'r -> 'p
//│     forall 'h. 'h -> (forall 'i. 'i -> 'i) <: 'o -> ('s -> 'r & 'q))) <: 'j -> ('n -> 'm & 'l))) <: 't -> 'b
//│    = [Function (anonymous)]

c2__ c2__ K
//│ res: 'a -> 'b
//│   where
//│     forall 'c. 'c -> (forall 'd, 'c, 'e, 'f, 'g. ('f -> 'd
//│   where
//│     forall 'h. 'h -> (forall 'i. 'i -> 'i) <: 'c -> ('f -> 'e & 'g)
//│     'c <: 'e -> 'd)) <: (forall 'j, 'k, 'l, 'm. ('j -> 'm
//│   where
//│     forall 'n. 'n -> (forall 'o. 'o -> 'n) <: 'k -> 'm
//│     forall 'p. 'p -> (forall 'q, 'r, 'p, 's, 't. ('s -> 'r
//│   where
//│     forall 'h. 'h -> (forall 'i. 'i -> 'i) <: 'p -> ('s -> 't & 'q)
//│     'p <: 't -> 'r)) <: (forall 'n. 'n -> (forall 'o. 'o -> 'n)) -> ('j -> 'k & 'l))) -> ('a -> 'u & 'v)
//│     forall 'j, 'k, 'l, 'm. ('j -> 'm
//│   where
//│     forall 'n. 'n -> (forall 'o. 'o -> 'n) <: 'k -> 'm
//│     forall 'p. 'p -> (forall 'q, 'r, 'p, 's, 't. ('s -> 'r
//│   where
//│     forall 'h. 'h -> (forall 'i. 'i -> 'i) <: 'p -> ('s -> 't & 'q)
//│     'p <: 't -> 'r)) <: (forall 'n. 'n -> (forall 'o. 'o -> 'n)) -> ('j -> 'k & 'l)) <: 'u -> 'b
//│    = [Function (anonymous)]



