:GeneralizeCurriedFunctions
:NoRecursiveTypes
:NoProvs
// :ArgGen



def auto_ : (forall 'a. 'a -> 'a) -> 0
//│ auto_: (forall 'a. 'a -> 'a) -> 0
//│      = <missing implementation>

:d
foo(x: ('a -> 'b)) = auto_ x
//│ 1. Typing term (((x : Function(Tuple(List((None,Field(None,'a)))),'b)),) => (auto_ (x,)))
//│ | TYPING POLY LAM
//│ | 2. Typing pattern ((x : Function(Tuple(List((None,Field(None,'a)))),'b)),)
//│ | | 2. Typing pattern (x : Function(Tuple(List((None,Field(None,'a)))),'b))
//│ | | | 2. Typing pattern x : Function(Tuple(List((None,Field(None,'a)))),'b)
//│ | | | | 2. Typing pattern x
//│ | | | | 2. : x26''
//│ | | | | 2. Typing type Function(Tuple(List((None,Field(None,'a)))),'b)
//│ | | | | | vars=Map() newDefsInfo=Map()
//│ | | | | => ('a27'' -> 'b28'') | 'b28'', 'a27''
//│ | | | | CONSTRAIN x26'' <! ('a27'' -> 'b28'')
//│ | | | |   where 
//│ | | | | 2. C x26'' <! ('a27'' -> 'b28'')    (0)
//│ | | | | | NEW x26'' UB (2)
//│ | | | | CONSTRAIN ('a27'' -> 'b28'') <! x26''
//│ | | | |   where 
//│ 		x26'' <: ('a27'' -> 'b28'')
//│ | | | | 2. C ('a27'' -> 'b28'') <! x26''    (0)
//│ | | | | | NEW x26'' LB (2)
//│ | | | | | 2. C ('a27'' -> 'b28'') <! ('a27'' -> 'b28'')    (1)
//│ | | | 2. : ('a27'' -> 'b28'')
//│ | | 2. : ('a27'' -> 'b28'')
//│ | 2. : (('a27'' -> 'b28''),)
//│ | 2. Typing term (auto_ (x,))
//│ | | 2. Typing term auto_
//│ | | 2. : (‹∀ 1. ('a21_22'' -> 'a21_22'')› -> 0<int,number>)
//│ | | 2. Typing term x
//│ | | 2. : x26''
//│ | | CONSTRAIN (‹∀ 1. ('a21_22'' -> 'a21_22'')› -> 0<int,number>) <! (x26'' -> α29'')
//│ | |   where 
//│ 		x26'' :> ('a27'' -> 'b28'') <: ('a27'' -> 'b28'')
//│ | | 2. C (‹∀ 1. ('a21_22'' -> 'a21_22'')› -> 0<int,number>) <! (x26'' -> α29'')    (0)
//│ | | | 2. C (x26'',) <! (‹∀ 1. ('a21_22'' -> 'a21_22'')›,)    (1)
//│ | | | | 2. C x26'' <! ‹∀ 1. ('a21_22'' -> 'a21_22'')›    (2)
//│ | | | | | NEW x26'' UB (0)
//│ | | | | | 2. C ('a27'' -> 'b28'') <! ‹∀ 1. ('a21_22'' -> 'a21_22'')›    (3)
//│ | | | | | | BUMP TO LEVEL 3  -->  (‘a''' -> ‘a''')
//│ | | | | | | where 
//│ | | | | | | 3. C ('a27'' -> 'b28'') <! (‘a''' -> ‘a''')    (4)
//│ | | | | | | | 3. C (‘a''',) <! ('a27'',)    (5)
//│ | | | | | | | | 3. C ‘a''' <! 'a27''    (6)
//│ | | | | | | | | | wrong level: 3
//│ | | | | | | | | | STASHING 'a27'' bound in extr ctx
//│ | | | | | | | 3. C 'b28'' <! ‘a'''    (5)
//│ | | | | | | | | wrong level: 3
//│ | | | | | | | | STASHING 'b28'' bound in extr ctx
//│ | | | | | | UNSTASHING...
//│ | | | | | | | where('a27'') 
//│ | | | | | | | UNSTASH ‘a''' <: 'a27'' where 
//│ | | | | | | | 2. C ‘a''' <! 'a27''    (4)
//│ | | | | | | | | wrong level: 3
//│ | | | | | | | | EXTR LHS  ~>  ‘a_30''  to 2
//│ | | | | | | | |  where 
//│ | | | | | | | | 2. C ‘a_30'' <! 'a27''    (5)
//│ | | | | | | | | | NEW 'a27'' LB (2)
//│ | | | | | | | where('b28'') 
//│ | | | | | | | UNSTASH 'b28'' <: ‘a''' where 
//│ | | | | | | | 2. C 'b28'' <! ‘a'''    (4)
//│ | | | | | | | | wrong level: 3
//│ | | | | | | | | EXTR RHS  ~>  ‹∀ 2. 'a31'''›  to 2
//│ | | | | | | | |  where 
//│ | | | | | | | | 2. C 'b28'' <! ‹∀ 2. 'a31'''›    (5)
//│ | | | | | | | | | NEW 'b28'' UB (0)
//│ | | | | | | UNSTASHING... (out)
//│ | | | 2. C 0<int,number> <! α29''    (1)
//│ | | | | NEW α29'' LB (0)
//│ | 2. : α29''
//│ | UNSTASHING... (out)
//│ 1. : ‹∀ 1. (('a27_32'' -> 'b28_33'') -> α29_34'')›
//│ UNSTASHING... (out)
//│ ⬤ Typed as: ‹∀ 0. ‹∀ 1. (('a27_32'' -> 'b28_33'') -> α29_34'')››
//│  where: 
//│ 		'a27_32'' :> ‘a_30''
//│ 		'b28_33'' <: ‹∀ 2. 'a31'''›
//│ 		α29_34'' :> 0<int,number>
//│ foo: (‘a_30 -> anything) -> 0
//│    = <no result>
//│      auto_ is not implemented

:e
:d
foo (fun x -> x)
//│ 0. Typing term (foo ((((x,) => x)),))
//│ | 0. Typing term foo
//│ | 0. : ‹∀ 0. ‹∀ 1. (('a27_32'' -> 'b28_33'') -> α29_34'')››
//│ | 0. Typing term (((x,) => x))
//│ | | 0. Typing term ((x,) => x)
//│ | | | TYPING POLY LAM
//│ | | | 1. Typing pattern (x,)
//│ | | | | 1. Typing pattern x
//│ | | | | 1. : x39'
//│ | | | 1. : (x39',)
//│ | | | 1. Typing term x
//│ | | | 1. : x39'
//│ | | | UNSTASHING... (out)
//│ | | 0. : ‹∀ 0. (x39_40' -> x39_40')›
//│ | 0. : ‹∀ 0. (x39_40' -> x39_40')›
//│ | CONSTRAIN ‹∀ 0. ‹∀ 1. (('a27_32'' -> 'b28_33'') -> α29_34'')›› <! (‹∀ 0. (x39_40' -> x39_40')› -> α41)
//│ |   where 
//│ 		'a27_32'' :> ‘a_30''
//│ 		'b28_33'' <: ‹∀ 2. 'a31'''›
//│ 		α29_34'' :> 0<int,number>
//│ | 0. C ‹∀ 0. ‹∀ 1. (('a27_32'' -> 'b28_33'') -> α29_34'')›› <! (‹∀ 0. (x39_40' -> x39_40')› -> α41)    (0)
//│ | | 0. C ‹∀ 1. (('a27_32'' -> 'b28_33'') -> α29_34'')› <! (‹∀ 0. (x39_40' -> x39_40')› -> α41)    (1)
//│ | | | INST [1]   ‹∀ 1. (('a27_32'' -> 'b28_33'') -> α29_34'')›
//│ | | |   where  
//│ 		'a27_32'' :> ‘a_30''
//│ 		'b28_33'' <: ‹∀ 2. 'a31'''›
//│ 		α29_34'' :> 0<int,number>
//│ | | | TO [0] ~>  (('a27_42 -> 'b28_43) -> α29_44)
//│ | | |   where  
//│ 		'a27_42 :> ‘a_30
//│ 		'b28_43 <: ‹∀ 2. 'a31'''›
//│ 		α29_44 :> 0<int,number>
//│ | | | 0. C (('a27_42 -> 'b28_43) -> α29_44) <! (‹∀ 0. (x39_40' -> x39_40')› -> α41)    (2)
//│ | | | | 0. C (‹∀ 0. (x39_40' -> x39_40')›,) <! (('a27_42 -> 'b28_43),)    (3)
//│ | | | | | 0. C ‹∀ 0. (x39_40' -> x39_40')› <! ('a27_42 -> 'b28_43)    (4)
//│ | | | | | | INST [0]   ‹∀ 0. (x39_40' -> x39_40')›
//│ | | | | | |   where  
//│ | | | | | | TO [0] ~>  (x39_45 -> x39_45)
//│ | | | | | |   where  
//│ | | | | | | 0. C (x39_45 -> x39_45) <! ('a27_42 -> 'b28_43)    (5)
//│ | | | | | | | 0. C ('a27_42,) <! (x39_45,)    (6)
//│ | | | | | | | | 0. C 'a27_42 <! x39_45    (7)
//│ | | | | | | | | | NEW 'a27_42 UB (0)
//│ | | | | | | | | | 0. C ‘a_30 <! x39_45    (8)
//│ | | | | | | | | | | NEW x39_45 LB (0)
//│ | | | | | | | 0. C x39_45 <! 'b28_43    (6)
//│ | | | | | | | | NEW x39_45 UB (0)
//│ | | | | | | | | 0. C ‘a_30 <! 'b28_43    (7)
//│ | | | | | | | | | NEW 'b28_43 LB (0)
//│ | | | | | | | | | 0. C ‘a_30 <! ‹∀ 2. 'a31'''›    (8)
//│ | | | | | | | | | | BUMP TO LEVEL 1  -->  ‘a'
//│ | | | | | | | | | | where 
//│ | | | | | | | | | | 1. C ‘a_30 <! ‘a'    (9)
//│ | | | | | | | | | | | CONSTRAINT FAILURE: ‘a_30 <: ‘a'
//│ | | | | | | | | | | | allVarPols: 
//│ | | | | | | | | | | | norm[+] ‘a_30
//│ | | | | | | | | | | | | DNF: DNF(1024, {}∧‘a_30)
//│ | | | | | | | | | | | ~> ‘a_30
//│ | | | | | | | | | | | CONSTRAIN error<> <! α41
//│ | | | | | | | | | | |   where 
//│ | | | | | | | | | | | 0. C error<> <! α41    (0)
//│ | | | | | | | | | | | | NEW α41 LB (0)
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.95: 	foo (fun x -> x)
//│ ║        	^^^^^^^^^^^^^^^^
//│ ╟── type `‘a_30` is not an instance of type `'a`
//│ ║  l.8: 	def auto_ : (forall 'a. 'a -> 'a) -> 0
//│ ║       	                    ^^
//│ ╟── Note: constraint arises from quantified type variable:
//│ ║  l.8: 	def auto_ : (forall 'a. 'a -> 'a) -> 0
//│ ╙──     	                    ^^
//│ 0. : α41
//│ ⬤ Typed as: ‹∀ 0. α41›
//│  where: 
//│ 		α41 :> error<>
//│ res: error
//│    = <no result>
//│      foo and auto_ are not implemented


