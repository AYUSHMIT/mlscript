:GeneralizeCurriedFunctions
// :NoJS

// ============ Dummy classes to represent the types in the examples ============

class None
class Some[a]: { val: a }
type Option[a] = None | Some[a]
//│ Defined class None
//│ Defined class Some[+a]
//│ Defined type alias Option[+a]

class List[a]
  method Head: a
  method Tail: List[a]
//│ Defined class List[+a]
//│ Declared List.Head: List['a] -> 'a
//│ Declared List.Tail: List['a] -> List['a]

class Cons[a]: List[a] & { head: a; tail: List[a] }
  method Head = this.head
  method Tail = this.tail
def cons[a]: a -> List[a] -> List[a]
def cons head tail = Cons { head; tail }
//│ Defined class Cons[+a]
//│ Defined Cons.Head: Cons['a] -> 'a
//│ Defined Cons.Tail: Cons['a] -> List['a]
//│ cons: 'a -> List['a] -> List['a]
//│     = <missing implementation>
//│ 'b -> (forall 'a, 'tail. (List['a] & 'tail) -> (Cons['a | 'b] with {head: 'b, tail: 'tail}))
//│   <:  cons:
//│ 'a -> List['a] -> List['a]
//│     = [Function: cons]

class Nil[a]: List[a]
  method Head = error
  method Tail = this
def nil: List['a]
def nil = Nil {}
//│ Defined class Nil[+a]
//│ Defined Nil.Head: Nil[?] -> nothing
//│ Defined Nil.Tail: (Nil['a] & 'this) -> (Nil['a] & 'this)
//│ nil: List[nothing]
//│    = <missing implementation>
//│ Nil[nothing]
//│   <:  nil:
//│ List[nothing]
//│    = Nil {}

// ============ Type signatures for functions used in the examples ============

def head: forall 'a. List['a] -> 'a
def head l = l.Head
//│ head: List['a] -> 'a
//│     = <missing implementation>
//│ List['a] -> 'a
//│   <:  head:
//│ List['a] -> 'a
//│     = [Function: head]

def tail: forall 'a. List['a] -> List['a]
def tail l = l.Tail
//│ tail: List['a] -> List['a]
//│     = <missing implementation>
//│ List['a] -> List['a]
//│   <:  tail:
//│ List['a] -> List['a]
//│     = [Function: tail]

:ng
def print_bool: bool -> unit
def print_bool b = log b
//│ print_bool: bool -> unit
//│ anything -> unit
//│   <:  print_bool:
//│ bool -> unit

:ng
def print_int: int -> unit
def print_int i = log i
//│ print_int: int -> unit
//│ anything -> unit
//│   <:  print_int:
//│ int -> unit

:ng
def print_string: string -> unit
def print_string s = log s
//│ print_string: string -> unit
//│ anything -> unit
//│   <:  print_string:
//│ string -> unit



// (* A quick demo of MLF *)

// (* In the following, "untype expr" means that the expression expr should not be typable. *)

// type sid = ['a] 'a -> 'a
type Sid = forall 'a. 'a -> 'a
//│ Defined type alias Sid

// let id = fun x -> x
def id = fun x -> x
//│ id: 'a -> 'a
//│   = [Function: id]

// let delta = fun (x:sid) -> x x
def delta = fun (x: Sid) -> x x
def delta' = fun x -> x x
//│ delta: Sid -> Sid
//│      = [Function: delta]
//│ delta': ('a -> 'b & 'a) -> 'b
//│       = [Function: delta]

// let choose x y = if true then x else y
def choose x y = if true then x else y
//│ choose: 'a -> (forall 'b. 'b -> ('a | 'b))
//│       = [Function: choose]

// let succ n = n + 1
// ;;
def succ n = n + 1
//│ succ: int -> int
//│     = [Function: succ]

// let test1 = delta id
test1 = delta id
//│ test1: Sid
//│      = [Function: id]

// untype delta succ
:e
delta succ
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.135: 	delta succ
//│ ║         	^^^^^^^^^^
//│ ╟── type `‘a` is not an instance of type `int`
//│ ║  l.101: 	type Sid = forall 'a. 'a -> 'a
//│ ║         	                  ^^
//│ ╟── Note: constraint arises from reference:
//│ ║  l.124: 	def succ n = n + 1
//│ ╙──       	             ^
//│ res: error | Sid
//│    = 'function succ(n) {  return n + 1;}1'

// let test2 = delta (choose id id)
test2 = delta (choose id id)
//│ test2: Sid
//│      = [Function: id]

// untype delta (choose id succ)
:e
delta (choose id succ)
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.155: 	delta (choose id succ)
//│ ║         	^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── type `‘a` is not an instance of type `int`
//│ ║  l.101: 	type Sid = forall 'a. 'a -> 'a
//│ ║         	                  ^^
//│ ╟── Note: constraint arises from reference:
//│ ║  l.124: 	def succ n = n + 1
//│ ╙──       	             ^
//│ res: error | Sid
//│    = [Function: id]

// let test3 = choose id succ
test3 = choose id succ
//│ test3: int -> int
//│      = [Function: id]

// let test4 = choose succ id
// ;;
test4 = choose succ id
//│ test4: int -> int
//│      = [Function: succ]


// let eqstring s1 s2 = (s1^"A" = s2^"A")
def eqstring s1 s2 = eq (concat s1 "A") (concat s2 "A")
//│ eqstring: string -> string -> bool
//│         = [Function: eqstring]

// let eqint i1 i2 = (i1 - i2) = 0
def eqint i1 i2 = (i1 - i2) == 0
//│ eqint: int -> int -> bool
//│      = [Function: eqint]

// let eqbool b1 b2 = if b1 then b2 else (not b2)
def eqbool b1 b2 = if b1 then b2 else (not b2)
//│ eqbool: bool -> bool -> bool
//│       = [Function: eqbool]

// let ignore x = ()
def ignore x = null
//│ ignore: anything -> null
//│       = [Function: ignore]

// let rec listiter f ll =
//   if ll = [] then ()
//   else begin ignore (f (car ll)) ; listiter f (cdr ll) end
// ;;
rec def listiter f ll =
  if eq ll nil then null
  else
    let _ = ignore (f (head ll)) in 
    listiter f (tail ll)
//│ listiter: ('a -> anything & nothing -> anything) -> (forall 'a, 'b, 'a0, 'c. (List['a | 'a0] -> (null | 'c)
//│   where
//│     'b <: List['a0] -> 'c))
//│         = [Function: listiter]


// (* Polymorphic recursion. *)
// untype let rec id x = if true then x else id id x in id
let red id x = if true then x else id id x in id
//│ res: 'a -> 'a
//│    = [Function: id]


// let rec (id:sid) x = if true then x else id id x

def idd: Sid
//│ idd: Sid
//│    = <missing implementation>

def idd x = if true then x else idd idd x
//│ 'a -> 'a
//│   <:  idd:
//│ Sid
//│    = <no result>
//│      idd is not implemented

// * Note: Requires polymorphic recursion, so this doesn't work:
:e
def id: Sid
rec def id x = if true then x else id id x
//│ id: Sid
//│   = <missing implementation>
//│ ╔══[ERROR] Subtyping constraint of the form `?a -> ?b
//│   where
//│     ?c <: ?a -> ?d <: ?id` exceeded recursion depth limit (400)
//│ ║  l.238: 	rec def id x = if true then x else id id x
//│ ║         	           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  ((α534',) -> α537')
//│ ╟── while constraining:  α427'  <!<  ((α534',) -> α537')
//│ ╟── while constraining:  {(α534' -> α536') where: α427' <: ((α534',) -> α537')}  <!<  ((α530',) -> α533')
//│ ╟── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  ((α530',) -> α533')
//│ ╟── while constraining:  α427'  <!<  ((α530',) -> α533')
//│ ╟── while constraining:  {(α530' -> α532') where: α427' <: ((α530',) -> α533')}  <!<  ((α526',) -> α529')
//│ ╟── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  ((α526',) -> α529')
//│ ╟── while constraining:  α427'  <!<  ((α526',) -> α529')
//│ ╟── while constraining:  {(α526' -> α528') where: α427' <: ((α526',) -> α529')}  <!<  ((α522',) -> α525')
//│ ╟── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  ((α522',) -> α525')
//│ ╟── while constraining:  α427'  <!<  ((α522',) -> α525')
//│ ╟── while constraining:  {(α522' -> α524') where: α427' <: ((α522',) -> α525')}  <!<  ((α518',) -> α521')
//│ ╟── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  ((α518',) -> α521')
//│ ╟── while constraining:  α427'  <!<  ((α518',) -> α521')
//│ ╟── while constraining:  {(α518' -> α520') where: α427' <: ((α518',) -> α521')}  <!<  ((α514',) -> α517')
//│ ╟── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  ((α514',) -> α517')
//│ ╟── while constraining:  α427'  <!<  ((α514',) -> α517')
//│ ╟── while constraining:  {(α514' -> α516') where: α427' <: ((α514',) -> α517')}  <!<  ((α510',) -> α513')
//│ ╟── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  ((α510',) -> α513')
//│ ╟── while constraining:  α427'  <!<  ((α510',) -> α513')
//│ ╟── while constraining:  {(α510' -> α512') where: α427' <: ((α510',) -> α513')}  <!<  ((α506',) -> α509')
//│ ╟── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  ((α506',) -> α509')
//│ ╟── while constraining:  α427'  <!<  ((α506',) -> α509')
//│ ╟── while constraining:  {(α506' -> α508') where: α427' <: ((α506',) -> α509')}  <!<  ((α502',) -> α505')
//│ ╟── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  ((α502',) -> α505')
//│ ╟── while constraining:  α427'  <!<  ((α502',) -> α505')
//│ ╟── while constraining:  {(α502' -> α504') where: α427' <: ((α502',) -> α505')}  <!<  ((α498',) -> α501')
//│ ╟── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  ((α498',) -> α501')
//│ ╟── while constraining:  α427'  <!<  ((α498',) -> α501')
//│ ╟── while constraining:  {(α498' -> α500') where: α427' <: ((α498',) -> α501')}  <!<  ((α494',) -> α497')
//│ ╟── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  ((α494',) -> α497')
//│ ╟── while constraining:  α427'  <!<  ((α494',) -> α497')
//│ ╟── while constraining:  {(α494' -> α496') where: α427' <: ((α494',) -> α497')}  <!<  ((α490',) -> α493')
//│ ╟── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  ((α490',) -> α493')
//│ ╟── while constraining:  α427'  <!<  ((α490',) -> α493')
//│ ╟── while constraining:  {(α490' -> α492') where: α427' <: ((α490',) -> α493')}  <!<  ((α486',) -> α489')
//│ ╟── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  ((α486',) -> α489')
//│ ╟── while constraining:  α427'  <!<  ((α486',) -> α489')
//│ ╟── while constraining:  {(α486' -> α488') where: α427' <: ((α486',) -> α489')}  <!<  ((α482',) -> α485')
//│ ╟── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  ((α482',) -> α485')
//│ ╟── while constraining:  α427'  <!<  ((α482',) -> α485')
//│ ╟── while constraining:  {(α482' -> α484') where: α427' <: ((α482',) -> α485')}  <!<  ((α478',) -> α481')
//│ ╟── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  ((α478',) -> α481')
//│ ╟── while constraining:  α427'  <!<  ((α478',) -> α481')
//│ ╟── while constraining:  {(α478' -> α480') where: α427' <: ((α478',) -> α481')}  <!<  ((α474',) -> α477')
//│ ╟── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  ((α474',) -> α477')
//│ ╟── while constraining:  α427'  <!<  ((α474',) -> α477')
//│ ╟── while constraining:  {(α474' -> α476') where: α427' <: ((α474',) -> α477')}  <!<  ((α470',) -> α473')
//│ ╟── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  ((α470',) -> α473')
//│ ╟── while constraining:  α427'  <!<  ((α470',) -> α473')
//│ ╟── while constraining:  {(α470' -> α472') where: α427' <: ((α470',) -> α473')}  <!<  ((α466',) -> α469')
//│ ╟── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  ((α466',) -> α469')
//│ ╟── while constraining:  α427'  <!<  ((α466',) -> α469')
//│ ╟── while constraining:  {(α466' -> α468') where: α427' <: ((α466',) -> α469')}  <!<  ((α462',) -> α465')
//│ ╟── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  ((α462',) -> α465')
//│ ╟── while constraining:  α427'  <!<  ((α462',) -> α465')
//│ ╟── while constraining:  {(α462' -> α464') where: α427' <: ((α462',) -> α465')}  <!<  ((α458',) -> α461')
//│ ╟── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  ((α458',) -> α461')
//│ ╟── while constraining:  α427'  <!<  ((α458',) -> α461')
//│ ╟── while constraining:  {(α458' -> α460') where: α427' <: ((α458',) -> α461')}  <!<  ((α454',) -> α457')
//│ ╟── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  ((α454',) -> α457')
//│ ╟── while constraining:  α427'  <!<  ((α454',) -> α457')
//│ ╟── while constraining:  {(α454' -> α456') where: α427' <: ((α454',) -> α457')}  <!<  ((α450',) -> α453')
//│ ╟── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  ((α450',) -> α453')
//│ ╟── while constraining:  α427'  <!<  ((α450',) -> α453')
//│ ╟── while constraining:  {(α450' -> α452') where: α427' <: ((α450',) -> α453')}  <!<  ((α446',) -> α449')
//│ ╟── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  ((α446',) -> α449')
//│ ╟── while constraining:  α427'  <!<  ((α446',) -> α449')
//│ ╟── while constraining:  {(α446' -> α448') where: α427' <: ((α446',) -> α449')}  <!<  ((α442',) -> α445')
//│ ╟── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  ((α442',) -> α445')
//│ ╟── while constraining:  α427'  <!<  ((α442',) -> α445')
//│ ╟── while constraining:  {(α442' -> α444') where: α427' <: ((α442',) -> α445')}  <!<  ((α438',) -> α441')
//│ ╟── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  ((α438',) -> α441')
//│ ╟── while constraining:  α427'  <!<  ((α438',) -> α441')
//│ ╟── while constraining:  {(α438' -> α440') where: α427' <: ((α438',) -> α441')}  <!<  ((α434',) -> α437')
//│ ╟── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  ((α434',) -> α437')
//│ ╟── while constraining:  α427'  <!<  ((α434',) -> α437')
//│ ╟── while constraining:  {(α434' -> α436') where: α427' <: ((α434',) -> α437')}  <!<  ((α430',) -> α433')
//│ ╟── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  ((α430',) -> α433')
//│ ╟── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  α427'
//│ ╟── while constraining:  α432'  <!<  α427'
//│ ╟── while constraining:  (α430' -> α432')  <!<  ((id421',) -> α427')
//│ ╟── while constraining:  {(α430' -> α432') where: α427' <: ((α430',) -> α433')}  <!<  ((id421',) -> α427')
//│ ╟── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  ((id421',) -> α427')
//│ ╙── while constraining:  ‹∀ 1. {(α422'' -> α429'') where: α427' <: ((α422'',) -> α428'')}›  <!<  id421'
//│ ('a & 'b) -> 'b
//│   where
//│     'c <: 'a -> 'b
//│   <:  id:
//│ Sid
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?a, ?b, ?c, ?d, ?e, ?f, ?g, ?h, ?i, ?j, ?k, ?l, ?m, ?n, ?o, ?p, ?q, ?r, ?s, ?t, ?u, ?v, ?w, ?x, ?y, ?z, ?a1, ?b1, ?c1, ?d1, ?e1, ?f1, ?g1, ?h1, ?i1, ?j1, ?k1, ?l1, ?m1, ?n1, ?o1, ?p1, ?q1, ?r1, ?s1, ?t1, ?u1, ?v1, ?w1, ?x1, ?y1, ?z1, ?a2, ?b2, ?c2, ?d2, ?e2, ?f2, ?g2, ?h2, ?i2, ?j2, ?k2, ?l2, ?m2, ?n2, ?o2, ?p2, ?q2, ?r2, ?s2, ?t2, ?u2, ?v2, ?w2, ?x2, ?y2, ?z2, ?a3, ?b3, ?c3, ?d3, ?e3, ?f3, ?g3, ?h3, ?i3, ?j3, ?k3, ?l3, ?m3, ?n3, ?o3, ?p3, ?q3, ?r3, ?s3, ?t3, ?u3, ?v3, ?w3, ?x3, ?y3, ?z3, ?a4, ?b4, ?c4, ?d4, ?e4, ?id, ?f4, ?g4, ?h4, ?i4, ?j4, ?k4, ?l4, ?m4, ?n4, ?o4, ?p4, ?q4, ?r4, ?s4, ?t4, ?u4, ?v4, ?w4, ?x4, ?y4, ?z4, ?a5, ?b5, ?c5, ?d5, ?e5, ?f5, ?g5, ?h5, ?i5, ?j5, ?k5, ?l5, ?m5, ?n5, ?o5, ?p5, ?q5, ?r5, ?s5, ?t5, ?u5, ?v5, ?w5, ?x5, ?y5, ?z5, ?a6, ?b6, ?c6, ?d6, ?e6, ?f6, ?g6, ?h6, ?i6, ?j6, ?k6, ?l6, ?m6, ?n6, ?o6, ?p6, ?q6, ?r6, ?s6, ?t6, ?u6, ?v6, ?w6, ?x6, ?y6, ?z6, ?a7, ?b7, ?c7, ?d7, ?e7, ?f7, ?g7, ?h7, ?i7, ?j7. ?id <: Sid` exceeded recursion depth limit (400)
//│ ║  l.238: 	rec def id x = if true then x else id id x
//│ ║         	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── while constraining:  ‹∀ 1. {(α642'' -> α644'') where: α641'' <: ((α642'',) -> α645'')}›  <!<  ((α3801'',) -> α3804'')
//│ ╟── while constraining:  α3692''  <!<  ((α3801'',) -> α3804'')
//│ ╟── while constraining:  {(α3801'' -> α3803'') where: α3692'' <: ((α3801'',) -> α3804'')}  <!<  ((α3688'',) -> α3691'')
//│ ╟── while constraining:  ‹∀ 1. {(α642'' -> α644'') where: α641'' <: ((α642'',) -> α645'')}›  <!<  ((α3688'',) -> α3691'')
//│ ╟── while constraining:  α3579''  <!<  ((α3688'',) -> α3691'')
//│ ╟── while constraining:  {(α3688'' -> α3690'') where: α3579'' <: ((α3688'',) -> α3691'')}  <!<  ((α3575'',) -> α3578'')
//│ ╟── while constraining:  ‹∀ 1. {(α642'' -> α644'') where: α641'' <: ((α642'',) -> α645'')}›  <!<  ((α3575'',) -> α3578'')
//│ ╟── while constraining:  α3466''  <!<  ((α3575'',) -> α3578'')
//│ ╟── while constraining:  {(α3575'' -> α3577'') where: α3466'' <: ((α3575'',) -> α3578'')}  <!<  ((α3462'',) -> α3465'')
//│ ╟── while constraining:  ‹∀ 1. {(α642'' -> α644'') where: α641'' <: ((α642'',) -> α645'')}›  <!<  ((α3462'',) -> α3465'')
//│ ╟── while constraining:  α3353''  <!<  ((α3462'',) -> α3465'')
//│ ╟── while constraining:  {(α3462'' -> α3464'') where: α3353'' <: ((α3462'',) -> α3465'')}  <!<  ((α3349'',) -> α3352'')
//│ ╟── while constraining:  ‹∀ 1. {(α642'' -> α644'') where: α641'' <: ((α642'',) -> α645'')}›  <!<  ((α3349'',) -> α3352'')
//│ ╟── while constraining:  α3240''  <!<  ((α3349'',) -> α3352'')
//│ ╟── while constraining:  {(α3349'' -> α3351'') where: α3240'' <: ((α3349'',) -> α3352'')}  <!<  ((α3236'',) -> α3239'')
//│ ╟── while constraining:  ‹∀ 1. {(α642'' -> α644'') where: α641'' <: ((α642'',) -> α645'')}›  <!<  ((α3236'',) -> α3239'')
//│ ╟── while constraining:  α3127''  <!<  ((α3236'',) -> α3239'')
//│ ╟── while constraining:  {(α3236'' -> α3238'') where: α3127'' <: ((α3236'',) -> α3239'')}  <!<  ((α3123'',) -> α3126'')
//│ ╟── while constraining:  ‹∀ 1. {(α642'' -> α644'') where: α641'' <: ((α642'',) -> α645'')}›  <!<  ((α3123'',) -> α3126'')
//│ ╟── while constraining:  α3014''  <!<  ((α3123'',) -> α3126'')
//│ ╟── while constraining:  {(α3123'' -> α3125'') where: α3014'' <: ((α3123'',) -> α3126'')}  <!<  ((α3010'',) -> α3013'')
//│ ╟── while constraining:  ‹∀ 1. {(α642'' -> α644'') where: α641'' <: ((α642'',) -> α645'')}›  <!<  ((α3010'',) -> α3013'')
//│ ╟── while constraining:  α2901''  <!<  ((α3010'',) -> α3013'')
//│ ╟── while constraining:  {(α3010'' -> α3012'') where: α2901'' <: ((α3010'',) -> α3013'')}  <!<  ((α2897'',) -> α2900'')
//│ ╟── while constraining:  ‹∀ 1. {(α642'' -> α644'') where: α641'' <: ((α642'',) -> α645'')}›  <!<  ((α2897'',) -> α2900'')
//│ ╟── while constraining:  α2788''  <!<  ((α2897'',) -> α2900'')
//│ ╟── while constraining:  {(α2897'' -> α2899'') where: α2788'' <: ((α2897'',) -> α2900'')}  <!<  ((α2784'',) -> α2787'')
//│ ╟── while constraining:  ‹∀ 1. {(α642'' -> α644'') where: α641'' <: ((α642'',) -> α645'')}›  <!<  ((α2784'',) -> α2787'')
//│ ╟── while constraining:  α2675''  <!<  ((α2784'',) -> α2787'')
//│ ╟── while constraining:  {(α2784'' -> α2786'') where: α2675'' <: ((α2784'',) -> α2787'')}  <!<  ((α2671'',) -> α2674'')
//│ ╟── while constraining:  ‹∀ 1. {(α642'' -> α644'') where: α641'' <: ((α642'',) -> α645'')}›  <!<  ((α2671'',) -> α2674'')
//│ ╟── while constraining:  α2562''  <!<  ((α2671'',) -> α2674'')
//│ ╟── while constraining:  {(α2671'' -> α2673'') where: α2562'' <: ((α2671'',) -> α2674'')}  <!<  ((α2558'',) -> α2561'')
//│ ╟── while constraining:  ‹∀ 1. {(α642'' -> α644'') where: α641'' <: ((α642'',) -> α645'')}›  <!<  ((α2558'',) -> α2561'')
//│ ╟── while constraining:  α2449''  <!<  ((α2558'',) -> α2561'')
//│ ╟── while constraining:  {(α2558'' -> α2560'') where: α2449'' <: ((α2558'',) -> α2561'')}  <!<  ((α2445'',) -> α2448'')
//│ ╟── while constraining:  ‹∀ 1. {(α642'' -> α644'') where: α641'' <: ((α642'',) -> α645'')}›  <!<  ((α2445'',) -> α2448'')
//│ ╟── while constraining:  α2336''  <!<  ((α2445'',) -> α2448'')
//│ ╟── while constraining:  {(α2445'' -> α2447'') where: α2336'' <: ((α2445'',) -> α2448'')}  <!<  ((α2332'',) -> α2335'')
//│ ╟── while constraining:  ‹∀ 1. {(α642'' -> α644'') where: α641'' <: ((α642'',) -> α645'')}›  <!<  ((α2332'',) -> α2335'')
//│ ╟── while constraining:  α2223''  <!<  ((α2332'',) -> α2335'')
//│ ╟── while constraining:  {(α2332'' -> α2334'') where: α2223'' <: ((α2332'',) -> α2335'')}  <!<  ((α2219'',) -> α2222'')
//│ ╟── while constraining:  ‹∀ 1. {(α642'' -> α644'') where: α641'' <: ((α642'',) -> α645'')}›  <!<  ((α2219'',) -> α2222'')
//│ ╟── while constraining:  α2110''  <!<  ((α2219'',) -> α2222'')
//│ ╟── while constraining:  {(α2219'' -> α2221'') where: α2110'' <: ((α2219'',) -> α2222'')}  <!<  ((α2106'',) -> α2109'')
//│ ╟── while constraining:  ‹∀ 1. {(α642'' -> α644'') where: α641'' <: ((α642'',) -> α645'')}›  <!<  ((α2106'',) -> α2109'')
//│ ╟── while constraining:  α1997''  <!<  ((α2106'',) -> α2109'')
//│ ╟── while constraining:  {(α2106'' -> α2108'') where: α1997'' <: ((α2106'',) -> α2109'')}  <!<  ((α1993'',) -> α1996'')
//│ ╟── while constraining:  ‹∀ 1. {(α642'' -> α644'') where: α641'' <: ((α642'',) -> α645'')}›  <!<  ((α1993'',) -> α1996'')
//│ ╟── while constraining:  α1884''  <!<  ((α1993'',) -> α1996'')
//│ ╟── while constraining:  {(α1993'' -> α1995'') where: α1884'' <: ((α1993'',) -> α1996'')}  <!<  ((α1880'',) -> α1883'')
//│ ╟── while constraining:  ‹∀ 1. {(α642'' -> α644'') where: α641'' <: ((α642'',) -> α645'')}›  <!<  ((α1880'',) -> α1883'')
//│ ╟── while constraining:  α1771''  <!<  ((α1880'',) -> α1883'')
//│ ╟── while constraining:  {(α1880'' -> α1882'') where: α1771'' <: ((α1880'',) -> α1883'')}  <!<  ((α1767'',) -> α1770'')
//│ ╟── while constraining:  ‹∀ 1. {(α642'' -> α644'') where: α641'' <: ((α642'',) -> α645'')}›  <!<  ((α1767'',) -> α1770'')
//│ ╟── while constraining:  α1658''  <!<  ((α1767'',) -> α1770'')
//│ ╟── while constraining:  {(α1767'' -> α1769'') where: α1658'' <: ((α1767'',) -> α1770'')}  <!<  ((α1654'',) -> α1657'')
//│ ╟── while constraining:  ‹∀ 1. {(α642'' -> α644'') where: α641'' <: ((α642'',) -> α645'')}›  <!<  ((α1654'',) -> α1657'')
//│ ╟── while constraining:  α1545''  <!<  ((α1654'',) -> α1657'')
//│ ╟── while constraining:  {(α1654'' -> α1656'') where: α1545'' <: ((α1654'',) -> α1657'')}  <!<  ((α1541'',) -> α1544'')
//│ ╟── while constraining:  ‹∀ 1. {(α642'' -> α644'') where: α641'' <: ((α642'',) -> α645'')}›  <!<  ((α1541'',) -> α1544'')
//│ ╟── while constraining:  α1432''  <!<  ((α1541'',) -> α1544'')
//│ ╟── while constraining:  {(α1541'' -> α1543'') where: α1432'' <: ((α1541'',) -> α1544'')}  <!<  ((α1428'',) -> α1431'')
//│ ╟── while constraining:  ‹∀ 1. {(α642'' -> α644'') where: α641'' <: ((α642'',) -> α645'')}›  <!<  ((α1428'',) -> α1431'')
//│ ╟── while constraining:  α1319''  <!<  ((α1428'',) -> α1431'')
//│ ╟── while constraining:  {(α1428'' -> α1430'') where: α1319'' <: ((α1428'',) -> α1431'')}  <!<  ((α1315'',) -> α1318'')
//│ ╟── while constraining:  ‹∀ 1. {(α642'' -> α644'') where: α641'' <: ((α642'',) -> α645'')}›  <!<  ((α1315'',) -> α1318'')
//│ ╟── while constraining:  α1206''  <!<  ((α1315'',) -> α1318'')
//│ ╟── while constraining:  {(α1315'' -> α1317'') where: α1206'' <: ((α1315'',) -> α1318'')}  <!<  ((α1202'',) -> α1205'')
//│ ╟── while constraining:  ‹∀ 1. {(α642'' -> α644'') where: α641'' <: ((α642'',) -> α645'')}›  <!<  ((α1202'',) -> α1205'')
//│ ╟── while constraining:  α1093''  <!<  ((α1202'',) -> α1205'')
//│ ╟── while constraining:  {(α1202'' -> α1204'') where: α1093'' <: ((α1202'',) -> α1205'')}  <!<  ((α1089'',) -> α1092'')
//│ ╟── while constraining:  ‹∀ 1. {(α642'' -> α644'') where: α641'' <: ((α642'',) -> α645'')}›  <!<  ((α1089'',) -> α1092'')
//│ ╟── while constraining:  α980''  <!<  ((α1089'',) -> α1092'')
//│ ╟── while constraining:  {(α1089'' -> α1091'') where: α980'' <: ((α1089'',) -> α1092'')}  <!<  ((α976'',) -> α979'')
//│ ╟── while constraining:  ‹∀ 1. {(α642'' -> α644'') where: α641'' <: ((α642'',) -> α645'')}›  <!<  ((α976'',) -> α979'')
//│ ╟── while constraining:  α867''  <!<  ((α976'',) -> α979'')
//│ ╟── while constraining:  {(α976'' -> α978'') where: α867'' <: ((α976'',) -> α979'')}  <!<  ((α863'',) -> α866'')
//│ ╟── while constraining:  ‹∀ 1. {(α642'' -> α644'') where: α641'' <: ((α642'',) -> α645'')}›  <!<  ((α863'',) -> α866'')
//│ ╟── while constraining:  α754''  <!<  ((α863'',) -> α866'')
//│ ╟── while constraining:  {(α863'' -> α865'') where: α754'' <: ((α863'',) -> α866'')}  <!<  (‘a'' -> ‘a'')
//│ ╟── while constraining:  ‹∀ 1. {(α642'' -> α644'') where: α641'' <: ((α642'',) -> α645'')}›  <!<  (‘a'' -> ‘a'')
//│ ╟── while constraining:  id640''  <!<  (‘a'' -> ‘a'')
//│ ╟── while constraining:  ‹∀ 0. id421'›  <!<  (‘a'' -> ‘a'')
//│ ╟── while constraining:  ‹∀ 0. id421'›  <!<  ‹∀ 0. ('a188' -> 'a188')›
//│ ╟── while constraining:  ‹∀ 0. id421'›  <!<  Sid
//│ ╙── while constraining:  ‹∀ 0. id421'›  <!<  ‹∀ 0. Sid›
//│   = [Function: id1]

:e // not precise enough
rec def idd x = if true then x else idd idd x
id = idd
//│ ╔══[ERROR] Subtyping constraint of the form `?a -> ?b
//│   where
//│     ?c <: ?a -> ?d <: ?idd` exceeded recursion depth limit (400)
//│ ║  l.429: 	rec def idd x = if true then x else idd idd x
//│ ║         	            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  ((α4005',) -> α4008')
//│ ╟── while constraining:  α3898'  <!<  ((α4005',) -> α4008')
//│ ╟── while constraining:  {(α4005' -> α4007') where: α3898' <: ((α4005',) -> α4008')}  <!<  ((α4001',) -> α4004')
//│ ╟── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  ((α4001',) -> α4004')
//│ ╟── while constraining:  α3898'  <!<  ((α4001',) -> α4004')
//│ ╟── while constraining:  {(α4001' -> α4003') where: α3898' <: ((α4001',) -> α4004')}  <!<  ((α3997',) -> α4000')
//│ ╟── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  ((α3997',) -> α4000')
//│ ╟── while constraining:  α3898'  <!<  ((α3997',) -> α4000')
//│ ╟── while constraining:  {(α3997' -> α3999') where: α3898' <: ((α3997',) -> α4000')}  <!<  ((α3993',) -> α3996')
//│ ╟── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  ((α3993',) -> α3996')
//│ ╟── while constraining:  α3898'  <!<  ((α3993',) -> α3996')
//│ ╟── while constraining:  {(α3993' -> α3995') where: α3898' <: ((α3993',) -> α3996')}  <!<  ((α3989',) -> α3992')
//│ ╟── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  ((α3989',) -> α3992')
//│ ╟── while constraining:  α3898'  <!<  ((α3989',) -> α3992')
//│ ╟── while constraining:  {(α3989' -> α3991') where: α3898' <: ((α3989',) -> α3992')}  <!<  ((α3985',) -> α3988')
//│ ╟── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  ((α3985',) -> α3988')
//│ ╟── while constraining:  α3898'  <!<  ((α3985',) -> α3988')
//│ ╟── while constraining:  {(α3985' -> α3987') where: α3898' <: ((α3985',) -> α3988')}  <!<  ((α3981',) -> α3984')
//│ ╟── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  ((α3981',) -> α3984')
//│ ╟── while constraining:  α3898'  <!<  ((α3981',) -> α3984')
//│ ╟── while constraining:  {(α3981' -> α3983') where: α3898' <: ((α3981',) -> α3984')}  <!<  ((α3977',) -> α3980')
//│ ╟── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  ((α3977',) -> α3980')
//│ ╟── while constraining:  α3898'  <!<  ((α3977',) -> α3980')
//│ ╟── while constraining:  {(α3977' -> α3979') where: α3898' <: ((α3977',) -> α3980')}  <!<  ((α3973',) -> α3976')
//│ ╟── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  ((α3973',) -> α3976')
//│ ╟── while constraining:  α3898'  <!<  ((α3973',) -> α3976')
//│ ╟── while constraining:  {(α3973' -> α3975') where: α3898' <: ((α3973',) -> α3976')}  <!<  ((α3969',) -> α3972')
//│ ╟── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  ((α3969',) -> α3972')
//│ ╟── while constraining:  α3898'  <!<  ((α3969',) -> α3972')
//│ ╟── while constraining:  {(α3969' -> α3971') where: α3898' <: ((α3969',) -> α3972')}  <!<  ((α3965',) -> α3968')
//│ ╟── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  ((α3965',) -> α3968')
//│ ╟── while constraining:  α3898'  <!<  ((α3965',) -> α3968')
//│ ╟── while constraining:  {(α3965' -> α3967') where: α3898' <: ((α3965',) -> α3968')}  <!<  ((α3961',) -> α3964')
//│ ╟── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  ((α3961',) -> α3964')
//│ ╟── while constraining:  α3898'  <!<  ((α3961',) -> α3964')
//│ ╟── while constraining:  {(α3961' -> α3963') where: α3898' <: ((α3961',) -> α3964')}  <!<  ((α3957',) -> α3960')
//│ ╟── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  ((α3957',) -> α3960')
//│ ╟── while constraining:  α3898'  <!<  ((α3957',) -> α3960')
//│ ╟── while constraining:  {(α3957' -> α3959') where: α3898' <: ((α3957',) -> α3960')}  <!<  ((α3953',) -> α3956')
//│ ╟── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  ((α3953',) -> α3956')
//│ ╟── while constraining:  α3898'  <!<  ((α3953',) -> α3956')
//│ ╟── while constraining:  {(α3953' -> α3955') where: α3898' <: ((α3953',) -> α3956')}  <!<  ((α3949',) -> α3952')
//│ ╟── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  ((α3949',) -> α3952')
//│ ╟── while constraining:  α3898'  <!<  ((α3949',) -> α3952')
//│ ╟── while constraining:  {(α3949' -> α3951') where: α3898' <: ((α3949',) -> α3952')}  <!<  ((α3945',) -> α3948')
//│ ╟── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  ((α3945',) -> α3948')
//│ ╟── while constraining:  α3898'  <!<  ((α3945',) -> α3948')
//│ ╟── while constraining:  {(α3945' -> α3947') where: α3898' <: ((α3945',) -> α3948')}  <!<  ((α3941',) -> α3944')
//│ ╟── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  ((α3941',) -> α3944')
//│ ╟── while constraining:  α3898'  <!<  ((α3941',) -> α3944')
//│ ╟── while constraining:  {(α3941' -> α3943') where: α3898' <: ((α3941',) -> α3944')}  <!<  ((α3937',) -> α3940')
//│ ╟── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  ((α3937',) -> α3940')
//│ ╟── while constraining:  α3898'  <!<  ((α3937',) -> α3940')
//│ ╟── while constraining:  {(α3937' -> α3939') where: α3898' <: ((α3937',) -> α3940')}  <!<  ((α3933',) -> α3936')
//│ ╟── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  ((α3933',) -> α3936')
//│ ╟── while constraining:  α3898'  <!<  ((α3933',) -> α3936')
//│ ╟── while constraining:  {(α3933' -> α3935') where: α3898' <: ((α3933',) -> α3936')}  <!<  ((α3929',) -> α3932')
//│ ╟── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  ((α3929',) -> α3932')
//│ ╟── while constraining:  α3898'  <!<  ((α3929',) -> α3932')
//│ ╟── while constraining:  {(α3929' -> α3931') where: α3898' <: ((α3929',) -> α3932')}  <!<  ((α3925',) -> α3928')
//│ ╟── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  ((α3925',) -> α3928')
//│ ╟── while constraining:  α3898'  <!<  ((α3925',) -> α3928')
//│ ╟── while constraining:  {(α3925' -> α3927') where: α3898' <: ((α3925',) -> α3928')}  <!<  ((α3921',) -> α3924')
//│ ╟── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  ((α3921',) -> α3924')
//│ ╟── while constraining:  α3898'  <!<  ((α3921',) -> α3924')
//│ ╟── while constraining:  {(α3921' -> α3923') where: α3898' <: ((α3921',) -> α3924')}  <!<  ((α3917',) -> α3920')
//│ ╟── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  ((α3917',) -> α3920')
//│ ╟── while constraining:  α3898'  <!<  ((α3917',) -> α3920')
//│ ╟── while constraining:  {(α3917' -> α3919') where: α3898' <: ((α3917',) -> α3920')}  <!<  ((α3913',) -> α3916')
//│ ╟── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  ((α3913',) -> α3916')
//│ ╟── while constraining:  α3898'  <!<  ((α3913',) -> α3916')
//│ ╟── while constraining:  {(α3913' -> α3915') where: α3898' <: ((α3913',) -> α3916')}  <!<  ((α3909',) -> α3912')
//│ ╟── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  ((α3909',) -> α3912')
//│ ╟── while constraining:  α3898'  <!<  ((α3909',) -> α3912')
//│ ╟── while constraining:  {(α3909' -> α3911') where: α3898' <: ((α3909',) -> α3912')}  <!<  ((α3905',) -> α3908')
//│ ╟── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  ((α3905',) -> α3908')
//│ ╟── while constraining:  α3898'  <!<  ((α3905',) -> α3908')
//│ ╟── while constraining:  {(α3905' -> α3907') where: α3898' <: ((α3905',) -> α3908')}  <!<  ((α3901',) -> α3904')
//│ ╟── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  ((α3901',) -> α3904')
//│ ╟── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  α3898'
//│ ╟── while constraining:  α3903'  <!<  α3898'
//│ ╟── while constraining:  (α3901' -> α3903')  <!<  ((idd3892',) -> α3898')
//│ ╟── while constraining:  {(α3901' -> α3903') where: α3898' <: ((α3901',) -> α3904')}  <!<  ((idd3892',) -> α3898')
//│ ╟── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  ((idd3892',) -> α3898')
//│ ╙── while constraining:  ‹∀ 1. {(α3893'' -> α3900'') where: α3898' <: ((α3893'',) -> α3899'')}›  <!<  idd3892'
//│ ('a & 'b) -> 'b
//│   where
//│     'c <: 'a -> 'b
//│   <:  idd:
//│ Sid
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?a, ?b, ?c, ?d, ?e, ?f, ?g, ?h, ?i, ?j, ?k, ?l, ?m, ?n, ?o, ?p, ?q, ?r, ?s, ?t, ?u, ?v, ?w, ?x, ?y, ?z, ?a1, ?b1, ?c1, ?d1, ?e1, ?f1, ?g1, ?h1, ?i1, ?j1, ?k1, ?l1, ?m1, ?n1, ?o1, ?p1, ?q1, ?r1, ?s1, ?t1, ?u1, ?v1, ?w1, ?x1, ?y1, ?z1, ?a2, ?b2, ?c2, ?d2, ?e2, ?f2, ?g2, ?h2, ?i2, ?j2, ?k2, ?l2, ?m2, ?n2, ?o2, ?p2, ?q2, ?r2, ?s2, ?t2, ?u2, ?v2, ?w2, ?x2, ?y2, ?z2, ?a3, ?b3, ?c3, ?d3, ?e3, ?f3, ?g3, ?h3, ?i3, ?j3, ?k3, ?l3, ?m3, ?n3, ?o3, ?p3, ?q3, ?r3, ?s3, ?t3, ?u3, ?v3, ?w3, ?x3, ?y3, ?z3, ?a4, ?b4, ?c4, ?d4, ?e4, ?idd, ?f4, ?g4, ?h4, ?i4, ?j4, ?k4, ?l4, ?m4, ?n4, ?o4, ?p4, ?q4, ?r4, ?s4, ?t4, ?u4, ?v4, ?w4, ?x4, ?y4, ?z4, ?a5, ?b5, ?c5, ?d5, ?e5, ?f5, ?g5, ?h5, ?i5, ?j5, ?k5, ?l5, ?m5, ?n5, ?o5, ?p5, ?q5, ?r5, ?s5, ?t5, ?u5, ?v5, ?w5, ?x5, ?y5, ?z5, ?a6, ?b6, ?c6, ?d6, ?e6, ?f6, ?g6, ?h6, ?i6, ?j6, ?k6, ?l6, ?m6, ?n6, ?o6, ?p6, ?q6, ?r6, ?s6, ?t6, ?u6, ?v6, ?w6, ?x6, ?y6, ?z6, ?a7, ?b7, ?c7, ?d7, ?e7, ?f7, ?g7, ?h7, ?i7, ?j7. ?idd <: Sid` exceeded recursion depth limit (400)
//│ ║  l.429: 	rec def idd x = if true then x else idd idd x
//│ ║         	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── while constraining:  ‹∀ 1. {(α4113'' -> α4115'') where: α4112'' <: ((α4113'',) -> α4116'')}›  <!<  ((α7272'',) -> α7275'')
//│ ╟── while constraining:  α7163''  <!<  ((α7272'',) -> α7275'')
//│ ╟── while constraining:  {(α7272'' -> α7274'') where: α7163'' <: ((α7272'',) -> α7275'')}  <!<  ((α7159'',) -> α7162'')
//│ ╟── while constraining:  ‹∀ 1. {(α4113'' -> α4115'') where: α4112'' <: ((α4113'',) -> α4116'')}›  <!<  ((α7159'',) -> α7162'')
//│ ╟── while constraining:  α7050''  <!<  ((α7159'',) -> α7162'')
//│ ╟── while constraining:  {(α7159'' -> α7161'') where: α7050'' <: ((α7159'',) -> α7162'')}  <!<  ((α7046'',) -> α7049'')
//│ ╟── while constraining:  ‹∀ 1. {(α4113'' -> α4115'') where: α4112'' <: ((α4113'',) -> α4116'')}›  <!<  ((α7046'',) -> α7049'')
//│ ╟── while constraining:  α6937''  <!<  ((α7046'',) -> α7049'')
//│ ╟── while constraining:  {(α7046'' -> α7048'') where: α6937'' <: ((α7046'',) -> α7049'')}  <!<  ((α6933'',) -> α6936'')
//│ ╟── while constraining:  ‹∀ 1. {(α4113'' -> α4115'') where: α4112'' <: ((α4113'',) -> α4116'')}›  <!<  ((α6933'',) -> α6936'')
//│ ╟── while constraining:  α6824''  <!<  ((α6933'',) -> α6936'')
//│ ╟── while constraining:  {(α6933'' -> α6935'') where: α6824'' <: ((α6933'',) -> α6936'')}  <!<  ((α6820'',) -> α6823'')
//│ ╟── while constraining:  ‹∀ 1. {(α4113'' -> α4115'') where: α4112'' <: ((α4113'',) -> α4116'')}›  <!<  ((α6820'',) -> α6823'')
//│ ╟── while constraining:  α6711''  <!<  ((α6820'',) -> α6823'')
//│ ╟── while constraining:  {(α6820'' -> α6822'') where: α6711'' <: ((α6820'',) -> α6823'')}  <!<  ((α6707'',) -> α6710'')
//│ ╟── while constraining:  ‹∀ 1. {(α4113'' -> α4115'') where: α4112'' <: ((α4113'',) -> α4116'')}›  <!<  ((α6707'',) -> α6710'')
//│ ╟── while constraining:  α6598''  <!<  ((α6707'',) -> α6710'')
//│ ╟── while constraining:  {(α6707'' -> α6709'') where: α6598'' <: ((α6707'',) -> α6710'')}  <!<  ((α6594'',) -> α6597'')
//│ ╟── while constraining:  ‹∀ 1. {(α4113'' -> α4115'') where: α4112'' <: ((α4113'',) -> α4116'')}›  <!<  ((α6594'',) -> α6597'')
//│ ╟── while constraining:  α6485''  <!<  ((α6594'',) -> α6597'')
//│ ╟── while constraining:  {(α6594'' -> α6596'') where: α6485'' <: ((α6594'',) -> α6597'')}  <!<  ((α6481'',) -> α6484'')
//│ ╟── while constraining:  ‹∀ 1. {(α4113'' -> α4115'') where: α4112'' <: ((α4113'',) -> α4116'')}›  <!<  ((α6481'',) -> α6484'')
//│ ╟── while constraining:  α6372''  <!<  ((α6481'',) -> α6484'')
//│ ╟── while constraining:  {(α6481'' -> α6483'') where: α6372'' <: ((α6481'',) -> α6484'')}  <!<  ((α6368'',) -> α6371'')
//│ ╟── while constraining:  ‹∀ 1. {(α4113'' -> α4115'') where: α4112'' <: ((α4113'',) -> α4116'')}›  <!<  ((α6368'',) -> α6371'')
//│ ╟── while constraining:  α6259''  <!<  ((α6368'',) -> α6371'')
//│ ╟── while constraining:  {(α6368'' -> α6370'') where: α6259'' <: ((α6368'',) -> α6371'')}  <!<  ((α6255'',) -> α6258'')
//│ ╟── while constraining:  ‹∀ 1. {(α4113'' -> α4115'') where: α4112'' <: ((α4113'',) -> α4116'')}›  <!<  ((α6255'',) -> α6258'')
//│ ╟── while constraining:  α6146''  <!<  ((α6255'',) -> α6258'')
//│ ╟── while constraining:  {(α6255'' -> α6257'') where: α6146'' <: ((α6255'',) -> α6258'')}  <!<  ((α6142'',) -> α6145'')
//│ ╟── while constraining:  ‹∀ 1. {(α4113'' -> α4115'') where: α4112'' <: ((α4113'',) -> α4116'')}›  <!<  ((α6142'',) -> α6145'')
//│ ╟── while constraining:  α6033''  <!<  ((α6142'',) -> α6145'')
//│ ╟── while constraining:  {(α6142'' -> α6144'') where: α6033'' <: ((α6142'',) -> α6145'')}  <!<  ((α6029'',) -> α6032'')
//│ ╟── while constraining:  ‹∀ 1. {(α4113'' -> α4115'') where: α4112'' <: ((α4113'',) -> α4116'')}›  <!<  ((α6029'',) -> α6032'')
//│ ╟── while constraining:  α5920''  <!<  ((α6029'',) -> α6032'')
//│ ╟── while constraining:  {(α6029'' -> α6031'') where: α5920'' <: ((α6029'',) -> α6032'')}  <!<  ((α5916'',) -> α5919'')
//│ ╟── while constraining:  ‹∀ 1. {(α4113'' -> α4115'') where: α4112'' <: ((α4113'',) -> α4116'')}›  <!<  ((α5916'',) -> α5919'')
//│ ╟── while constraining:  α5807''  <!<  ((α5916'',) -> α5919'')
//│ ╟── while constraining:  {(α5916'' -> α5918'') where: α5807'' <: ((α5916'',) -> α5919'')}  <!<  ((α5803'',) -> α5806'')
//│ ╟── while constraining:  ‹∀ 1. {(α4113'' -> α4115'') where: α4112'' <: ((α4113'',) -> α4116'')}›  <!<  ((α5803'',) -> α5806'')
//│ ╟── while constraining:  α5694''  <!<  ((α5803'',) -> α5806'')
//│ ╟── while constraining:  {(α5803'' -> α5805'') where: α5694'' <: ((α5803'',) -> α5806'')}  <!<  ((α5690'',) -> α5693'')
//│ ╟── while constraining:  ‹∀ 1. {(α4113'' -> α4115'') where: α4112'' <: ((α4113'',) -> α4116'')}›  <!<  ((α5690'',) -> α5693'')
//│ ╟── while constraining:  α5581''  <!<  ((α5690'',) -> α5693'')
//│ ╟── while constraining:  {(α5690'' -> α5692'') where: α5581'' <: ((α5690'',) -> α5693'')}  <!<  ((α5577'',) -> α5580'')
//│ ╟── while constraining:  ‹∀ 1. {(α4113'' -> α4115'') where: α4112'' <: ((α4113'',) -> α4116'')}›  <!<  ((α5577'',) -> α5580'')
//│ ╟── while constraining:  α5468''  <!<  ((α5577'',) -> α5580'')
//│ ╟── while constraining:  {(α5577'' -> α5579'') where: α5468'' <: ((α5577'',) -> α5580'')}  <!<  ((α5464'',) -> α5467'')
//│ ╟── while constraining:  ‹∀ 1. {(α4113'' -> α4115'') where: α4112'' <: ((α4113'',) -> α4116'')}›  <!<  ((α5464'',) -> α5467'')
//│ ╟── while constraining:  α5355''  <!<  ((α5464'',) -> α5467'')
//│ ╟── while constraining:  {(α5464'' -> α5466'') where: α5355'' <: ((α5464'',) -> α5467'')}  <!<  ((α5351'',) -> α5354'')
//│ ╟── while constraining:  ‹∀ 1. {(α4113'' -> α4115'') where: α4112'' <: ((α4113'',) -> α4116'')}›  <!<  ((α5351'',) -> α5354'')
//│ ╟── while constraining:  α5242''  <!<  ((α5351'',) -> α5354'')
//│ ╟── while constraining:  {(α5351'' -> α5353'') where: α5242'' <: ((α5351'',) -> α5354'')}  <!<  ((α5238'',) -> α5241'')
//│ ╟── while constraining:  ‹∀ 1. {(α4113'' -> α4115'') where: α4112'' <: ((α4113'',) -> α4116'')}›  <!<  ((α5238'',) -> α5241'')
//│ ╟── while constraining:  α5129''  <!<  ((α5238'',) -> α5241'')
//│ ╟── while constraining:  {(α5238'' -> α5240'') where: α5129'' <: ((α5238'',) -> α5241'')}  <!<  ((α5125'',) -> α5128'')
//│ ╟── while constraining:  ‹∀ 1. {(α4113'' -> α4115'') where: α4112'' <: ((α4113'',) -> α4116'')}›  <!<  ((α5125'',) -> α5128'')
//│ ╟── while constraining:  α5016''  <!<  ((α5125'',) -> α5128'')
//│ ╟── while constraining:  {(α5125'' -> α5127'') where: α5016'' <: ((α5125'',) -> α5128'')}  <!<  ((α5012'',) -> α5015'')
//│ ╟── while constraining:  ‹∀ 1. {(α4113'' -> α4115'') where: α4112'' <: ((α4113'',) -> α4116'')}›  <!<  ((α5012'',) -> α5015'')
//│ ╟── while constraining:  α4903''  <!<  ((α5012'',) -> α5015'')
//│ ╟── while constraining:  {(α5012'' -> α5014'') where: α4903'' <: ((α5012'',) -> α5015'')}  <!<  ((α4899'',) -> α4902'')
//│ ╟── while constraining:  ‹∀ 1. {(α4113'' -> α4115'') where: α4112'' <: ((α4113'',) -> α4116'')}›  <!<  ((α4899'',) -> α4902'')
//│ ╟── while constraining:  α4790''  <!<  ((α4899'',) -> α4902'')
//│ ╟── while constraining:  {(α4899'' -> α4901'') where: α4790'' <: ((α4899'',) -> α4902'')}  <!<  ((α4786'',) -> α4789'')
//│ ╟── while constraining:  ‹∀ 1. {(α4113'' -> α4115'') where: α4112'' <: ((α4113'',) -> α4116'')}›  <!<  ((α4786'',) -> α4789'')
//│ ╟── while constraining:  α4677''  <!<  ((α4786'',) -> α4789'')
//│ ╟── while constraining:  {(α4786'' -> α4788'') where: α4677'' <: ((α4786'',) -> α4789'')}  <!<  ((α4673'',) -> α4676'')
//│ ╟── while constraining:  ‹∀ 1. {(α4113'' -> α4115'') where: α4112'' <: ((α4113'',) -> α4116'')}›  <!<  ((α4673'',) -> α4676'')
//│ ╟── while constraining:  α4564''  <!<  ((α4673'',) -> α4676'')
//│ ╟── while constraining:  {(α4673'' -> α4675'') where: α4564'' <: ((α4673'',) -> α4676'')}  <!<  ((α4560'',) -> α4563'')
//│ ╟── while constraining:  ‹∀ 1. {(α4113'' -> α4115'') where: α4112'' <: ((α4113'',) -> α4116'')}›  <!<  ((α4560'',) -> α4563'')
//│ ╟── while constraining:  α4451''  <!<  ((α4560'',) -> α4563'')
//│ ╟── while constraining:  {(α4560'' -> α4562'') where: α4451'' <: ((α4560'',) -> α4563'')}  <!<  ((α4447'',) -> α4450'')
//│ ╟── while constraining:  ‹∀ 1. {(α4113'' -> α4115'') where: α4112'' <: ((α4113'',) -> α4116'')}›  <!<  ((α4447'',) -> α4450'')
//│ ╟── while constraining:  α4338''  <!<  ((α4447'',) -> α4450'')
//│ ╟── while constraining:  {(α4447'' -> α4449'') where: α4338'' <: ((α4447'',) -> α4450'')}  <!<  ((α4334'',) -> α4337'')
//│ ╟── while constraining:  ‹∀ 1. {(α4113'' -> α4115'') where: α4112'' <: ((α4113'',) -> α4116'')}›  <!<  ((α4334'',) -> α4337'')
//│ ╟── while constraining:  α4225''  <!<  ((α4334'',) -> α4337'')
//│ ╟── while constraining:  {(α4334'' -> α4336'') where: α4225'' <: ((α4334'',) -> α4337'')}  <!<  (‘a'' -> ‘a'')
//│ ╟── while constraining:  ‹∀ 1. {(α4113'' -> α4115'') where: α4112'' <: ((α4113'',) -> α4116'')}›  <!<  (‘a'' -> ‘a'')
//│ ╟── while constraining:  idd4111''  <!<  (‘a'' -> ‘a'')
//│ ╟── while constraining:  ‹∀ 0. idd3892'›  <!<  (‘a'' -> ‘a'')
//│ ╟── while constraining:  ‹∀ 0. idd3892'›  <!<  ‹∀ 0. ('a188' -> 'a188')›
//│ ╟── while constraining:  ‹∀ 0. idd3892'›  <!<  Sid
//│ ╙── while constraining:  ‹∀ 0. idd3892'›  <!<  ‹∀ 0. Sid›
//│    = [Function: idd1]
//│ Sid
//│   <:  id:
//│ Sid
//│   = [Function: idd1]

// emulates annotated rec def
def id x = if true then x else id id x
//│ 'a -> 'a
//│   <:  id:
//│ Sid
//│   = [Function: id3]




// (* Existential types. *)
// (* Creating an encapsulation is explicit (unavoidable). *)
// (* Here, we build (Exist 'a . 'a * ('a -> unit))              *)
// (*        then    (Exist 'a . 'a * 'a * ('a -> 'a -> bool))   *)
// let make_ex1 x (f:['a] ('a * ('a -> 'c)) -> 'b) = f x
def make_ex1 x (f: forall 'a. (('a, 'a -> 'c),) -> 'b) = f x
//│ make_ex1: 'b -> (forall 'b, 'a, 'c, 'd. ((forall 'a0. ('a0, 'a0 -> 'c,) -> 'd) -> 'd
//│   where
//│     'b <: ('a, 'a -> 'c,)))
//│         = [Function: make_ex1]

// let make_ex2 x (f:['a] ('a * 'a * ('a -> 'a -> 'c)) -> 'b) = f x
// ;;
def make_ex2 x (f: forall 'a. (('a, 'a, 'a -> 'a -> 'c),) -> 'b) = f x
//│ make_ex2: 'b -> (forall 'b, 'a, 'c, 'd. ((forall 'a0. ('a0, 'a0, 'a0 -> 'a0 -> 'c,) -> 'd) -> 'd
//│   where
//│     'b <: ('a, 'a, 'a -> 'a -> 'c,)))
//│         = [Function: make_ex2]

// let ex_list1 = [ make_ex1 ("A String", print_string) ; 
// 		 make_ex1 (8250, print_int) ;
// 		 make_ex1 (true, print_bool) ]
// ;;
:ng
ex_list1 = cons (make_ex1 (("A String", print_string)))
  (cons (make_ex1 ((8250, print_int)))
  (cons (make_ex1 ((true, print_bool))) nil))
//│ ex_list1: List[forall 'b, 'a, 'c, 'd, 'a0, 'c0, 'e, 'a1, 'c1, 'f. ((forall 'a2, 'a3, 'a4. ('a2, 'a2 -> 'c1,) -> 'f & ('a3, 'a3 -> 'c,) -> 'f & ('a4, 'a4 -> 'c0,) -> 'f) -> 'f
//│   where
//│     'b <: ('a, 'a -> 'c,)
//│     'd <: ('a0, 'a0 -> 'c0,)
//│     'e <: ('a1, 'a1 -> 'c1,))]

// let ex_list2 = [ make_ex2 ("String", "String", eqstring) ;
// 		 make_ex2 ( 1250, 4890, eqint) ;
// 		 make_ex2 ( true, false, eqbool) ]
// ;;
ex_list2 = cons (make_ex2 (("String", "String", eqstring)))
  (cons (make_ex2 ((1250, 4890, eqint)))
  (cons (make_ex2 ((true, false, eqbool))) nil))
//│ ex_list2: List[forall 'b, 'a, 'c, 'd, 'a0, 'c0, 'e, 'a1, 'c1, 'f. ((forall 'a2, 'a3, 'a4. ('a2, 'a2, 'a2 -> 'a2 -> 'c1,) -> 'f & ('a3, 'a3, 'a3 -> 'a3 -> 'c,) -> 'f & ('a4, 'a4, 'a4 -> 'a4 -> 'c0,) -> 'f) -> 'f
//│   where
//│     'b <: ('a, 'a, 'a -> 'a -> 'c,)
//│     'd <: ('a0, 'a0, 'a0 -> 'a0 -> 'c0,)
//│     'e <: ('a1, 'a1, 'a1 -> 'a1 -> 'c1,))]
//│         = Cons {
//│             head: [Function (anonymous)],
//│             tail: Cons {
//│               head: [Function (anonymous)],
//│               tail: Cons { head: [Function (anonymous)], tail: Nil {} }
//│             }
//│           }


// let test1 = listiter (fun ex -> ex (fun p -> (snd p) (fst p))) ex_list1
// ;;
:ng
test1 = listiter (fun ex -> ex (fun p -> p._2 p._1)) ex_list1
//│ ╔══[ERROR] Subtyping constraint of the form `?a <: (forall ?c, ?d, ?e, ?f, ?g, ?h, ?i, ?j, ?b, ?b0, ?b1. ?i) -> ?k` exceeded recursion depth limit (400)
//│ ║  l.689: 	test1 = listiter (fun ex -> ex (fun p -> p._2 p._1)) ex_list1
//│ ║         	        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── while constraining:  {(α8279' -> α8278') where: α7608' <: ((α8274',) -> α8276')}  <!<  ((α8266',) -> α8268')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8266',) -> α8268')
//│ ╟── while constraining:  α7608'  <!<  ((α8266',) -> α8268')
//│ ╟── while constraining:  {(α8271' -> α8270') where: α7608' <: ((α8266',) -> α8268')}  <!<  ((α8258',) -> α8260')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8258',) -> α8260')
//│ ╟── while constraining:  α7608'  <!<  ((α8258',) -> α8260')
//│ ╟── while constraining:  {(α8263' -> α8262') where: α7608' <: ((α8258',) -> α8260')}  <!<  ((α8250',) -> α8252')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8250',) -> α8252')
//│ ╟── while constraining:  α7608'  <!<  ((α8250',) -> α8252')
//│ ╟── while constraining:  {(α8255' -> α8254') where: α7608' <: ((α8250',) -> α8252')}  <!<  ((α8242',) -> α8244')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8242',) -> α8244')
//│ ╟── while constraining:  α7608'  <!<  ((α8242',) -> α8244')
//│ ╟── while constraining:  {(α8247' -> α8246') where: α7608' <: ((α8242',) -> α8244')}  <!<  ((α8234',) -> α8236')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8234',) -> α8236')
//│ ╟── while constraining:  α7608'  <!<  ((α8234',) -> α8236')
//│ ╟── while constraining:  {(α8239' -> α8238') where: α7608' <: ((α8234',) -> α8236')}  <!<  ((α8226',) -> α8228')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8226',) -> α8228')
//│ ╟── while constraining:  α7608'  <!<  ((α8226',) -> α8228')
//│ ╟── while constraining:  {(α8231' -> α8230') where: α7608' <: ((α8226',) -> α8228')}  <!<  ((α8218',) -> α8220')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8218',) -> α8220')
//│ ╟── while constraining:  α7608'  <!<  ((α8218',) -> α8220')
//│ ╟── while constraining:  {(α8223' -> α8222') where: α7608' <: ((α8218',) -> α8220')}  <!<  ((α8210',) -> α8212')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8210',) -> α8212')
//│ ╟── while constraining:  α7608'  <!<  ((α8210',) -> α8212')
//│ ╟── while constraining:  {(α8215' -> α8214') where: α7608' <: ((α8210',) -> α8212')}  <!<  ((α8202',) -> α8204')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8202',) -> α8204')
//│ ╟── while constraining:  α7608'  <!<  ((α8202',) -> α8204')
//│ ╟── while constraining:  {(α8207' -> α8206') where: α7608' <: ((α8202',) -> α8204')}  <!<  ((α8194',) -> α8196')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8194',) -> α8196')
//│ ╟── while constraining:  α7608'  <!<  ((α8194',) -> α8196')
//│ ╟── while constraining:  {(α8199' -> α8198') where: α7608' <: ((α8194',) -> α8196')}  <!<  ((α8186',) -> α8188')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8186',) -> α8188')
//│ ╟── while constraining:  α7608'  <!<  ((α8186',) -> α8188')
//│ ╟── while constraining:  {(α8191' -> α8190') where: α7608' <: ((α8186',) -> α8188')}  <!<  ((α8178',) -> α8180')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8178',) -> α8180')
//│ ╟── while constraining:  α7608'  <!<  ((α8178',) -> α8180')
//│ ╟── while constraining:  {(α8183' -> α8182') where: α7608' <: ((α8178',) -> α8180')}  <!<  ((α8170',) -> α8172')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8170',) -> α8172')
//│ ╟── while constraining:  α7608'  <!<  ((α8170',) -> α8172')
//│ ╟── while constraining:  {(α8175' -> α8174') where: α7608' <: ((α8170',) -> α8172')}  <!<  ((α8162',) -> α8164')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8162',) -> α8164')
//│ ╟── while constraining:  α7608'  <!<  ((α8162',) -> α8164')
//│ ╟── while constraining:  {(α8167' -> α8166') where: α7608' <: ((α8162',) -> α8164')}  <!<  ((α8154',) -> α8156')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8154',) -> α8156')
//│ ╟── while constraining:  α7608'  <!<  ((α8154',) -> α8156')
//│ ╟── while constraining:  {(α8159' -> α8158') where: α7608' <: ((α8154',) -> α8156')}  <!<  ((α8146',) -> α8148')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8146',) -> α8148')
//│ ╟── while constraining:  α7608'  <!<  ((α8146',) -> α8148')
//│ ╟── while constraining:  {(α8151' -> α8150') where: α7608' <: ((α8146',) -> α8148')}  <!<  ((α8138',) -> α8140')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8138',) -> α8140')
//│ ╟── while constraining:  α7608'  <!<  ((α8138',) -> α8140')
//│ ╟── while constraining:  {(α8143' -> α8142') where: α7608' <: ((α8138',) -> α8140')}  <!<  ((α8130',) -> α8132')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8130',) -> α8132')
//│ ╟── while constraining:  α7608'  <!<  ((α8130',) -> α8132')
//│ ╟── while constraining:  {(α8135' -> α8134') where: α7608' <: ((α8130',) -> α8132')}  <!<  ((α8122',) -> α8124')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8122',) -> α8124')
//│ ╟── while constraining:  α7608'  <!<  ((α8122',) -> α8124')
//│ ╟── while constraining:  {(α8127' -> α8126') where: α7608' <: ((α8122',) -> α8124')}  <!<  ((α8114',) -> α8116')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8114',) -> α8116')
//│ ╟── while constraining:  α7608'  <!<  ((α8114',) -> α8116')
//│ ╟── while constraining:  {(α8119' -> α8118') where: α7608' <: ((α8114',) -> α8116')}  <!<  ((α8106',) -> α8108')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8106',) -> α8108')
//│ ╟── while constraining:  α7608'  <!<  ((α8106',) -> α8108')
//│ ╟── while constraining:  {(α8111' -> α8110') where: α7608' <: ((α8106',) -> α8108')}  <!<  ((α8098',) -> α8100')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8098',) -> α8100')
//│ ╟── while constraining:  α7608'  <!<  ((α8098',) -> α8100')
//│ ╟── while constraining:  {(α8103' -> α8102') where: α7608' <: ((α8098',) -> α8100')}  <!<  ((α8090',) -> α8092')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8090',) -> α8092')
//│ ╟── while constraining:  α7608'  <!<  ((α8090',) -> α8092')
//│ ╟── while constraining:  {(α8095' -> α8094') where: α7608' <: ((α8090',) -> α8092')}  <!<  ((α8082',) -> α8084')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8082',) -> α8084')
//│ ╟── while constraining:  α7608'  <!<  ((α8082',) -> α8084')
//│ ╟── while constraining:  {(α8087' -> α8086') where: α7608' <: ((α8082',) -> α8084')}  <!<  ((α8074',) -> α8076')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8074',) -> α8076')
//│ ╟── while constraining:  α7608'  <!<  ((α8074',) -> α8076')
//│ ╟── while constraining:  {(α8079' -> α8078') where: α7608' <: ((α8074',) -> α8076')}  <!<  ((α8066',) -> α8068')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8066',) -> α8068')
//│ ╟── while constraining:  α7608'  <!<  ((α8066',) -> α8068')
//│ ╟── while constraining:  {(α8071' -> α8070') where: α7608' <: ((α8066',) -> α8068')}  <!<  ((α8058',) -> α8060')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8058',) -> α8060')
//│ ╟── while constraining:  α7608'  <!<  ((α8058',) -> α8060')
//│ ╟── while constraining:  {(α8063' -> α8062') where: α7608' <: ((α8058',) -> α8060')}  <!<  ((α8050',) -> α8052')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8050',) -> α8052')
//│ ╟── while constraining:  α7608'  <!<  ((α8050',) -> α8052')
//│ ╟── while constraining:  {(α8055' -> α8054') where: α7608' <: ((α8050',) -> α8052')}  <!<  ((α8042',) -> α8044')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8042',) -> α8044')
//│ ╟── while constraining:  α7608'  <!<  ((α8042',) -> α8044')
//│ ╟── while constraining:  {(α8047' -> α8046') where: α7608' <: ((α8042',) -> α8044')}  <!<  ((α8034',) -> α8036')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8034',) -> α8036')
//│ ╟── while constraining:  α7608'  <!<  ((α8034',) -> α8036')
//│ ╟── while constraining:  {(α8039' -> α8038') where: α7608' <: ((α8034',) -> α8036')}  <!<  ((α8026',) -> α8028')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8026',) -> α8028')
//│ ╟── while constraining:  α7608'  <!<  ((α8026',) -> α8028')
//│ ╟── while constraining:  {(α8031' -> α8030') where: α7608' <: ((α8026',) -> α8028')}  <!<  ((α8018',) -> α8020')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8018',) -> α8020')
//│ ╟── while constraining:  α7608'  <!<  ((α8018',) -> α8020')
//│ ╟── while constraining:  {(α8023' -> α8022') where: α7608' <: ((α8018',) -> α8020')}  <!<  ((α8010',) -> α8012')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8010',) -> α8012')
//│ ╟── while constraining:  α7608'  <!<  ((α8010',) -> α8012')
//│ ╟── while constraining:  {(α8015' -> α8014') where: α7608' <: ((α8010',) -> α8012')}  <!<  ((α8002',) -> α8004')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α8002',) -> α8004')
//│ ╟── while constraining:  α7608'  <!<  ((α8002',) -> α8004')
//│ ╟── while constraining:  {(α8007' -> α8006') where: α7608' <: ((α8002',) -> α8004')}  <!<  ((α7994',) -> α7996')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7994',) -> α7996')
//│ ╟── while constraining:  α7608'  <!<  ((α7994',) -> α7996')
//│ ╟── while constraining:  {(α7999' -> α7998') where: α7608' <: ((α7994',) -> α7996')}  <!<  ((α7986',) -> α7988')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7986',) -> α7988')
//│ ╟── while constraining:  α7608'  <!<  ((α7986',) -> α7988')
//│ ╟── while constraining:  {(α7991' -> α7990') where: α7608' <: ((α7986',) -> α7988')}  <!<  ((α7978',) -> α7980')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7978',) -> α7980')
//│ ╟── while constraining:  α7608'  <!<  ((α7978',) -> α7980')
//│ ╟── while constraining:  {(α7983' -> α7982') where: α7608' <: ((α7978',) -> α7980')}  <!<  ((α7970',) -> α7972')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7970',) -> α7972')
//│ ╟── while constraining:  α7608'  <!<  ((α7970',) -> α7972')
//│ ╟── while constraining:  {(α7975' -> α7974') where: α7608' <: ((α7970',) -> α7972')}  <!<  ((α7962',) -> α7964')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7962',) -> α7964')
//│ ╟── while constraining:  α7608'  <!<  ((α7962',) -> α7964')
//│ ╟── while constraining:  {(α7967' -> α7966') where: α7608' <: ((α7962',) -> α7964')}  <!<  ((α7954',) -> α7956')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7954',) -> α7956')
//│ ╟── while constraining:  α7608'  <!<  ((α7954',) -> α7956')
//│ ╟── while constraining:  {(α7959' -> α7958') where: α7608' <: ((α7954',) -> α7956')}  <!<  ((α7946',) -> α7948')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7946',) -> α7948')
//│ ╟── while constraining:  α7608'  <!<  ((α7946',) -> α7948')
//│ ╟── while constraining:  {(α7951' -> α7950') where: α7608' <: ((α7946',) -> α7948')}  <!<  ((α7938',) -> α7940')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7938',) -> α7940')
//│ ╟── while constraining:  α7608'  <!<  ((α7938',) -> α7940')
//│ ╟── while constraining:  {(α7943' -> α7942') where: α7608' <: ((α7938',) -> α7940')}  <!<  ((α7930',) -> α7932')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7930',) -> α7932')
//│ ╟── while constraining:  α7608'  <!<  ((α7930',) -> α7932')
//│ ╟── while constraining:  {(α7935' -> α7934') where: α7608' <: ((α7930',) -> α7932')}  <!<  ((α7922',) -> α7924')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7922',) -> α7924')
//│ ╟── while constraining:  α7608'  <!<  ((α7922',) -> α7924')
//│ ╟── while constraining:  {(α7927' -> α7926') where: α7608' <: ((α7922',) -> α7924')}  <!<  ((α7914',) -> α7916')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7914',) -> α7916')
//│ ╟── while constraining:  α7608'  <!<  ((α7914',) -> α7916')
//│ ╟── while constraining:  {(α7919' -> α7918') where: α7608' <: ((α7914',) -> α7916')}  <!<  ((α7906',) -> α7908')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7906',) -> α7908')
//│ ╟── while constraining:  α7608'  <!<  ((α7906',) -> α7908')
//│ ╟── while constraining:  {(α7911' -> α7910') where: α7608' <: ((α7906',) -> α7908')}  <!<  ((α7898',) -> α7900')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7898',) -> α7900')
//│ ╟── while constraining:  α7608'  <!<  ((α7898',) -> α7900')
//│ ╟── while constraining:  {(α7903' -> α7902') where: α7608' <: ((α7898',) -> α7900')}  <!<  ((α7890',) -> α7892')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7890',) -> α7892')
//│ ╟── while constraining:  α7608'  <!<  ((α7890',) -> α7892')
//│ ╟── while constraining:  {(α7895' -> α7894') where: α7608' <: ((α7890',) -> α7892')}  <!<  ((α7882',) -> α7884')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7882',) -> α7884')
//│ ╟── while constraining:  α7608'  <!<  ((α7882',) -> α7884')
//│ ╟── while constraining:  {(α7887' -> α7886') where: α7608' <: ((α7882',) -> α7884')}  <!<  ((α7874',) -> α7876')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7874',) -> α7876')
//│ ╟── while constraining:  α7608'  <!<  ((α7874',) -> α7876')
//│ ╟── while constraining:  {(α7879' -> α7878') where: α7608' <: ((α7874',) -> α7876')}  <!<  ((α7866',) -> α7868')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7866',) -> α7868')
//│ ╟── while constraining:  α7608'  <!<  ((α7866',) -> α7868')
//│ ╟── while constraining:  {(α7871' -> α7870') where: α7608' <: ((α7866',) -> α7868')}  <!<  ((α7858',) -> α7860')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7858',) -> α7860')
//│ ╟── while constraining:  α7608'  <!<  ((α7858',) -> α7860')
//│ ╟── while constraining:  {(α7863' -> α7862') where: α7608' <: ((α7858',) -> α7860')}  <!<  ((α7850',) -> α7852')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7850',) -> α7852')
//│ ╟── while constraining:  α7608'  <!<  ((α7850',) -> α7852')
//│ ╟── while constraining:  {(α7855' -> α7854') where: α7608' <: ((α7850',) -> α7852')}  <!<  ((α7842',) -> α7844')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7842',) -> α7844')
//│ ╟── while constraining:  α7608'  <!<  ((α7842',) -> α7844')
//│ ╟── while constraining:  {(α7847' -> α7846') where: α7608' <: ((α7842',) -> α7844')}  <!<  ((α7834',) -> α7836')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7834',) -> α7836')
//│ ╟── while constraining:  α7608'  <!<  ((α7834',) -> α7836')
//│ ╟── while constraining:  {(α7839' -> α7838') where: α7608' <: ((α7834',) -> α7836')}  <!<  ((α7826',) -> α7828')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7826',) -> α7828')
//│ ╟── while constraining:  α7608'  <!<  ((α7826',) -> α7828')
//│ ╟── while constraining:  {(α7831' -> α7830') where: α7608' <: ((α7826',) -> α7828')}  <!<  ((α7818',) -> α7820')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7818',) -> α7820')
//│ ╟── while constraining:  α7608'  <!<  ((α7818',) -> α7820')
//│ ╟── while constraining:  {(α7823' -> α7822') where: α7608' <: ((α7818',) -> α7820')}  <!<  ((α7810',) -> α7812')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7810',) -> α7812')
//│ ╟── while constraining:  α7608'  <!<  ((α7810',) -> α7812')
//│ ╟── while constraining:  {(α7815' -> α7814') where: α7608' <: ((α7810',) -> α7812')}  <!<  ((α7802',) -> α7804')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7802',) -> α7804')
//│ ╟── while constraining:  α7608'  <!<  ((α7802',) -> α7804')
//│ ╟── while constraining:  {(α7807' -> α7806') where: α7608' <: ((α7802',) -> α7804')}  <!<  ((α7794',) -> α7796')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7794',) -> α7796')
//│ ╟── while constraining:  α7608'  <!<  ((α7794',) -> α7796')
//│ ╟── while constraining:  {(α7799' -> α7798') where: α7608' <: ((α7794',) -> α7796')}  <!<  ((α7786',) -> α7788')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7786',) -> α7788')
//│ ╟── while constraining:  α7608'  <!<  ((α7786',) -> α7788')
//│ ╟── while constraining:  {(α7791' -> α7790') where: α7608' <: ((α7786',) -> α7788')}  <!<  ((α7778',) -> α7780')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7778',) -> α7780')
//│ ╟── while constraining:  α7608'  <!<  ((α7778',) -> α7780')
//│ ╟── while constraining:  {(α7783' -> α7782') where: α7608' <: ((α7778',) -> α7780')}  <!<  ((α7770',) -> α7772')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7770',) -> α7772')
//│ ╟── while constraining:  α7608'  <!<  ((α7770',) -> α7772')
//│ ╟── while constraining:  {(α7775' -> α7774') where: α7608' <: ((α7770',) -> α7772')}  <!<  ((α7762',) -> α7764')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7762',) -> α7764')
//│ ╟── while constraining:  α7608'  <!<  ((α7762',) -> α7764')
//│ ╟── while constraining:  {(α7767' -> α7766') where: α7608' <: ((α7762',) -> α7764')}  <!<  ((α7754',) -> α7756')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7754',) -> α7756')
//│ ╟── while constraining:  α7608'  <!<  ((α7754',) -> α7756')
//│ ╟── while constraining:  {(α7759' -> α7758') where: α7608' <: ((α7754',) -> α7756')}  <!<  ((α7746',) -> α7748')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7746',) -> α7748')
//│ ╟── while constraining:  α7608'  <!<  ((α7746',) -> α7748')
//│ ╟── while constraining:  {(α7751' -> α7750') where: α7608' <: ((α7746',) -> α7748')}  <!<  ((α7738',) -> α7740')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7738',) -> α7740')
//│ ╟── while constraining:  α7608'  <!<  ((α7738',) -> α7740')
//│ ╟── while constraining:  {(α7743' -> α7742') where: α7608' <: ((α7738',) -> α7740')}  <!<  ((α7730',) -> α7732')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7730',) -> α7732')
//│ ╟── while constraining:  α7608'  <!<  ((α7730',) -> α7732')
//│ ╟── while constraining:  {(α7735' -> α7734') where: α7608' <: ((α7730',) -> α7732')}  <!<  ((α7722',) -> α7724')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7722',) -> α7724')
//│ ╟── while constraining:  α7608'  <!<  ((α7722',) -> α7724')
//│ ╟── while constraining:  {(α7727' -> α7726') where: α7608' <: ((α7722',) -> α7724')}  <!<  ((α7714',) -> α7716')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7714',) -> α7716')
//│ ╟── while constraining:  α7608'  <!<  ((α7714',) -> α7716')
//│ ╟── while constraining:  {(α7719' -> α7718') where: α7608' <: ((α7714',) -> α7716')}  <!<  ((α7706',) -> α7708')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7706',) -> α7708')
//│ ╟── while constraining:  α7608'  <!<  ((α7706',) -> α7708')
//│ ╟── while constraining:  {(α7711' -> α7710') where: α7608' <: ((α7706',) -> α7708')}  <!<  ((α7698',) -> α7700')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7698',) -> α7700')
//│ ╟── while constraining:  α7608'  <!<  ((α7698',) -> α7700')
//│ ╟── while constraining:  {(α7703' -> α7702') where: α7608' <: ((α7698',) -> α7700')}  <!<  ((α7690',) -> α7692')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7690',) -> α7692')
//│ ╟── while constraining:  α7608'  <!<  ((α7690',) -> α7692')
//│ ╟── while constraining:  {(α7695' -> α7694') where: α7608' <: ((α7690',) -> α7692')}  <!<  ((α7682',) -> α7684')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7682',) -> α7684')
//│ ╟── while constraining:  α7608'  <!<  ((α7682',) -> α7684')
//│ ╟── while constraining:  {(α7687' -> α7686') where: α7608' <: ((α7682',) -> α7684')}  <!<  ((α7674',) -> α7676')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7674',) -> α7676')
//│ ╟── while constraining:  α7608'  <!<  ((α7674',) -> α7676')
//│ ╟── while constraining:  {(α7679' -> α7678') where: α7608' <: ((α7674',) -> α7676')}  <!<  ((α7666',) -> α7668')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7666',) -> α7668')
//│ ╟── while constraining:  α7608'  <!<  ((α7666',) -> α7668')
//│ ╟── while constraining:  {(α7671' -> α7670') where: α7608' <: ((α7666',) -> α7668')}  <!<  ((α7658',) -> α7660')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7658',) -> α7660')
//│ ╟── while constraining:  α7608'  <!<  ((α7658',) -> α7660')
//│ ╟── while constraining:  {(α7663' -> α7662') where: α7608' <: ((α7658',) -> α7660')}  <!<  ((α7650',) -> α7652')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7650',) -> α7652')
//│ ╟── while constraining:  α7608'  <!<  ((α7650',) -> α7652')
//│ ╟── while constraining:  {(α7655' -> α7654') where: α7608' <: ((α7650',) -> α7652')}  <!<  ((α7642',) -> α7644')
//│ ╟── while constraining:  ‹∀ 2. {(α7614''' -> α7613''') where: α7608' <: ((α7609''',) -> α7611''')}›  <!<  ((α7642',) -> α7644')
//│ ╟── while constraining:  α7608'  <!<  ((α7642',) -> α7644')
//│ ╟── while constraining:  {(α7647' -> α7646') where: α7608' <: ((α7642',) -> α7644')}  <!<  ((‹∀ 0. α7462'›,) -> α7641')
//│ ╟── while constraining:  ‹∀ 2. {(α7634''' -> α7633''') where: α7608' <: ((α7629''',) -> α7631''')}›  <!<  ((‹∀ 0. α7462'›,) -> α7641')
//│ ╙── while constraining:  α7597'  <!<  ((‹∀ 0. α7462'›,) -> α7641')
//│ test1: error

// let test2 = listiter (fun ex -> ex (fun t -> 
//   let arg1 = fst t
//   and arg2 = fst (snd t)
//   and eqf  = snd (snd t) in
//   let areequal = eqf arg1 arg2
//   in print_bool areequal )) ex_list2
// ;;
:e
:ng
test2 = listiter (fun ex -> ex (fun t ->
  let arg1 = t._1 in
  let arg2 = t._2 in
  let eqf = t._3 in
  let areequal = eqf arg1 arg2 in
  print_bool areequal )) ex_list2
//│ ╔══[ERROR] Subtyping constraint of the form `?a <: (forall ?c, ?d, ?e, ?f, ?g, ?h, ?i, ?j, ?b, ?b0, ?b1. ?i) -> ?k` exceeded recursion depth limit (400)
//│ ║  l.944: 	test2 = listiter (fun ex -> ex (fun t ->
//│ ║         	        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.945: 	  let arg1 = t._1 in
//│ ║         	^^^^^^^^^^^^^^^^^^^^
//│ ║  l.946: 	  let arg2 = t._2 in
//│ ║         	^^^^^^^^^^^^^^^^^^^^
//│ ║  l.947: 	  let eqf = t._3 in
//│ ║         	^^^^^^^^^^^^^^^^^^^
//│ ║  l.948: 	  let areequal = eqf arg1 arg2 in
//│ ║         	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.949: 	  print_bool areequal )) ex_list2
//│ ║         	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── while constraining:  {(α9004' -> α9003') where: α8333' <: ((α8999',) -> α9001')}  <!<  ((α8991',) -> α8993')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8991',) -> α8993')
//│ ╟── while constraining:  α8333'  <!<  ((α8991',) -> α8993')
//│ ╟── while constraining:  {(α8996' -> α8995') where: α8333' <: ((α8991',) -> α8993')}  <!<  ((α8983',) -> α8985')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8983',) -> α8985')
//│ ╟── while constraining:  α8333'  <!<  ((α8983',) -> α8985')
//│ ╟── while constraining:  {(α8988' -> α8987') where: α8333' <: ((α8983',) -> α8985')}  <!<  ((α8975',) -> α8977')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8975',) -> α8977')
//│ ╟── while constraining:  α8333'  <!<  ((α8975',) -> α8977')
//│ ╟── while constraining:  {(α8980' -> α8979') where: α8333' <: ((α8975',) -> α8977')}  <!<  ((α8967',) -> α8969')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8967',) -> α8969')
//│ ╟── while constraining:  α8333'  <!<  ((α8967',) -> α8969')
//│ ╟── while constraining:  {(α8972' -> α8971') where: α8333' <: ((α8967',) -> α8969')}  <!<  ((α8959',) -> α8961')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8959',) -> α8961')
//│ ╟── while constraining:  α8333'  <!<  ((α8959',) -> α8961')
//│ ╟── while constraining:  {(α8964' -> α8963') where: α8333' <: ((α8959',) -> α8961')}  <!<  ((α8951',) -> α8953')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8951',) -> α8953')
//│ ╟── while constraining:  α8333'  <!<  ((α8951',) -> α8953')
//│ ╟── while constraining:  {(α8956' -> α8955') where: α8333' <: ((α8951',) -> α8953')}  <!<  ((α8943',) -> α8945')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8943',) -> α8945')
//│ ╟── while constraining:  α8333'  <!<  ((α8943',) -> α8945')
//│ ╟── while constraining:  {(α8948' -> α8947') where: α8333' <: ((α8943',) -> α8945')}  <!<  ((α8935',) -> α8937')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8935',) -> α8937')
//│ ╟── while constraining:  α8333'  <!<  ((α8935',) -> α8937')
//│ ╟── while constraining:  {(α8940' -> α8939') where: α8333' <: ((α8935',) -> α8937')}  <!<  ((α8927',) -> α8929')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8927',) -> α8929')
//│ ╟── while constraining:  α8333'  <!<  ((α8927',) -> α8929')
//│ ╟── while constraining:  {(α8932' -> α8931') where: α8333' <: ((α8927',) -> α8929')}  <!<  ((α8919',) -> α8921')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8919',) -> α8921')
//│ ╟── while constraining:  α8333'  <!<  ((α8919',) -> α8921')
//│ ╟── while constraining:  {(α8924' -> α8923') where: α8333' <: ((α8919',) -> α8921')}  <!<  ((α8911',) -> α8913')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8911',) -> α8913')
//│ ╟── while constraining:  α8333'  <!<  ((α8911',) -> α8913')
//│ ╟── while constraining:  {(α8916' -> α8915') where: α8333' <: ((α8911',) -> α8913')}  <!<  ((α8903',) -> α8905')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8903',) -> α8905')
//│ ╟── while constraining:  α8333'  <!<  ((α8903',) -> α8905')
//│ ╟── while constraining:  {(α8908' -> α8907') where: α8333' <: ((α8903',) -> α8905')}  <!<  ((α8895',) -> α8897')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8895',) -> α8897')
//│ ╟── while constraining:  α8333'  <!<  ((α8895',) -> α8897')
//│ ╟── while constraining:  {(α8900' -> α8899') where: α8333' <: ((α8895',) -> α8897')}  <!<  ((α8887',) -> α8889')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8887',) -> α8889')
//│ ╟── while constraining:  α8333'  <!<  ((α8887',) -> α8889')
//│ ╟── while constraining:  {(α8892' -> α8891') where: α8333' <: ((α8887',) -> α8889')}  <!<  ((α8879',) -> α8881')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8879',) -> α8881')
//│ ╟── while constraining:  α8333'  <!<  ((α8879',) -> α8881')
//│ ╟── while constraining:  {(α8884' -> α8883') where: α8333' <: ((α8879',) -> α8881')}  <!<  ((α8871',) -> α8873')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8871',) -> α8873')
//│ ╟── while constraining:  α8333'  <!<  ((α8871',) -> α8873')
//│ ╟── while constraining:  {(α8876' -> α8875') where: α8333' <: ((α8871',) -> α8873')}  <!<  ((α8863',) -> α8865')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8863',) -> α8865')
//│ ╟── while constraining:  α8333'  <!<  ((α8863',) -> α8865')
//│ ╟── while constraining:  {(α8868' -> α8867') where: α8333' <: ((α8863',) -> α8865')}  <!<  ((α8855',) -> α8857')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8855',) -> α8857')
//│ ╟── while constraining:  α8333'  <!<  ((α8855',) -> α8857')
//│ ╟── while constraining:  {(α8860' -> α8859') where: α8333' <: ((α8855',) -> α8857')}  <!<  ((α8847',) -> α8849')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8847',) -> α8849')
//│ ╟── while constraining:  α8333'  <!<  ((α8847',) -> α8849')
//│ ╟── while constraining:  {(α8852' -> α8851') where: α8333' <: ((α8847',) -> α8849')}  <!<  ((α8839',) -> α8841')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8839',) -> α8841')
//│ ╟── while constraining:  α8333'  <!<  ((α8839',) -> α8841')
//│ ╟── while constraining:  {(α8844' -> α8843') where: α8333' <: ((α8839',) -> α8841')}  <!<  ((α8831',) -> α8833')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8831',) -> α8833')
//│ ╟── while constraining:  α8333'  <!<  ((α8831',) -> α8833')
//│ ╟── while constraining:  {(α8836' -> α8835') where: α8333' <: ((α8831',) -> α8833')}  <!<  ((α8823',) -> α8825')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8823',) -> α8825')
//│ ╟── while constraining:  α8333'  <!<  ((α8823',) -> α8825')
//│ ╟── while constraining:  {(α8828' -> α8827') where: α8333' <: ((α8823',) -> α8825')}  <!<  ((α8815',) -> α8817')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8815',) -> α8817')
//│ ╟── while constraining:  α8333'  <!<  ((α8815',) -> α8817')
//│ ╟── while constraining:  {(α8820' -> α8819') where: α8333' <: ((α8815',) -> α8817')}  <!<  ((α8807',) -> α8809')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8807',) -> α8809')
//│ ╟── while constraining:  α8333'  <!<  ((α8807',) -> α8809')
//│ ╟── while constraining:  {(α8812' -> α8811') where: α8333' <: ((α8807',) -> α8809')}  <!<  ((α8799',) -> α8801')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8799',) -> α8801')
//│ ╟── while constraining:  α8333'  <!<  ((α8799',) -> α8801')
//│ ╟── while constraining:  {(α8804' -> α8803') where: α8333' <: ((α8799',) -> α8801')}  <!<  ((α8791',) -> α8793')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8791',) -> α8793')
//│ ╟── while constraining:  α8333'  <!<  ((α8791',) -> α8793')
//│ ╟── while constraining:  {(α8796' -> α8795') where: α8333' <: ((α8791',) -> α8793')}  <!<  ((α8783',) -> α8785')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8783',) -> α8785')
//│ ╟── while constraining:  α8333'  <!<  ((α8783',) -> α8785')
//│ ╟── while constraining:  {(α8788' -> α8787') where: α8333' <: ((α8783',) -> α8785')}  <!<  ((α8775',) -> α8777')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8775',) -> α8777')
//│ ╟── while constraining:  α8333'  <!<  ((α8775',) -> α8777')
//│ ╟── while constraining:  {(α8780' -> α8779') where: α8333' <: ((α8775',) -> α8777')}  <!<  ((α8767',) -> α8769')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8767',) -> α8769')
//│ ╟── while constraining:  α8333'  <!<  ((α8767',) -> α8769')
//│ ╟── while constraining:  {(α8772' -> α8771') where: α8333' <: ((α8767',) -> α8769')}  <!<  ((α8759',) -> α8761')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8759',) -> α8761')
//│ ╟── while constraining:  α8333'  <!<  ((α8759',) -> α8761')
//│ ╟── while constraining:  {(α8764' -> α8763') where: α8333' <: ((α8759',) -> α8761')}  <!<  ((α8751',) -> α8753')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8751',) -> α8753')
//│ ╟── while constraining:  α8333'  <!<  ((α8751',) -> α8753')
//│ ╟── while constraining:  {(α8756' -> α8755') where: α8333' <: ((α8751',) -> α8753')}  <!<  ((α8743',) -> α8745')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8743',) -> α8745')
//│ ╟── while constraining:  α8333'  <!<  ((α8743',) -> α8745')
//│ ╟── while constraining:  {(α8748' -> α8747') where: α8333' <: ((α8743',) -> α8745')}  <!<  ((α8735',) -> α8737')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8735',) -> α8737')
//│ ╟── while constraining:  α8333'  <!<  ((α8735',) -> α8737')
//│ ╟── while constraining:  {(α8740' -> α8739') where: α8333' <: ((α8735',) -> α8737')}  <!<  ((α8727',) -> α8729')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8727',) -> α8729')
//│ ╟── while constraining:  α8333'  <!<  ((α8727',) -> α8729')
//│ ╟── while constraining:  {(α8732' -> α8731') where: α8333' <: ((α8727',) -> α8729')}  <!<  ((α8719',) -> α8721')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8719',) -> α8721')
//│ ╟── while constraining:  α8333'  <!<  ((α8719',) -> α8721')
//│ ╟── while constraining:  {(α8724' -> α8723') where: α8333' <: ((α8719',) -> α8721')}  <!<  ((α8711',) -> α8713')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8711',) -> α8713')
//│ ╟── while constraining:  α8333'  <!<  ((α8711',) -> α8713')
//│ ╟── while constraining:  {(α8716' -> α8715') where: α8333' <: ((α8711',) -> α8713')}  <!<  ((α8703',) -> α8705')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8703',) -> α8705')
//│ ╟── while constraining:  α8333'  <!<  ((α8703',) -> α8705')
//│ ╟── while constraining:  {(α8708' -> α8707') where: α8333' <: ((α8703',) -> α8705')}  <!<  ((α8695',) -> α8697')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8695',) -> α8697')
//│ ╟── while constraining:  α8333'  <!<  ((α8695',) -> α8697')
//│ ╟── while constraining:  {(α8700' -> α8699') where: α8333' <: ((α8695',) -> α8697')}  <!<  ((α8687',) -> α8689')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8687',) -> α8689')
//│ ╟── while constraining:  α8333'  <!<  ((α8687',) -> α8689')
//│ ╟── while constraining:  {(α8692' -> α8691') where: α8333' <: ((α8687',) -> α8689')}  <!<  ((α8679',) -> α8681')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8679',) -> α8681')
//│ ╟── while constraining:  α8333'  <!<  ((α8679',) -> α8681')
//│ ╟── while constraining:  {(α8684' -> α8683') where: α8333' <: ((α8679',) -> α8681')}  <!<  ((α8671',) -> α8673')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8671',) -> α8673')
//│ ╟── while constraining:  α8333'  <!<  ((α8671',) -> α8673')
//│ ╟── while constraining:  {(α8676' -> α8675') where: α8333' <: ((α8671',) -> α8673')}  <!<  ((α8663',) -> α8665')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8663',) -> α8665')
//│ ╟── while constraining:  α8333'  <!<  ((α8663',) -> α8665')
//│ ╟── while constraining:  {(α8668' -> α8667') where: α8333' <: ((α8663',) -> α8665')}  <!<  ((α8655',) -> α8657')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8655',) -> α8657')
//│ ╟── while constraining:  α8333'  <!<  ((α8655',) -> α8657')
//│ ╟── while constraining:  {(α8660' -> α8659') where: α8333' <: ((α8655',) -> α8657')}  <!<  ((α8647',) -> α8649')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8647',) -> α8649')
//│ ╟── while constraining:  α8333'  <!<  ((α8647',) -> α8649')
//│ ╟── while constraining:  {(α8652' -> α8651') where: α8333' <: ((α8647',) -> α8649')}  <!<  ((α8639',) -> α8641')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8639',) -> α8641')
//│ ╟── while constraining:  α8333'  <!<  ((α8639',) -> α8641')
//│ ╟── while constraining:  {(α8644' -> α8643') where: α8333' <: ((α8639',) -> α8641')}  <!<  ((α8631',) -> α8633')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8631',) -> α8633')
//│ ╟── while constraining:  α8333'  <!<  ((α8631',) -> α8633')
//│ ╟── while constraining:  {(α8636' -> α8635') where: α8333' <: ((α8631',) -> α8633')}  <!<  ((α8623',) -> α8625')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8623',) -> α8625')
//│ ╟── while constraining:  α8333'  <!<  ((α8623',) -> α8625')
//│ ╟── while constraining:  {(α8628' -> α8627') where: α8333' <: ((α8623',) -> α8625')}  <!<  ((α8615',) -> α8617')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8615',) -> α8617')
//│ ╟── while constraining:  α8333'  <!<  ((α8615',) -> α8617')
//│ ╟── while constraining:  {(α8620' -> α8619') where: α8333' <: ((α8615',) -> α8617')}  <!<  ((α8607',) -> α8609')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8607',) -> α8609')
//│ ╟── while constraining:  α8333'  <!<  ((α8607',) -> α8609')
//│ ╟── while constraining:  {(α8612' -> α8611') where: α8333' <: ((α8607',) -> α8609')}  <!<  ((α8599',) -> α8601')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8599',) -> α8601')
//│ ╟── while constraining:  α8333'  <!<  ((α8599',) -> α8601')
//│ ╟── while constraining:  {(α8604' -> α8603') where: α8333' <: ((α8599',) -> α8601')}  <!<  ((α8591',) -> α8593')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8591',) -> α8593')
//│ ╟── while constraining:  α8333'  <!<  ((α8591',) -> α8593')
//│ ╟── while constraining:  {(α8596' -> α8595') where: α8333' <: ((α8591',) -> α8593')}  <!<  ((α8583',) -> α8585')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8583',) -> α8585')
//│ ╟── while constraining:  α8333'  <!<  ((α8583',) -> α8585')
//│ ╟── while constraining:  {(α8588' -> α8587') where: α8333' <: ((α8583',) -> α8585')}  <!<  ((α8575',) -> α8577')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8575',) -> α8577')
//│ ╟── while constraining:  α8333'  <!<  ((α8575',) -> α8577')
//│ ╟── while constraining:  {(α8580' -> α8579') where: α8333' <: ((α8575',) -> α8577')}  <!<  ((α8567',) -> α8569')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8567',) -> α8569')
//│ ╟── while constraining:  α8333'  <!<  ((α8567',) -> α8569')
//│ ╟── while constraining:  {(α8572' -> α8571') where: α8333' <: ((α8567',) -> α8569')}  <!<  ((α8559',) -> α8561')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8559',) -> α8561')
//│ ╟── while constraining:  α8333'  <!<  ((α8559',) -> α8561')
//│ ╟── while constraining:  {(α8564' -> α8563') where: α8333' <: ((α8559',) -> α8561')}  <!<  ((α8551',) -> α8553')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8551',) -> α8553')
//│ ╟── while constraining:  α8333'  <!<  ((α8551',) -> α8553')
//│ ╟── while constraining:  {(α8556' -> α8555') where: α8333' <: ((α8551',) -> α8553')}  <!<  ((α8543',) -> α8545')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8543',) -> α8545')
//│ ╟── while constraining:  α8333'  <!<  ((α8543',) -> α8545')
//│ ╟── while constraining:  {(α8548' -> α8547') where: α8333' <: ((α8543',) -> α8545')}  <!<  ((α8535',) -> α8537')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8535',) -> α8537')
//│ ╟── while constraining:  α8333'  <!<  ((α8535',) -> α8537')
//│ ╟── while constraining:  {(α8540' -> α8539') where: α8333' <: ((α8535',) -> α8537')}  <!<  ((α8527',) -> α8529')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8527',) -> α8529')
//│ ╟── while constraining:  α8333'  <!<  ((α8527',) -> α8529')
//│ ╟── while constraining:  {(α8532' -> α8531') where: α8333' <: ((α8527',) -> α8529')}  <!<  ((α8519',) -> α8521')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8519',) -> α8521')
//│ ╟── while constraining:  α8333'  <!<  ((α8519',) -> α8521')
//│ ╟── while constraining:  {(α8524' -> α8523') where: α8333' <: ((α8519',) -> α8521')}  <!<  ((α8511',) -> α8513')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8511',) -> α8513')
//│ ╟── while constraining:  α8333'  <!<  ((α8511',) -> α8513')
//│ ╟── while constraining:  {(α8516' -> α8515') where: α8333' <: ((α8511',) -> α8513')}  <!<  ((α8503',) -> α8505')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8503',) -> α8505')
//│ ╟── while constraining:  α8333'  <!<  ((α8503',) -> α8505')
//│ ╟── while constraining:  {(α8508' -> α8507') where: α8333' <: ((α8503',) -> α8505')}  <!<  ((α8495',) -> α8497')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8495',) -> α8497')
//│ ╟── while constraining:  α8333'  <!<  ((α8495',) -> α8497')
//│ ╟── while constraining:  {(α8500' -> α8499') where: α8333' <: ((α8495',) -> α8497')}  <!<  ((α8487',) -> α8489')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8487',) -> α8489')
//│ ╟── while constraining:  α8333'  <!<  ((α8487',) -> α8489')
//│ ╟── while constraining:  {(α8492' -> α8491') where: α8333' <: ((α8487',) -> α8489')}  <!<  ((α8479',) -> α8481')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8479',) -> α8481')
//│ ╟── while constraining:  α8333'  <!<  ((α8479',) -> α8481')
//│ ╟── while constraining:  {(α8484' -> α8483') where: α8333' <: ((α8479',) -> α8481')}  <!<  ((α8471',) -> α8473')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8471',) -> α8473')
//│ ╟── while constraining:  α8333'  <!<  ((α8471',) -> α8473')
//│ ╟── while constraining:  {(α8476' -> α8475') where: α8333' <: ((α8471',) -> α8473')}  <!<  ((α8463',) -> α8465')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8463',) -> α8465')
//│ ╟── while constraining:  α8333'  <!<  ((α8463',) -> α8465')
//│ ╟── while constraining:  {(α8468' -> α8467') where: α8333' <: ((α8463',) -> α8465')}  <!<  ((α8455',) -> α8457')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8455',) -> α8457')
//│ ╟── while constraining:  α8333'  <!<  ((α8455',) -> α8457')
//│ ╟── while constraining:  {(α8460' -> α8459') where: α8333' <: ((α8455',) -> α8457')}  <!<  ((α8447',) -> α8449')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8447',) -> α8449')
//│ ╟── while constraining:  α8333'  <!<  ((α8447',) -> α8449')
//│ ╟── while constraining:  {(α8452' -> α8451') where: α8333' <: ((α8447',) -> α8449')}  <!<  ((α8439',) -> α8441')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8439',) -> α8441')
//│ ╟── while constraining:  α8333'  <!<  ((α8439',) -> α8441')
//│ ╟── while constraining:  {(α8444' -> α8443') where: α8333' <: ((α8439',) -> α8441')}  <!<  ((α8431',) -> α8433')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8431',) -> α8433')
//│ ╟── while constraining:  α8333'  <!<  ((α8431',) -> α8433')
//│ ╟── while constraining:  {(α8436' -> α8435') where: α8333' <: ((α8431',) -> α8433')}  <!<  ((α8423',) -> α8425')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8423',) -> α8425')
//│ ╟── while constraining:  α8333'  <!<  ((α8423',) -> α8425')
//│ ╟── while constraining:  {(α8428' -> α8427') where: α8333' <: ((α8423',) -> α8425')}  <!<  ((α8415',) -> α8417')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8415',) -> α8417')
//│ ╟── while constraining:  α8333'  <!<  ((α8415',) -> α8417')
//│ ╟── while constraining:  {(α8420' -> α8419') where: α8333' <: ((α8415',) -> α8417')}  <!<  ((α8407',) -> α8409')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8407',) -> α8409')
//│ ╟── while constraining:  α8333'  <!<  ((α8407',) -> α8409')
//│ ╟── while constraining:  {(α8412' -> α8411') where: α8333' <: ((α8407',) -> α8409')}  <!<  ((α8399',) -> α8401')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8399',) -> α8401')
//│ ╟── while constraining:  α8333'  <!<  ((α8399',) -> α8401')
//│ ╟── while constraining:  {(α8404' -> α8403') where: α8333' <: ((α8399',) -> α8401')}  <!<  ((α8391',) -> α8393')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8391',) -> α8393')
//│ ╟── while constraining:  α8333'  <!<  ((α8391',) -> α8393')
//│ ╟── while constraining:  {(α8396' -> α8395') where: α8333' <: ((α8391',) -> α8393')}  <!<  ((α8383',) -> α8385')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8383',) -> α8385')
//│ ╟── while constraining:  α8333'  <!<  ((α8383',) -> α8385')
//│ ╟── while constraining:  {(α8388' -> α8387') where: α8333' <: ((α8383',) -> α8385')}  <!<  ((α8375',) -> α8377')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8375',) -> α8377')
//│ ╟── while constraining:  α8333'  <!<  ((α8375',) -> α8377')
//│ ╟── while constraining:  {(α8380' -> α8379') where: α8333' <: ((α8375',) -> α8377')}  <!<  ((α8367',) -> α8369')
//│ ╟── while constraining:  ‹∀ 2. {(α8339''' -> α8338''') where: α8333' <: ((α8334''',) -> α8336''')}›  <!<  ((α8367',) -> α8369')
//│ ╟── while constraining:  α8333'  <!<  ((α8367',) -> α8369')
//│ ╟── while constraining:  {(α8372' -> α8371') where: α8333' <: ((α8367',) -> α8369')}  <!<  ((‹∀ 0. α7542'›,) -> α8366')
//│ ╟── while constraining:  ‹∀ 2. {(α8359''' -> α8358''') where: α8333' <: ((α8354''',) -> α8356''')}›  <!<  ((‹∀ 0. α7542'›,) -> α8366')
//│ ╙── while constraining:  α8322'  <!<  ((‹∀ 0. α7542'›,) -> α8366')
//│ test2: error


// (* Some examples for MLF inspired by standard encoding in System F. *)

// type Void   = ['x] 'x
// type Unit   = ['x] 'x -> 'x
// type Int    = ['x] ('x -> 'x) -> ('x -> 'x)
// type Bool   = ['x] (Unit -> 'x) -> (Unit -> 'x) -> 'x 
type Fvoid = forall 'a. 'a
type Funit = forall 'a. 'a -> 'a
type Fint  = forall 'a. ('a -> 'a) -> ('a -> 'a)
type Fbool = forall 'a. (Funit -> 'a) -> (Funit -> 'a) -> 'a
//│ Defined type alias Fvoid
//│ Defined type alias Funit
//│ Defined type alias Fint
//│ Defined type alias Fbool

// type Sum    = ['x] (Int -> 'x) -> (Int -> 'x) -> 'x
// type Pair   = ['x] (Int -> Int -> 'x) -> 'x
// type Triple = ['x] (Int -> Int -> Int -> 'x) -> 'x
type Sum    = forall 'a. (Fint -> 'a) -> (Fint -> 'a) -> 'a
type Pair   = forall 'a. (Fint -> Fint -> 'a) -> 'a
type Triple = forall 'a. (Fint -> Fint -> Fint -> 'a) -> 'a
//│ Defined type alias Sum
//│ Defined type alias Pair
//│ Defined type alias Triple

// (* Unit *)
// let c_unit = fun x -> x
def c_unit = fun x -> x
//│ c_unit: 'a -> 'a
//│       = [Function: c_unit]


// (* BOOLEANS, IFS, AND, OR, NOT. *)
// let c_true  = fun a b -> a c_unit
def c_true = fun a -> fun b -> a c_unit
//│ c_true: 'a -> (forall 'a. ('a -> 'b
//│   where
//│     'a <: (forall 'c. 'c -> 'c) -> 'b))
//│       = [Function: c_true]

// let c_false = fun a b -> b c_unit
def c_false = fun a -> fun b -> b c_unit
//│ c_false: anything -> ((forall 'a. 'a -> 'a) -> 'b) -> 'b
//│        = [Function: c_false]

// let c_if (cond:Bool) c_then c_else = cond c_then c_else 
def c_if (cond: Fbool) c_then c_else = cond c_then c_else
def c_if' cond c_then c_else = cond c_then c_else
//│ c_if: Fbool -> (forall 'a. 'a -> (forall 'a, 'b, 'c, 'd. ('c -> 'd
//│   where
//│     'b <: 'a -> 'c -> 'd)))
//│     = [Function: c_if]
//│ c_if': 'a -> (forall 'b. 'b -> (forall 'a, 'b, 'c, 'd. ('c -> 'd
//│   where
//│     'a <: 'b -> 'c -> 'd)))
//│      = [Function: c_if]

// let c_and (a:Bool) (b:Bool) = c_if a (fun z -> b) (fun z -> c_false)
def c_and (a: Fbool) (b: Fbool) = c_if a (fun z -> b) (fun z -> c_false)
def c_and' a b = c_if a (fun z -> b) (fun z -> c_false)
//│ c_and: Fbool -> Fbool -> (anything -> ((forall 'a. 'a -> 'a) -> 'b) -> 'b | Fbool)
//│      = [Function: c_and]
//│ c_and': Fbool -> (forall 'a. 'a -> (anything -> ((forall 'b. 'b -> 'b) -> 'c) -> 'c | 'a))
//│       = [Function: c_and]

// let c_or  (a:Bool) (b:Bool) = c_if a (fun z -> c_true) (fun z -> b)
def c_or (a: Fbool) (b: Fbool) = c_if a (fun z -> c_true) (fun z -> b)
def c_or' a b = c_if a (fun z -> c_true) (fun z -> b)
//│ c_or: Fbool -> Fbool -> (forall 'a. 'a -> (forall 'a. ('a -> 'b
//│   where
//│     'a <: (forall 'c. 'c -> 'c) -> 'b)) | Fbool)
//│     = [Function: c_or]
//│ c_or': Fbool -> (forall 'a. 'a -> (forall 'b. 'b -> (forall 'b. ('b -> 'c
//│   where
//│     'b <: (forall 'd. 'd -> 'd) -> 'c)) | 'a))
//│      = [Function: c_or]

// let c_not (a:Bool) = c_if a (fun z -> c_false) (fun z -> c_true)
def c_not (a: Fbool) = c_if a (fun z -> c_false) (fun z -> c_true)
def c_not' a = c_if a (fun z -> c_false) (fun z -> c_true)
//│ c_not: Fbool -> (forall 'a. 'a -> (forall 'a. (((forall 'b. 'b -> 'b) -> 'c) -> 'c
//│   where
//│     'a <: (forall 'b. 'b -> 'b) -> 'c)))
//│      = [Function: c_not]
//│ c_not': Fbool -> (forall 'a. 'a -> (forall 'a. (((forall 'b. 'b -> 'b) -> 'c) -> 'c
//│   where
//│     'a <: (forall 'b. 'b -> 'b) -> 'c)))
//│       = [Function: c_not]

// let c_or = (c_or : Bool -> Bool -> Bool)
def c_or2 = c_or : Fbool -> Fbool -> Fbool
def c_or2' = c_or' : Fbool -> Fbool -> Fbool
//│ c_or2: Fbool -> Fbool -> Fbool
//│      = [Function: c_or]
//│ c_or2': Fbool -> Fbool -> Fbool
//│       = [Function: c_or]


// (* CONSTRUCTORS FOR PAIRS ET TRIPLES. *)
// let c_pair x y   = fun f -> f x y
def c_pair x y = fun f -> f x y
//│ c_pair: 'a -> (forall 'b. 'b -> (forall 'c. ('a -> 'b -> 'c) -> 'c))
//│       = [Function: c_pair]

// let c_trip x y z = fun f -> f x y z
def c_trip x y z = fun f -> f x y z
//│ c_trip: 'a -> (forall 'b. 'b -> (forall 'c. 'c -> (forall 'd. ('a -> 'b -> 'c -> 'd) -> 'd)))
//│       = [Function: c_trip]


// (* PROJECTIONS FOR PRODUCTS. *)
// let c_1_2 (p:Pair) = p (fun x y -> x) 
def c_1_2 (p: Pair) = p (fun x -> fun y -> x)
def c_1_2' p = p (fun x -> fun y -> x)
//│ c_1_2: Pair -> Fint
//│      = [Function: c_1_2]
//│ c_1_2': ((forall 'a. 'a -> anything -> 'a) -> 'b) -> 'b
//│       = [Function: c_1_2]

// let c_2_2 (p:Pair) = p (fun x y -> y) 
def c_2_2 (t: Pair) = t (fun x -> fun y -> y)
def c_2_2' t = t (fun x -> fun y -> y)
//│ c_2_2: Pair -> Fint
//│      = [Function: c_2_2]
//│ c_2_2': ((anything -> (forall 'a. 'a -> 'a)) -> 'b) -> 'b
//│       = [Function: c_2_2]

// let c_1_3 (t:Triple) = t (fun x y z -> x)
def c_1_3 (t: Triple) = t (fun x -> fun y -> fun z -> x)
def c_1_3' t = t (fun x -> fun y -> fun z -> x)
//│ c_1_3: Triple -> Fint
//│      = [Function: c_1_3]
//│ c_1_3': ((forall 'a. 'a -> anything -> anything -> 'a) -> 'b) -> 'b
//│       = [Function: c_1_3]

// let c_2_3 (t:Triple) = t (fun x y z -> y) 
def c_2_3 (t: Triple) = t (fun x -> fun y -> fun z -> y)
def c_2_3' t = t (fun x -> fun y -> fun z -> y)
//│ c_2_3: Triple -> Fint
//│      = [Function: c_2_3]
//│ c_2_3': ((anything -> (forall 'a. 'a -> anything -> 'a)) -> 'b) -> 'b
//│       = [Function: c_2_3]

// let c_3_3 (t:Triple) = t (fun x y z -> z) 
def c_3_3 (t: Triple) = t (fun x -> fun y -> fun z -> z)
def c_3_3' t = t (fun x -> fun y -> fun z -> z)
//│ c_3_3: Triple -> Fint
//│      = [Function: c_3_3]
//│ c_3_3': ((anything -> anything -> (forall 'a. 'a -> 'a)) -> 'b) -> 'b
//│       = [Function: c_3_3]


// (* CONSTRUCTOR FOR A BINARY SUM. *)
// let c_sumg = fun x fg fd -> fg x
def c_sumg = fun x -> fun fg -> fun fd -> fg x
//│ c_sumg: 'a -> (forall 'b. 'b -> (forall 'a, 'b, 'c. ('b -> 'c
//│   where
//│     'b <: 'a -> 'c)))
//│       = [Function: c_sumg]

// let c_sumd = fun x fg fd -> fd x
def c_sumd = fun x -> fun fg -> fun fd -> fd x
//│ c_sumd: 'a -> anything -> (forall 'b. ('a -> 'b) -> 'b)
//│       = [Function: c_sumd]


// (* CASE FOR A SUM. *)
// let c_case (s:Sum) g d = s g d
def c_case (s: Sum) g d = s g d
def c_case' s g d = s g d
//│ c_case: Sum -> (forall 'a. 'a -> (forall 'a, 'b, 'c, 'd. ('c -> 'd
//│   where
//│     'b <: 'a -> 'c -> 'd)))
//│       = [Function: c_case]
//│ c_case': 'a -> (forall 'b. 'b -> (forall 'a, 'b, 'c, 'd. ('c -> 'd
//│   where
//│     'a <: 'b -> 'c -> 'd)))
//│        = [Function: c_case]


// (* Integers. *)
// let c_i0 = fun f x ->   x
def c_i0 = fun f -> fun x -> x
//│ c_i0: anything -> (forall 'a. 'a -> 'a)
//│     = [Function: c_i0]

// let c_i1 = fun f x -> f x
def c_i1 = fun f -> fun x -> f x
//│ c_i1: 'a -> (forall 'a, 'b, 'c. ('b -> 'c
//│   where
//│     'a <: 'b -> 'c))
//│     = [Function: c_i1]

// let c_i2 = fun f x -> f (f x)
def c_i2 = fun f -> fun x -> f (f x)
//│ c_i2: 'a -> (forall 'a, 'b, 'c, 'd. ('b -> 'd
//│   where
//│     'a <: 'b -> 'c & 'c -> 'd))
//│     = [Function: c_i2]

// let c_succ (n:Int) = fun f x -> n f (f x)
def c_succ (n: Fint) = fun f -> fun x -> n f (f x)
def c_succ' n = fun f -> fun x -> n f (f x)
//│ c_succ: Fint -> (forall 'a. 'a -> (forall 'a, 'b, 'c, 'd, 'e. ('b -> 'e
//│   where
//│     'a <: 'b -> 'c
//│     'd <: 'a -> 'c -> 'e)))
//│       = [Function: c_succ]
//│ c_succ': 'a -> (forall 'b. 'b -> (forall 'a, 'b, 'c, 'd, 'e. ('e -> 'd
//│   where
//│     'a <: 'b -> 'c -> 'd
//│     'b <: 'e -> 'c)))
//│        = [Function: c_succ]

// let c_iszero (n:Int) = n (fun x -> c_false) c_true
def c_iszero (n: Fint) = n (fun x -> c_false) c_true
def c_iszero' n = n (fun x -> c_false) c_true
//│ c_iszero: Fint -> (forall 'a. 'a -> (forall 'a. (((forall 'b. 'b -> 'b) -> 'c) -> 'c
//│   where
//│     'a <: (forall 'b. 'b -> 'b) -> 'c)))
//│         = [Function: c_iszero]
//│ c_iszero': (('a -> 'a -> ((forall 'b. 'b -> 'b) -> 'c) -> 'c) -> (forall 'a. 'a -> (forall 'a. ('a -> 'd
//│   where
//│     'a <: (forall 'b. 'b -> 'b) -> 'd))) -> 'e) -> 'e
//│          = [Function: c_iszero]

// let c_add n (m:Int) = m c_succ n
def c_add n (m: Fint) = m c_succ n
def c_add' n m = m c_succ' n
//│ c_add: (Fint & 'a) -> Fint -> (forall 'b. 'b -> (forall 'b, 'c, 'd, 'e, 'f. ('c -> 'f
//│   where
//│     'b <: 'c -> 'd
//│     'e <: 'b -> 'd -> 'f)) | 'a)
//│      = [Function: c_add]
//│ c_add': 'a -> ((forall 'b. 'b -> (forall 'c. 'c -> (forall 'b, 'c, 'd, 'e, 'f. ('f -> 'e
//│   where
//│     'b <: 'c -> 'd -> 'e
//│     'c <: 'f -> 'd)))) -> 'a -> 'g) -> 'g
//│       = [Function: c_add]

// let c_mul n (m:Int) = m (c_add n) c_i0
def c_mul m (n: Fint) = m (c_add n) c_i0
def c_mul' m n = m (c_add' n) c_i0
//│ c_mul: 'a -> (forall 'a. (Fint -> 'b
//│   where
//│     'a <: (Fint -> (forall 'c. 'c -> (forall 'c, 'd, 'e, 'f, 'g. ('d -> 'g
//│   where
//│     'c <: 'd -> 'e
//│     'f <: 'c -> 'e -> 'g)) | Fint)) -> ('a -> (forall 'h. 'h -> 'h)) -> 'b))
//│      = [Function: c_mul]
//│ c_mul': 'a -> (forall 'a. ('b -> 'c
//│   where
//│     'a <: (((forall 'd. 'd -> (forall 'e. 'e -> (forall 'd, 'e, 'f, 'g, 'h. ('h -> 'g
//│   where
//│     'd <: 'e -> 'f -> 'g
//│     'e <: 'h -> 'f)))) -> 'b -> 'i) -> 'i) -> ('d -> (forall 'j. 'j -> 'j)) -> 'c))
//│       = [Function: c_mul]

// let c_pow n (m:Int) = m (c_mul n) c_i1
def c_pow m (n: Fint) = m (c_mul n) c_i1
def c_pow' m n = m (c_mul' n) c_i1
//│ c_pow: 'a -> (forall 'a. (Fint -> 'b
//│   where
//│     'a <: (forall 'c. (Fint -> 'd
//│   where
//│     'c <: (Fint -> (forall 'e. 'e -> (forall 'e, 'f, 'g, 'h, 'i. ('f -> 'i
//│   where
//│     'e <: 'f -> 'g
//│     'h <: 'e -> 'g -> 'i)) | Fint)) -> ('j -> (forall 'k. 'k -> 'k)) -> 'd)) -> (forall 'j. 'j -> (forall 'j, 'l, 'm. ('l -> 'm
//│   where
//│     'j <: 'l -> 'm))) -> 'b))
//│      = [Function: c_pow]
//│ c_pow': 'a -> (forall 'a. ('b -> 'c
//│   where
//│     'a <: (forall 'b. ('d -> 'e
//│   where
//│     'b <: (((forall 'f. 'f -> (forall 'g. 'g -> (forall 'f, 'g, 'h, 'i, 'j. ('j -> 'i
//│   where
//│     'f <: 'g -> 'h -> 'i
//│     'g <: 'j -> 'h)))) -> nothing -> 'k) -> 'k) -> ('d -> (forall 'l. 'l -> 'l)) -> 'e)) -> (forall 'd. 'd -> (forall 'd, 'm, 'n. ('m -> 'n
//│   where
//│     'd <: 'm -> 'n))) -> 'c))
//│       = [Function: c_pow]


// let c_pred (n:Int) =
//    let s p = c_pair (c_2_2 p) (c_succ (c_2_2 p))
//   and z = c_pair c_i0 c_i0 in
//   c_1_2 (n s z)
def c_pred (n: Fint) =
  let s = fun p -> c_pair (c_2_2 p) (c_succ (c_2_2 p)) in
  let z = c_pair c_i0 c_i0 in
  c_1_2 (n s z)
def c_pred' n =
  let s = fun p -> c_pair (c_2_2' p) (c_succ' (c_2_2' p)) in
  let z = c_pair c_i0 c_i0 in
  c_1_2' (n s z)
//│ c_pred: Fint -> Fint
//│       = [Function: c_pred]
//│ c_pred': ((forall 'a. (('a -> (forall 'b. 'b -> 'b)) -> 'a) -> (nothing -> (forall 'c. 'c -> (forall 'a, 'c, 'd, 'e, 'f. ('f -> 'e
//│   where
//│     'a <: 'c -> 'd -> 'e
//│     'c <: 'f -> 'd))) -> 'g) -> 'g) -> (forall 'a. (('a -> (forall 'h. 'h -> 'h)) -> ('a -> (forall 'h. 'h -> 'h)) -> 'i) -> 'i) -> (forall 'a, 'j. 'j -> 'a -> 'j) -> 'k) -> 'k
//│        = [Function: c_pred]


// let c_printint (n:Int) = print_int (n (fun x -> x+1) 0); print " "
:ng
def c_printint (n: Fint) =
  let _ = print_int (n (fun x -> x + 1) 0) in
  print_string " "
def c_printint' n =
  let _ = print_int (n (fun x -> x + 1) 0) in
  print_string " "
//│ c_printint: Fint -> unit
//│ c_printint': ((int -> int) -> 0 -> int) -> unit

def c_printint2 (n: Fint) = toString (n (fun x -> x + 1) 0)
def c_printint2' n = toString (n (fun x -> x + 1) 0)
//│ c_printint2: Fint -> string
//│            = [Function: c_printint2]
//│ c_printint2': ((int -> int) -> 0 -> anything) -> string
//│             = [Function: c_printint2]

// let c_i2 = c_succ c_i1
def c_i2 = c_succ c_i1
def c_i2' = c_succ' c_i1
//│ c_i2: 'a -> (forall 'a, 'b, 'c, 'd, 'e. ('b -> 'e
//│   where
//│     'a <: 'b -> 'c
//│     'd <: 'a -> 'c -> 'e))
//│     = [Function (anonymous)]
//│ c_i2': 'a -> (forall 'a, 'b, 'c, 'd, 'e. ('e -> 'd
//│   where
//│     'b <: 'a -> 'c -> 'd
//│     'a <: 'e -> 'c))
//│      = [Function (anonymous)]

// let c_i3 = c_succ c_i2
def c_i3 = c_succ c_i2
def c_i3' = c_succ' c_i2
//│ c_i3: 'a -> (forall 'a, 'b, 'c, 'd, 'e. ('b -> 'e
//│   where
//│     'a <: 'b -> 'c
//│     'd <: 'a -> 'c -> 'e))
//│     = [Function (anonymous)]
//│ c_i3': 'a -> (forall 'a, 'b, 'c, 'd, 'e. ('e -> 'd
//│   where
//│     'b <: 'a -> 'c -> 'd
//│     'a <: 'e -> 'c))
//│      = [Function (anonymous)]

// let c_i4 = c_succ c_i3
def c_i4 = c_succ c_i3
def c_i4' = c_succ' c_i3
//│ c_i4: 'a -> (forall 'a, 'b, 'c, 'd, 'e. ('b -> 'e
//│   where
//│     'a <: 'b -> 'c
//│     'd <: 'a -> 'c -> 'e))
//│     = [Function (anonymous)]
//│ c_i4': 'a -> (forall 'a, 'b, 'c, 'd, 'e. ('e -> 'd
//│   where
//│     'b <: 'a -> 'c -> 'd
//│     'a <: 'e -> 'c))
//│      = [Function (anonymous)]


// (* Fails with value restriction. *)
// (* Passes with relaxed value restriction. *)
// let rec (to_church:int -> Int) n =
//   if n = 0 then fun f x -> x
//   else fun f x -> f ((to_church (n-1)) f x)
// FIXME: see to_church4 in ex_casparticuliers
def to_church: int -> Fint
rec def to_church n =
  if n == 0 then fun f -> fun x -> x
  else fun f -> fun x -> f ((to_church (n - 1)) f x)
//│ to_church: int -> Fint
//│          = <missing implementation>
//│ int -> (forall 'a. 'a -> (forall 'a, 'b, 'c, 'd, 'e. (('c & 'e) -> 'c
//│   where
//│     'a <: 'b -> 'c
//│     'd <: 'a -> 'e -> 'b)))
//│   <:  to_church:
//│ int -> Fint
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?a, ?to_church, ?b, ?c, ?d. ?to_church <: int -> Fint` exceeded recursion depth limit (400)
//│ ║  l.1580: 	rec def to_church n =
//│ ║          	^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.1581: 	  if n == 0 then fun f -> fun x -> x
//│ ║          	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.1582: 	  else fun f -> fun x -> f ((to_church (n - 1)) f x)
//│ ║          	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── while constraining:  α10521'  <!<  ((α10767',) -> α10768')
//│ ╟── while constraining:  α10537'  <!<  ((α10767',) -> α10768')
//│ ╟── while constraining:  α10553'  <!<  ((α10767',) -> α10768')
//│ ╟── while constraining:  α10569'  <!<  ((α10767',) -> α10768')
//│ ╟── while constraining:  α10585'  <!<  ((α10767',) -> α10768')
//│ ╟── while constraining:  α10601'  <!<  ((α10767',) -> α10768')
//│ ╟── while constraining:  α10617'  <!<  ((α10767',) -> α10768')
//│ ╟── while constraining:  α10633'  <!<  ((α10767',) -> α10768')
//│ ╟── while constraining:  α10649'  <!<  ((α10767',) -> α10768')
//│ ╟── while constraining:  α10665'  <!<  ((α10767',) -> α10768')
//│ ╟── while constraining:  α10681'  <!<  ((α10767',) -> α10768')
//│ ╟── while constraining:  α10697'  <!<  ((α10767',) -> α10768')
//│ ╟── while constraining:  α10713'  <!<  ((α10767',) -> α10768')
//│ ╟── while constraining:  α10729'  <!<  ((α10767',) -> α10768')
//│ ╟── while constraining:  α10745'  <!<  ((α10767',) -> α10768')
//│ ╟── while constraining:  α10761'  <!<  ((α10767',) -> α10768')
//│ ╟── while constraining:  α10761'  <!<  ((α10763'',) -> α10764'')
//│ ╟── while constraining:  {(α10766'' -> α10764'') where: α10761' <: ((α10763'',) -> α10764''), α10460' <: ((α10761',) -> α10765'')}  <!<  ((α10754',) -> α10755')
//│ ╟── while constraining:  ‹∀ 3. {(α10760'''' -> α10758'''') where: α10761' <: ((α10757'''',) -> α10758''''), α10460' <: ((α10761',) -> α10762'''')}›  <!<  ((α10754',) -> α10755')
//│ ╟── while constraining:  ‹∀ 3. {(α10760'''' -> α10758'''') where: α10761' <: ((α10757'''',) -> α10758''''), α10460' <: ((α10761',) -> α10762'''')}›  <!<  α10753'
//│ ╟── while constraining:  ‹∀ 3. {(α10760'''' -> α10758'''') where: α10756'' <: ((α10757'''',) -> α10758''''), α10460' <: ((α10756'',) -> α10759'''')}›  <!<  α10753'
//│ ╟── while constraining:  (α10756'' -> ‹∀ 3. {(α10760'''' -> α10758'''') where: α10756'' <: ((α10757'''',) -> α10758''''), α10460' <: ((α10756'',) -> α10759'''')}›)  <!<  ((α10745',) -> α10753')
//│ ╟── while constraining:  ‹∀ 2. (α10459''' -> ‹∀ 3. {(α10464'''' -> α10462'''') where: α10459''' <: ((α10461'''',) -> α10462''''), α10460' <: ((α10459''',) -> α10463'''')}›)›  <!<  ((α10745',) -> α10753')
//│ ╟── while constraining:  α10460'  <!<  ((α10745',) -> α10753')
//│ ╟── while constraining:  α10460'  <!<  ((α10745',) -> α10749'')
//│ ╟── while constraining:  {(α10750'' -> α10748'') where: α10745' <: ((α10747'',) -> α10748''), α10460' <: ((α10745',) -> α10749'')}  <!<  ((α10738',) -> α10739')
//│ ╟── while constraining:  ‹∀ 3. {(α10744'''' -> α10742'''') where: α10745' <: ((α10741'''',) -> α10742''''), α10460' <: ((α10745',) -> α10746'''')}›  <!<  ((α10738',) -> α10739')
//│ ╟── while constraining:  ‹∀ 3. {(α10744'''' -> α10742'''') where: α10745' <: ((α10741'''',) -> α10742''''), α10460' <: ((α10745',) -> α10746'''')}›  <!<  α10737'
//│ ╟── while constraining:  ‹∀ 3. {(α10744'''' -> α10742'''') where: α10740'' <: ((α10741'''',) -> α10742''''), α10460' <: ((α10740'',) -> α10743'''')}›  <!<  α10737'
//│ ╟── while constraining:  (α10740'' -> ‹∀ 3. {(α10744'''' -> α10742'''') where: α10740'' <: ((α10741'''',) -> α10742''''), α10460' <: ((α10740'',) -> α10743'''')}›)  <!<  ((α10729',) -> α10737')
//│ ╟── while constraining:  ‹∀ 2. (α10459''' -> ‹∀ 3. {(α10464'''' -> α10462'''') where: α10459''' <: ((α10461'''',) -> α10462''''), α10460' <: ((α10459''',) -> α10463'''')}›)›  <!<  ((α10729',) -> α10737')
//│ ╟── while constraining:  α10460'  <!<  ((α10729',) -> α10737')
//│ ╟── while constraining:  α10460'  <!<  ((α10729',) -> α10733'')
//│ ╟── while constraining:  {(α10734'' -> α10732'') where: α10729' <: ((α10731'',) -> α10732''), α10460' <: ((α10729',) -> α10733'')}  <!<  ((α10722',) -> α10723')
//│ ╟── while constraining:  ‹∀ 3. {(α10728'''' -> α10726'''') where: α10729' <: ((α10725'''',) -> α10726''''), α10460' <: ((α10729',) -> α10730'''')}›  <!<  ((α10722',) -> α10723')
//│ ╟── while constraining:  ‹∀ 3. {(α10728'''' -> α10726'''') where: α10729' <: ((α10725'''',) -> α10726''''), α10460' <: ((α10729',) -> α10730'''')}›  <!<  α10721'
//│ ╟── while constraining:  ‹∀ 3. {(α10728'''' -> α10726'''') where: α10724'' <: ((α10725'''',) -> α10726''''), α10460' <: ((α10724'',) -> α10727'''')}›  <!<  α10721'
//│ ╟── while constraining:  (α10724'' -> ‹∀ 3. {(α10728'''' -> α10726'''') where: α10724'' <: ((α10725'''',) -> α10726''''), α10460' <: ((α10724'',) -> α10727'''')}›)  <!<  ((α10713',) -> α10721')
//│ ╟── while constraining:  ‹∀ 2. (α10459''' -> ‹∀ 3. {(α10464'''' -> α10462'''') where: α10459''' <: ((α10461'''',) -> α10462''''), α10460' <: ((α10459''',) -> α10463'''')}›)›  <!<  ((α10713',) -> α10721')
//│ ╟── while constraining:  α10460'  <!<  ((α10713',) -> α10721')
//│ ╟── while constraining:  α10460'  <!<  ((α10713',) -> α10717'')
//│ ╟── while constraining:  {(α10718'' -> α10716'') where: α10713' <: ((α10715'',) -> α10716''), α10460' <: ((α10713',) -> α10717'')}  <!<  ((α10706',) -> α10707')
//│ ╟── while constraining:  ‹∀ 3. {(α10712'''' -> α10710'''') where: α10713' <: ((α10709'''',) -> α10710''''), α10460' <: ((α10713',) -> α10714'''')}›  <!<  ((α10706',) -> α10707')
//│ ╟── while constraining:  ‹∀ 3. {(α10712'''' -> α10710'''') where: α10713' <: ((α10709'''',) -> α10710''''), α10460' <: ((α10713',) -> α10714'''')}›  <!<  α10705'
//│ ╟── while constraining:  ‹∀ 3. {(α10712'''' -> α10710'''') where: α10708'' <: ((α10709'''',) -> α10710''''), α10460' <: ((α10708'',) -> α10711'''')}›  <!<  α10705'
//│ ╟── while constraining:  (α10708'' -> ‹∀ 3. {(α10712'''' -> α10710'''') where: α10708'' <: ((α10709'''',) -> α10710''''), α10460' <: ((α10708'',) -> α10711'''')}›)  <!<  ((α10697',) -> α10705')
//│ ╟── while constraining:  ‹∀ 2. (α10459''' -> ‹∀ 3. {(α10464'''' -> α10462'''') where: α10459''' <: ((α10461'''',) -> α10462''''), α10460' <: ((α10459''',) -> α10463'''')}›)›  <!<  ((α10697',) -> α10705')
//│ ╟── while constraining:  α10460'  <!<  ((α10697',) -> α10705')
//│ ╟── while constraining:  α10460'  <!<  ((α10697',) -> α10701'')
//│ ╟── while constraining:  {(α10702'' -> α10700'') where: α10697' <: ((α10699'',) -> α10700''), α10460' <: ((α10697',) -> α10701'')}  <!<  ((α10690',) -> α10691')
//│ ╟── while constraining:  ‹∀ 3. {(α10696'''' -> α10694'''') where: α10697' <: ((α10693'''',) -> α10694''''), α10460' <: ((α10697',) -> α10698'''')}›  <!<  ((α10690',) -> α10691')
//│ ╟── while constraining:  ‹∀ 3. {(α10696'''' -> α10694'''') where: α10697' <: ((α10693'''',) -> α10694''''), α10460' <: ((α10697',) -> α10698'''')}›  <!<  α10689'
//│ ╟── while constraining:  ‹∀ 3. {(α10696'''' -> α10694'''') where: α10692'' <: ((α10693'''',) -> α10694''''), α10460' <: ((α10692'',) -> α10695'''')}›  <!<  α10689'
//│ ╟── while constraining:  (α10692'' -> ‹∀ 3. {(α10696'''' -> α10694'''') where: α10692'' <: ((α10693'''',) -> α10694''''), α10460' <: ((α10692'',) -> α10695'''')}›)  <!<  ((α10681',) -> α10689')
//│ ╟── while constraining:  ‹∀ 2. (α10459''' -> ‹∀ 3. {(α10464'''' -> α10462'''') where: α10459''' <: ((α10461'''',) -> α10462''''), α10460' <: ((α10459''',) -> α10463'''')}›)›  <!<  ((α10681',) -> α10689')
//│ ╟── while constraining:  α10460'  <!<  ((α10681',) -> α10689')
//│ ╟── while constraining:  α10460'  <!<  ((α10681',) -> α10685'')
//│ ╟── while constraining:  {(α10686'' -> α10684'') where: α10681' <: ((α10683'',) -> α10684''), α10460' <: ((α10681',) -> α10685'')}  <!<  ((α10674',) -> α10675')
//│ ╟── while constraining:  ‹∀ 3. {(α10680'''' -> α10678'''') where: α10681' <: ((α10677'''',) -> α10678''''), α10460' <: ((α10681',) -> α10682'''')}›  <!<  ((α10674',) -> α10675')
//│ ╟── while constraining:  ‹∀ 3. {(α10680'''' -> α10678'''') where: α10681' <: ((α10677'''',) -> α10678''''), α10460' <: ((α10681',) -> α10682'''')}›  <!<  α10673'
//│ ╟── while constraining:  ‹∀ 3. {(α10680'''' -> α10678'''') where: α10676'' <: ((α10677'''',) -> α10678''''), α10460' <: ((α10676'',) -> α10679'''')}›  <!<  α10673'
//│ ╟── while constraining:  (α10676'' -> ‹∀ 3. {(α10680'''' -> α10678'''') where: α10676'' <: ((α10677'''',) -> α10678''''), α10460' <: ((α10676'',) -> α10679'''')}›)  <!<  ((α10665',) -> α10673')
//│ ╟── while constraining:  ‹∀ 2. (α10459''' -> ‹∀ 3. {(α10464'''' -> α10462'''') where: α10459''' <: ((α10461'''',) -> α10462''''), α10460' <: ((α10459''',) -> α10463'''')}›)›  <!<  ((α10665',) -> α10673')
//│ ╟── while constraining:  α10460'  <!<  ((α10665',) -> α10673')
//│ ╟── while constraining:  α10460'  <!<  ((α10665',) -> α10669'')
//│ ╟── while constraining:  {(α10670'' -> α10668'') where: α10665' <: ((α10667'',) -> α10668''), α10460' <: ((α10665',) -> α10669'')}  <!<  ((α10658',) -> α10659')
//│ ╟── while constraining:  ‹∀ 3. {(α10664'''' -> α10662'''') where: α10665' <: ((α10661'''',) -> α10662''''), α10460' <: ((α10665',) -> α10666'''')}›  <!<  ((α10658',) -> α10659')
//│ ╟── while constraining:  ‹∀ 3. {(α10664'''' -> α10662'''') where: α10665' <: ((α10661'''',) -> α10662''''), α10460' <: ((α10665',) -> α10666'''')}›  <!<  α10657'
//│ ╟── while constraining:  ‹∀ 3. {(α10664'''' -> α10662'''') where: α10660'' <: ((α10661'''',) -> α10662''''), α10460' <: ((α10660'',) -> α10663'''')}›  <!<  α10657'
//│ ╟── while constraining:  (α10660'' -> ‹∀ 3. {(α10664'''' -> α10662'''') where: α10660'' <: ((α10661'''',) -> α10662''''), α10460' <: ((α10660'',) -> α10663'''')}›)  <!<  ((α10649',) -> α10657')
//│ ╟── while constraining:  ‹∀ 2. (α10459''' -> ‹∀ 3. {(α10464'''' -> α10462'''') where: α10459''' <: ((α10461'''',) -> α10462''''), α10460' <: ((α10459''',) -> α10463'''')}›)›  <!<  ((α10649',) -> α10657')
//│ ╟── while constraining:  α10460'  <!<  ((α10649',) -> α10657')
//│ ╟── while constraining:  α10460'  <!<  ((α10649',) -> α10653'')
//│ ╟── while constraining:  {(α10654'' -> α10652'') where: α10649' <: ((α10651'',) -> α10652''), α10460' <: ((α10649',) -> α10653'')}  <!<  ((α10642',) -> α10643')
//│ ╟── while constraining:  ‹∀ 3. {(α10648'''' -> α10646'''') where: α10649' <: ((α10645'''',) -> α10646''''), α10460' <: ((α10649',) -> α10650'''')}›  <!<  ((α10642',) -> α10643')
//│ ╟── while constraining:  ‹∀ 3. {(α10648'''' -> α10646'''') where: α10649' <: ((α10645'''',) -> α10646''''), α10460' <: ((α10649',) -> α10650'''')}›  <!<  α10641'
//│ ╟── while constraining:  ‹∀ 3. {(α10648'''' -> α10646'''') where: α10644'' <: ((α10645'''',) -> α10646''''), α10460' <: ((α10644'',) -> α10647'''')}›  <!<  α10641'
//│ ╟── while constraining:  (α10644'' -> ‹∀ 3. {(α10648'''' -> α10646'''') where: α10644'' <: ((α10645'''',) -> α10646''''), α10460' <: ((α10644'',) -> α10647'''')}›)  <!<  ((α10633',) -> α10641')
//│ ╟── while constraining:  ‹∀ 2. (α10459''' -> ‹∀ 3. {(α10464'''' -> α10462'''') where: α10459''' <: ((α10461'''',) -> α10462''''), α10460' <: ((α10459''',) -> α10463'''')}›)›  <!<  ((α10633',) -> α10641')
//│ ╟── while constraining:  α10460'  <!<  ((α10633',) -> α10641')
//│ ╟── while constraining:  α10460'  <!<  ((α10633',) -> α10637'')
//│ ╟── while constraining:  {(α10638'' -> α10636'') where: α10633' <: ((α10635'',) -> α10636''), α10460' <: ((α10633',) -> α10637'')}  <!<  ((α10626',) -> α10627')
//│ ╟── while constraining:  ‹∀ 3. {(α10632'''' -> α10630'''') where: α10633' <: ((α10629'''',) -> α10630''''), α10460' <: ((α10633',) -> α10634'''')}›  <!<  ((α10626',) -> α10627')
//│ ╟── while constraining:  ‹∀ 3. {(α10632'''' -> α10630'''') where: α10633' <: ((α10629'''',) -> α10630''''), α10460' <: ((α10633',) -> α10634'''')}›  <!<  α10625'
//│ ╟── while constraining:  ‹∀ 3. {(α10632'''' -> α10630'''') where: α10628'' <: ((α10629'''',) -> α10630''''), α10460' <: ((α10628'',) -> α10631'''')}›  <!<  α10625'
//│ ╟── while constraining:  (α10628'' -> ‹∀ 3. {(α10632'''' -> α10630'''') where: α10628'' <: ((α10629'''',) -> α10630''''), α10460' <: ((α10628'',) -> α10631'''')}›)  <!<  ((α10617',) -> α10625')
//│ ╟── while constraining:  ‹∀ 2. (α10459''' -> ‹∀ 3. {(α10464'''' -> α10462'''') where: α10459''' <: ((α10461'''',) -> α10462''''), α10460' <: ((α10459''',) -> α10463'''')}›)›  <!<  ((α10617',) -> α10625')
//│ ╟── while constraining:  α10460'  <!<  ((α10617',) -> α10625')
//│ ╟── while constraining:  α10460'  <!<  ((α10617',) -> α10621'')
//│ ╟── while constraining:  {(α10622'' -> α10620'') where: α10617' <: ((α10619'',) -> α10620''), α10460' <: ((α10617',) -> α10621'')}  <!<  ((α10610',) -> α10611')
//│ ╟── while constraining:  ‹∀ 3. {(α10616'''' -> α10614'''') where: α10617' <: ((α10613'''',) -> α10614''''), α10460' <: ((α10617',) -> α10618'''')}›  <!<  ((α10610',) -> α10611')
//│ ╟── while constraining:  ‹∀ 3. {(α10616'''' -> α10614'''') where: α10617' <: ((α10613'''',) -> α10614''''), α10460' <: ((α10617',) -> α10618'''')}›  <!<  α10609'
//│ ╟── while constraining:  ‹∀ 3. {(α10616'''' -> α10614'''') where: α10612'' <: ((α10613'''',) -> α10614''''), α10460' <: ((α10612'',) -> α10615'''')}›  <!<  α10609'
//│ ╟── while constraining:  (α10612'' -> ‹∀ 3. {(α10616'''' -> α10614'''') where: α10612'' <: ((α10613'''',) -> α10614''''), α10460' <: ((α10612'',) -> α10615'''')}›)  <!<  ((α10601',) -> α10609')
//│ ╟── while constraining:  ‹∀ 2. (α10459''' -> ‹∀ 3. {(α10464'''' -> α10462'''') where: α10459''' <: ((α10461'''',) -> α10462''''), α10460' <: ((α10459''',) -> α10463'''')}›)›  <!<  ((α10601',) -> α10609')
//│ ╟── while constraining:  α10460'  <!<  ((α10601',) -> α10609')
//│ ╟── while constraining:  α10460'  <!<  ((α10601',) -> α10605'')
//│ ╟── while constraining:  {(α10606'' -> α10604'') where: α10601' <: ((α10603'',) -> α10604''), α10460' <: ((α10601',) -> α10605'')}  <!<  ((α10594',) -> α10595')
//│ ╟── while constraining:  ‹∀ 3. {(α10600'''' -> α10598'''') where: α10601' <: ((α10597'''',) -> α10598''''), α10460' <: ((α10601',) -> α10602'''')}›  <!<  ((α10594',) -> α10595')
//│ ╟── while constraining:  ‹∀ 3. {(α10600'''' -> α10598'''') where: α10601' <: ((α10597'''',) -> α10598''''), α10460' <: ((α10601',) -> α10602'''')}›  <!<  α10593'
//│ ╟── while constraining:  ‹∀ 3. {(α10600'''' -> α10598'''') where: α10596'' <: ((α10597'''',) -> α10598''''), α10460' <: ((α10596'',) -> α10599'''')}›  <!<  α10593'
//│ ╟── while constraining:  (α10596'' -> ‹∀ 3. {(α10600'''' -> α10598'''') where: α10596'' <: ((α10597'''',) -> α10598''''), α10460' <: ((α10596'',) -> α10599'''')}›)  <!<  ((α10585',) -> α10593')
//│ ╟── while constraining:  ‹∀ 2. (α10459''' -> ‹∀ 3. {(α10464'''' -> α10462'''') where: α10459''' <: ((α10461'''',) -> α10462''''), α10460' <: ((α10459''',) -> α10463'''')}›)›  <!<  ((α10585',) -> α10593')
//│ ╟── while constraining:  α10460'  <!<  ((α10585',) -> α10593')
//│ ╟── while constraining:  α10460'  <!<  ((α10585',) -> α10589'')
//│ ╟── while constraining:  {(α10590'' -> α10588'') where: α10585' <: ((α10587'',) -> α10588''), α10460' <: ((α10585',) -> α10589'')}  <!<  ((α10578',) -> α10579')
//│ ╟── while constraining:  ‹∀ 3. {(α10584'''' -> α10582'''') where: α10585' <: ((α10581'''',) -> α10582''''), α10460' <: ((α10585',) -> α10586'''')}›  <!<  ((α10578',) -> α10579')
//│ ╟── while constraining:  ‹∀ 3. {(α10584'''' -> α10582'''') where: α10585' <: ((α10581'''',) -> α10582''''), α10460' <: ((α10585',) -> α10586'''')}›  <!<  α10577'
//│ ╟── while constraining:  ‹∀ 3. {(α10584'''' -> α10582'''') where: α10580'' <: ((α10581'''',) -> α10582''''), α10460' <: ((α10580'',) -> α10583'''')}›  <!<  α10577'
//│ ╟── while constraining:  (α10580'' -> ‹∀ 3. {(α10584'''' -> α10582'''') where: α10580'' <: ((α10581'''',) -> α10582''''), α10460' <: ((α10580'',) -> α10583'''')}›)  <!<  ((α10569',) -> α10577')
//│ ╟── while constraining:  ‹∀ 2. (α10459''' -> ‹∀ 3. {(α10464'''' -> α10462'''') where: α10459''' <: ((α10461'''',) -> α10462''''), α10460' <: ((α10459''',) -> α10463'''')}›)›  <!<  ((α10569',) -> α10577')
//│ ╟── while constraining:  α10460'  <!<  ((α10569',) -> α10577')
//│ ╟── while constraining:  α10460'  <!<  ((α10569',) -> α10573'')
//│ ╟── while constraining:  {(α10574'' -> α10572'') where: α10569' <: ((α10571'',) -> α10572''), α10460' <: ((α10569',) -> α10573'')}  <!<  ((α10562',) -> α10563')
//│ ╟── while constraining:  ‹∀ 3. {(α10568'''' -> α10566'''') where: α10569' <: ((α10565'''',) -> α10566''''), α10460' <: ((α10569',) -> α10570'''')}›  <!<  ((α10562',) -> α10563')
//│ ╟── while constraining:  ‹∀ 3. {(α10568'''' -> α10566'''') where: α10569' <: ((α10565'''',) -> α10566''''), α10460' <: ((α10569',) -> α10570'''')}›  <!<  α10561'
//│ ╟── while constraining:  ‹∀ 3. {(α10568'''' -> α10566'''') where: α10564'' <: ((α10565'''',) -> α10566''''), α10460' <: ((α10564'',) -> α10567'''')}›  <!<  α10561'
//│ ╟── while constraining:  (α10564'' -> ‹∀ 3. {(α10568'''' -> α10566'''') where: α10564'' <: ((α10565'''',) -> α10566''''), α10460' <: ((α10564'',) -> α10567'''')}›)  <!<  ((α10553',) -> α10561')
//│ ╟── while constraining:  ‹∀ 2. (α10459''' -> ‹∀ 3. {(α10464'''' -> α10462'''') where: α10459''' <: ((α10461'''',) -> α10462''''), α10460' <: ((α10459''',) -> α10463'''')}›)›  <!<  ((α10553',) -> α10561')
//│ ╟── while constraining:  α10460'  <!<  ((α10553',) -> α10561')
//│ ╟── while constraining:  α10460'  <!<  ((α10553',) -> α10557'')
//│ ╟── while constraining:  {(α10558'' -> α10556'') where: α10553' <: ((α10555'',) -> α10556''), α10460' <: ((α10553',) -> α10557'')}  <!<  ((α10546',) -> α10547')
//│ ╟── while constraining:  ‹∀ 3. {(α10552'''' -> α10550'''') where: α10553' <: ((α10549'''',) -> α10550''''), α10460' <: ((α10553',) -> α10554'''')}›  <!<  ((α10546',) -> α10547')
//│ ╟── while constraining:  ‹∀ 3. {(α10552'''' -> α10550'''') where: α10553' <: ((α10549'''',) -> α10550''''), α10460' <: ((α10553',) -> α10554'''')}›  <!<  α10545'
//│ ╟── while constraining:  ‹∀ 3. {(α10552'''' -> α10550'''') where: α10548'' <: ((α10549'''',) -> α10550''''), α10460' <: ((α10548'',) -> α10551'''')}›  <!<  α10545'
//│ ╟── while constraining:  (α10548'' -> ‹∀ 3. {(α10552'''' -> α10550'''') where: α10548'' <: ((α10549'''',) -> α10550''''), α10460' <: ((α10548'',) -> α10551'''')}›)  <!<  ((α10537',) -> α10545')
//│ ╟── while constraining:  ‹∀ 2. (α10459''' -> ‹∀ 3. {(α10464'''' -> α10462'''') where: α10459''' <: ((α10461'''',) -> α10462''''), α10460' <: ((α10459''',) -> α10463'''')}›)›  <!<  ((α10537',) -> α10545')
//│ ╟── while constraining:  α10460'  <!<  ((α10537',) -> α10545')
//│ ╟── while constraining:  α10460'  <!<  ((α10537',) -> α10541'')
//│ ╟── while constraining:  {(α10542'' -> α10540'') where: α10537' <: ((α10539'',) -> α10540''), α10460' <: ((α10537',) -> α10541'')}  <!<  ((α10530',) -> α10531')
//│ ╟── while constraining:  ‹∀ 3. {(α10536'''' -> α10534'''') where: α10537' <: ((α10533'''',) -> α10534''''), α10460' <: ((α10537',) -> α10538'''')}›  <!<  ((α10530',) -> α10531')
//│ ╟── while constraining:  ‹∀ 3. {(α10536'''' -> α10534'''') where: α10537' <: ((α10533'''',) -> α10534''''), α10460' <: ((α10537',) -> α10538'''')}›  <!<  α10529'
//│ ╟── while constraining:  ‹∀ 3. {(α10536'''' -> α10534'''') where: α10532'' <: ((α10533'''',) -> α10534''''), α10460' <: ((α10532'',) -> α10535'''')}›  <!<  α10529'
//│ ╟── while constraining:  (α10532'' -> ‹∀ 3. {(α10536'''' -> α10534'''') where: α10532'' <: ((α10533'''',) -> α10534''''), α10460' <: ((α10532'',) -> α10535'''')}›)  <!<  ((α10521',) -> α10529')
//│ ╟── while constraining:  ‹∀ 2. (α10459''' -> ‹∀ 3. {(α10464'''' -> α10462'''') where: α10459''' <: ((α10461'''',) -> α10462''''), α10460' <: ((α10459''',) -> α10463'''')}›)›  <!<  ((α10521',) -> α10529')
//│ ╟── while constraining:  α10460'  <!<  ((α10521',) -> α10529')
//│ ╟── while constraining:  α10460'  <!<  ((α10521',) -> α10525'')
//│ ╟── while constraining:  {(α10526'' -> α10524'') where: α10521' <: ((α10523'',) -> α10524''), α10460' <: ((α10521',) -> α10525'')}  <!<  ((α10514',) -> α10515')
//│ ╟── while constraining:  ‹∀ 3. {(α10520'''' -> α10518'''') where: α10521' <: ((α10517'''',) -> α10518''''), α10460' <: ((α10521',) -> α10522'''')}›  <!<  ((α10514',) -> α10515')
//│ ╟── while constraining:  ‹∀ 3. {(α10520'''' -> α10518'''') where: α10521' <: ((α10517'''',) -> α10518''''), α10460' <: ((α10521',) -> α10522'''')}›  <!<  α10513'
//│ ╟── while constraining:  ‹∀ 3. {(α10520'''' -> α10518'''') where: α10516'' <: ((α10517'''',) -> α10518''''), α10460' <: ((α10516'',) -> α10519'''')}›  <!<  α10513'
//│ ╟── while constraining:  (α10516'' -> ‹∀ 3. {(α10520'''' -> α10518'''') where: α10516'' <: ((α10517'''',) -> α10518''''), α10460' <: ((α10516'',) -> α10519'''')}›)  <!<  ((α10505',) -> α10513')
//│ ╟── while constraining:  ‹∀ 2. (α10459''' -> ‹∀ 3. {(α10464'''' -> α10462'''') where: α10459''' <: ((α10461'''',) -> α10462''''), α10460' <: ((α10459''',) -> α10463'''')}›)›  <!<  ((α10505',) -> α10513')
//│ ╟── while constraining:  α10460'  <!<  ((α10505',) -> α10513')
//│ ╟── while constraining:  α10460'  <!<  ((α10505',) -> α10509'')
//│ ╟── while constraining:  {(α10510'' -> α10508'') where: α10505' <: ((α10507'',) -> α10508''), α10460' <: ((α10505',) -> α10509'')}  <!<  ((α10498',) -> α10499')
//│ ╟── while constraining:  ‹∀ 3. {(α10504'''' -> α10502'''') where: α10505' <: ((α10501'''',) -> α10502''''), α10460' <: ((α10505',) -> α10506'''')}›  <!<  ((α10498',) -> α10499')
//│ ╟── while constraining:  ‹∀ 3. {(α10504'''' -> α10502'''') where: α10505' <: ((α10501'''',) -> α10502''''), α10460' <: ((α10505',) -> α10506'''')}›  <!<  α10497'
//│ ╟── while constraining:  ‹∀ 3. {(α10504'''' -> α10502'''') where: α10500'' <: ((α10501'''',) -> α10502''''), α10460' <: ((α10500'',) -> α10503'''')}›  <!<  α10497'
//│ ╟── while constraining:  (α10500'' -> ‹∀ 3. {(α10504'''' -> α10502'''') where: α10500'' <: ((α10501'''',) -> α10502''''), α10460' <: ((α10500'',) -> α10503'''')}›)  <!<  ((α10489',) -> α10497')
//│ ╟── while constraining:  ‹∀ 2. (α10459''' -> ‹∀ 3. {(α10464'''' -> α10462'''') where: α10459''' <: ((α10461'''',) -> α10462''''), α10460' <: ((α10459''',) -> α10463'''')}›)›  <!<  ((α10489',) -> α10497')
//│ ╟── while constraining:  α10460'  <!<  ((α10489',) -> α10497')
//│ ╟── while constraining:  α10460'  <!<  ((α10489',) -> α10493'')
//│ ╟── while constraining:  {(α10494'' -> α10492'') where: α10489' <: ((α10491'',) -> α10492''), α10460' <: ((α10489',) -> α10493'')}  <!<  ((α10482',) -> α10483')
//│ ╟── while constraining:  ‹∀ 3. {(α10488'''' -> α10486'''') where: α10489' <: ((α10485'''',) -> α10486''''), α10460' <: ((α10489',) -> α10490'''')}›  <!<  ((α10482',) -> α10483')
//│ ╟── while constraining:  ‹∀ 3. {(α10488'''' -> α10486'''') where: α10489' <: ((α10485'''',) -> α10486''''), α10460' <: ((α10489',) -> α10490'''')}›  <!<  α10481'
//│ ╟── while constraining:  ‹∀ 3. {(α10488'''' -> α10486'''') where: α10484'' <: ((α10485'''',) -> α10486''''), α10460' <: ((α10484'',) -> α10487'''')}›  <!<  α10481'
//│ ╟── while constraining:  (α10484'' -> ‹∀ 3. {(α10488'''' -> α10486'''') where: α10484'' <: ((α10485'''',) -> α10486''''), α10460' <: ((α10484'',) -> α10487'''')}›)  <!<  ((α10480',) -> α10481')
//│ ╟── while constraining:  ‹∀ 2. (α10459''' -> ‹∀ 3. {(α10464'''' -> α10462'''') where: α10459''' <: ((α10461'''',) -> α10462''''), α10460' <: ((α10459''',) -> α10463'''')}›)›  <!<  ((α10480',) -> α10481')
//│ ╟── while constraining:  α10460'  <!<  ((α10480',) -> α10481')
//│ ╟── while constraining:  α10460'  <!<  ((α10471'',) -> α10478'')
//│ ╟── while constraining:  {(α10479'' -> α10477'') where: α10471'' <: ((α10476'',) -> α10477''), α10460' <: ((α10471'',) -> α10478'')}  <!<  (‘a'' -> ‘a'')
//│ ╟── while constraining:  ‹∀ 3. {(α10475'''' -> α10473'''') where: α10471'' <: ((α10472'''',) -> α10473''''), α10460' <: ((α10471'',) -> α10474'''')}›  <!<  (‘a'' -> ‘a'')
//│ ╟── while constraining:  (α10471'' -> ‹∀ 3. {(α10475'''' -> α10473'''') where: α10471'' <: ((α10472'''',) -> α10473''''), α10460' <: ((α10471'',) -> α10474'''')}›)  <!<  ((‘a'' -> ‘a'') -> (‘a'' -> ‘a''))
//│ ╟── while constraining:  ‹∀ 2. (α10459''' -> ‹∀ 3. {(α10464'''' -> α10462'''') where: α10459''' <: ((α10461'''',) -> α10462''''), α10460' <: ((α10459''',) -> α10463'''')}›)›  <!<  ((‘a'' -> ‘a'') -> (‘a'' -> ‘a''))
//│ ╟── while constraining:  ‹∀ 2. (α10459''' -> ‹∀ 3. {(α10464'''' -> α10462'''') where: α10459''' <: ((α10461'''',) -> α10462''''), α10460' <: ((α10459''',) -> α10463'''')}›)›  <!<  ‹∀ 0. (('a9040' -> 'a9040') -> ('a9040' -> 'a9040'))›
//│ ╟── while constraining:  ‹∀ 2. (α10459''' -> ‹∀ 3. {(α10464'''' -> α10462'''') where: α10459''' <: ((α10461'''',) -> α10462''''), α10460' <: ((α10459''',) -> α10463'''')}›)›  <!<  Fint
//│ ╟── while constraining:  α10468'  <!<  Fint
//│ ╟── while constraining:  (α10467' -> α10468')  <!<  (Int -> Fint)
//│ ╟── while constraining:  ‹∀ 1. (α10457'' -> α10458'')›  <!<  (Int -> Fint)
//│ ╟── while constraining:  to_church10456'  <!<  (Int -> Fint)
//│ ╟── while constraining:  ‹∀ 0. to_church10412'›  <!<  (Int -> Fint)
//│ ╙── while constraining:  ‹∀ 0. to_church10412'›  <!<  ‹∀ 0. (Int -> Fint)›
//│          = [Function: to_church]


// let rec to_church n =
//   if n = 0 then fun f x -> x
//   else fun f x -> f ((to_church (n-1)) f x)
rec def to_church' n =
  if n == 0 then fun f -> fun x -> x
  else fun f -> fun x -> f ((to_church (n - 1)) f x)
//│ to_church': int -> (forall 'b. 'b -> (forall 'b, 'a, 'c. (('c & 'a) -> 'c
//│   where
//│     'b <: 'a -> 'a & 'a -> 'c)))
//│           = [Function: to_church]


// let rec c_fact (n:Int) =
//   c_if (c_iszero n) (fun (u:Unit) -> c_i1)
//     (fun (u:Unit) -> c_mul n (c_fact (c_pred n)))
rec def c_fact (n: Fint) =
  c_if (c_iszero n) (fun (u: Funit) -> c_i1)
    (fun (u: Funit) -> c_mul n (c_fact (c_pred n)))
rec def c_fact' n =
  c_if' (c_iszero' n) (fun _ -> c_i1)
    (fun _ -> c_mul' n (c_fact' (c_pred' n)))
//│ c_fact: Fint -> (forall 'a, 'b. ('a & 'b) -> (forall 'a, 'b, 'c, 'd, 'e, 'f, 'g, 'h. (('c & 'e) -> ('d | 'h | 'c)
//│   where
//│     'a <: 'c -> 'd
//│     'b <: 'e -> 'f
//│     'g <: 'b -> 'f -> 'h)) | Fint)
//│       = [Function: c_fact]
//│ c_fact': (('a -> 'a -> ((forall 'b. 'b -> 'b) -> 'c) -> 'c) -> (forall 'd. 'd -> (forall 'd. ('a -> 'e
//│   where
//│     'd <: (forall 'b. 'b -> 'b) -> 'e))) -> ('a -> (forall 'f. 'f -> (forall 'f, 'g, 'h. ('g -> 'h
//│   where
//│     'f <: 'g -> 'h)))) -> (forall 'a, 'i, 'j. ('a -> 'k
//│   where
//│     'i <: ((('a -> (forall 'l. 'l -> 'l)) -> 'm & ('a -> (forall 'l. 'l -> 'l)) -> 'a) -> (nothing -> (forall 'n. 'n -> (forall 'm, 'n, 'o, 'p, 'q. ('q -> 'p
//│   where
//│     'm <: 'n -> 'o -> 'p
//│     'n <: 'q -> 'o))) -> 'r) -> 'r) -> ((('a -> (forall 's. 's -> 's)) -> ('a -> (forall 's. 's -> 's)) -> 't) -> 't) -> (forall 'u. 'u -> 'a -> 'u) -> 'j & (((forall 'a. 'a -> (forall 'v. 'v -> (forall 'a, 'v, 'w, 'x, 'y. ('y -> 'x
//│   where
//│     'a <: 'v -> 'w -> 'x
//│     'v <: 'y -> 'w)))) -> nothing -> 'z) -> 'z) -> ('a -> (forall 's. 's -> 's)) -> 'k)) -> 'a1 & 'i) -> 'a1
//│   where
//│     'j <: ('a -> 'a -> ((forall 'b. 'b -> 'b) -> 'c) -> 'c) -> (forall 'd. 'd -> (forall 'd. ('a -> 'e
//│   where
//│     'd <: (forall 'b. 'b -> 'b) -> 'e))) -> ('a -> (forall 'f. 'f -> (forall 'f, 'g, 'h. ('g -> 'h
//│   where
//│     'f <: 'g -> 'h)))) -> (forall 'a, 'j. ('a -> 'b1
//│   where
//│     'j <: ((('a -> (forall 'l. 'l -> 'l)) -> 'm & ('a -> (forall 'l. 'l -> 'l)) -> 'a) -> (nothing -> (forall 'n. 'n -> (forall 'm, 'n, 'o, 'p, 'q. ('q -> 'p
//│   where
//│     'm <: 'n -> 'o -> 'p
//│     'n <: 'q -> 'o))) -> 'r) -> 'r) -> ((('a -> (forall 's. 's -> 's)) -> ('a -> (forall 's. 's -> 's)) -> 't) -> 't) -> (forall 'u. 'u -> 'a -> 'u) -> 'j & (((forall 'a. 'a -> (forall 'v. 'v -> (forall 'a, 'v, 'w, 'x, 'y. ('y -> 'x
//│   where
//│     'a <: 'v -> 'w -> 'x
//│     'v <: 'y -> 'w)))) -> nothing -> 'z) -> 'z) -> ('a -> (forall 's. 's -> 's)) -> 'b1)) -> 'a
//│        = [Function: c_fact]


// let print_fact n =
//   print_string "Factorial " ;
//   print_int n ;
//   print_string " = " ;
//   c_printint (c_fact (to_church n)) ;
//   print_string "\n" ;
//   ()
:ng
def print_fact n =
  let _ = print_string "Factorial " in
  let _ = print_int n in
  let _ = print_string " = " in
  let _ = c_printint (c_fact (to_church n)) in
          print_string "\n"
def print_fact' n =
  let _ = print_string "Factorial " in
  let _ = print_int n in
  let _ = print_string " = " in
  let _ = c_printint' (c_fact' (to_church' n)) in
          print_string "\n"
//│ print_fact: int -> unit
//│ print_fact': int -> unit

def print_fact2 n =
  concat "Factorial " (
  concat (toString n) (
  concat " = "
         (c_printint2 (c_fact (to_church n))) ))
def print_fact2' n =
  concat "Factorial " (
  concat (toString n) (
  concat " = "
         (c_printint2' (c_fact' (to_church' n))) ))
//│ print_fact2: int -> string
//│            = [Function: print_fact2]
//│ print_fact2': int -> string
//│             = [Function: print_fact2]

// let essai =
//   print_string "Church integers :\n";
//   let c_i5 = c_add c_i3 c_i2 in
//   let c_i10 = c_mul c_i5 c_i2 in
//   let c_i9 = c_pred c_i10 in
//   let c_99 = c_add (c_mul c_i9 c_i10) c_i9 in
//   let c_98 = c_pred c_99 in
//   print_string "This should be 98 : " ;
//   c_printint c_98;
//   print_string "\n\n" ;
this_should_be_98 =
  let c_i5 = c_add c_i3 c_i2 in
  let c_i10 = c_mul c_i5 c_i2 in
  let c_i9 = c_pred c_i10 in
  let c_99 = c_add (c_mul c_i9 c_i10) c_i9 in
  let c_98 = c_pred c_99 in
  c_printint2 c_98
this_should_be_98' =
  let c_i5' = c_add' c_i3' c_i2 in
  let c_i10' = c_mul' c_i5' c_i2 in
  let c_i9' = c_pred' c_i10' in
  let c_99' = c_add' (c_mul' c_i9' c_i10') c_i9' in
  let c_98' = c_pred' c_99' in
  c_printint2' c_98'
//│ this_should_be_98: string
//│                  = '98'
//│ ╔══[ERROR] Subtyping constraint of the form `?a <: (forall ?b, ?c. ?c) -> ?d` exceeded recursion depth limit (400)
//│ ║  l.1888: 	  let c_i10' = c_mul' c_i5' c_i2 in
//│ ║          	               ^^^^^^^^^^^^^^^^^
//│ ╟── while constraining:  ‹∀ 2. (α9802''' -> α9804''')›  <!<  ('a13238'' -> 'a13238'')
//│ ╟── while constraining:  α13225''  <!<  ('a13238'' -> 'a13238'')
//│ ╟── while constraining:  (α13225'',)  <!<  (('a13238'' -> 'a13238''),)
//│ ╟── while constraining:  (('a13238'' -> 'a13238'') -> ('a13238'' -> 'a13238''))  <!<  ((α13225'',) -> α13232'')
//│ ╟── while constraining:  ‹∀ 0. (('a9040' -> 'a9040') -> ('a9040' -> 'a9040'))›  <!<  ((α13225'',) -> α13232'')
//│ ╟── while constraining:  Fint  <!<  ((α13225'',) -> α13232'')
//│ ╟── while constraining:  α13220''  <!<  ((α13225'',) -> α13232'')
//│ ╟── while constraining:  {(α13230'' -> α13233'') where: α13225'' <: ((α13230'',) -> α13231''), α13220'' <: ((α13225'',) -> α13232'')}  <!<  ((α13215'',) -> α13216'')
//│ ╟── while constraining:  ‹∀ 3. {(α13226'''' -> α13229'''') where: α13225'' <: ((α13226'''',) -> α13227''''), α13220'' <: ((α13225'',) -> α13228'''')}›  <!<  ((α13215'',) -> α13216'')
//│ ╟── while constraining:  ‹∀ 3. {(α13226'''' -> α13229'''') where: α13225'' <: ((α13226'''',) -> α13227''''), α13220'' <: ((α13225'',) -> α13228'''')}›  <!<  α13214''
//│ ╟── while constraining:  (α13225'' -> ‹∀ 3. {(α13226'''' -> α13229'''') where: α13225'' <: ((α13226'''',) -> α13227''''), α13220'' <: ((α13225'',) -> α13228'''')}›)  <!<  ((α13209'',) -> α13214'')
//│ ╟── while constraining:  ‹∀ 2. (α13219''' -> ‹∀ 3. {(α13221'''' -> α13224'''') where: α13219''' <: ((α13221'''',) -> α13222''''), α13220'' <: ((α13219''',) -> α13223'''')}›)›  <!<  ((α13209'',) -> α13214'')
//│ ╟── while constraining:  α13218''  <!<  ((α13209'',) -> α13214'')
//│ ╟── while constraining:  ‹∀ 0. α10229'›  <!<  ((α13209'',) -> α13214'')
//│ ╟── while constraining:  α13204''  <!<  ((α13209'',) -> α13214'')
//│ ╟── while constraining:  {(α13217'' -> α13216'') where: α13204'' <: ((α13209'',) -> α13214''), α13209'' <: ((α13217'',) -> α13215'')}  <!<  ((α13199'',) -> α13200'')
//│ ╟── while constraining:  ‹∀ 3. {(α13213'''' -> α13212'''') where: α13204'' <: ((α13209'',) -> α13210''''), α13209'' <: ((α13213'''',) -> α13211'''')}›  <!<  ((α13199'',) -> α13200'')
//│ ╟── while constraining:  ‹∀ 3. {(α13213'''' -> α13212'''') where: α13204'' <: ((α13209'',) -> α13210''''), α13209'' <: ((α13213'''',) -> α13211'''')}›  <!<  α13198''
//│ ╟── while constraining:  (α13209'' -> ‹∀ 3. {(α13213'''' -> α13212'''') where: α13204'' <: ((α13209'',) -> α13210''''), α13209'' <: ((α13213'''',) -> α13211'''')}›)  <!<  ((α13193'',) -> α13198'')
//│ ╟── while constraining:  ‹∀ 2. (α13203''' -> ‹∀ 3. {(α13208'''' -> α13207'''') where: α13204'' <: ((α13203''',) -> α13205''''), α13203''' <: ((α13208'''',) -> α13206'''')}›)›  <!<  ((α13193'',) -> α13198'')
//│ ╟── while constraining:  α13202''  <!<  ((α13193'',) -> α13198'')
//│ ╟── while constraining:  ‹∀ 0. α10323'›  <!<  ((α13193'',) -> α13198'')
//│ ╟── while constraining:  α12103''  <!<  ((α13193'',) -> α13198'')
//│ ╟── while constraining:  {(α13201'' -> α13200'') where: α12103'' <: ((α13193'',) -> α13198''), α13193'' <: ((α13201'',) -> α13199'')}  <!<  ((α13190'',) -> α13191'')
//│ ╟── while constraining:  ‹∀ 3. {(α13197'''' -> α13196'''') where: α12103'' <: ((α13193'',) -> α13194''''), α13193'' <: ((α13197'''',) -> α13195'''')}›  <!<  ((α13190'',) -> α13191'')
//│ ╟── while constraining:  ‹∀ 3. {(α13197'''' -> α13196'''') where: α12103'' <: ((α13193'',) -> α13194''''), α13193'' <: ((α13197'''',) -> α13195'''')}›  <!<  α13189''
//│ ╟── while constraining:  (α13193'' -> ‹∀ 3. {(α13197'''' -> α13196'''') where: α12103'' <: ((α13193'',) -> α13194''''), α13193'' <: ((α13197'''',) -> α13195'''')}›)  <!<  ((α13184'',) -> α13189'')
//│ ╟── while constraining:  ‹∀ 2. (α12102''' -> ‹∀ 3. {(α12107'''' -> α12106'''') where: α12103'' <: ((α12102''',) -> α12104''''), α12102''' <: ((α12107'''',) -> α12105'''')}›)›  <!<  ((α13184'',) -> α13189'')
//│ ╟── while constraining:  α12101''  <!<  ((α13184'',) -> α13189'')
//│ ╟── while constraining:  {(α13192'' -> α13191'') where: α12101'' <: ((α13184'',) -> α13189''), α13184'' <: ((α13192'',) -> α13190'')}  <!<  ((α13123'',) -> α13124'')
//│ ╟── while constraining:  ‹∀ 3. {(α13188'''' -> α13187'''') where: α12101'' <: ((α13184'',) -> α13185''''), α13184'' <: ((α13188'''',) -> α13186'''')}›  <!<  ((α13123'',) -> α13124'')
//│ ╟── while constraining:  ‹∀ 3. {(α13188'''' -> α13187'''') where: α12101'' <: ((α13184'',) -> α13185''''), α13184'' <: ((α13188'''',) -> α13186'''')}›  <!<  α13122''
//│ ╟── while constraining:  (α13184'' -> ‹∀ 3. {(α13188'''' -> α13187'''') where: α12101'' <: ((α13184'',) -> α13185''''), α13184'' <: ((α13188'''',) -> α13186'''')}›)  <!<  ((α13117'',) -> α13122'')
//│ ╟── while constraining:  ‹∀ 2. (α12100''' -> ‹∀ 3. {(α12111'''' -> α12110'''') where: α12101'' <: ((α12100''',) -> α12108''''), α12100''' <: ((α12111'''',) -> α12109'''')}›)›  <!<  ((α13117'',) -> α13122'')
//│ ╟── while constraining:  α12101''  <!<  ((α13117'',) -> α13122'')
//│ ╟── while constraining:  {(α13125'' -> α13124'') where: α12101'' <: ((α13117'',) -> α13122''), α13117'' <: ((α13125'',) -> α13123'')}  <!<  ((α13056'',) -> α13057'')
//│ ╟── while constraining:  ‹∀ 3. {(α13121'''' -> α13120'''') where: α12101'' <: ((α13117'',) -> α13118''''), α13117'' <: ((α13121'''',) -> α13119'''')}›  <!<  ((α13056'',) -> α13057'')
//│ ╟── while constraining:  ‹∀ 3. {(α13121'''' -> α13120'''') where: α12101'' <: ((α13117'',) -> α13118''''), α13117'' <: ((α13121'''',) -> α13119'''')}›  <!<  α13055''
//│ ╟── while constraining:  (α13117'' -> ‹∀ 3. {(α13121'''' -> α13120'''') where: α12101'' <: ((α13117'',) -> α13118''''), α13117'' <: ((α13121'''',) -> α13119'''')}›)  <!<  ((α13050'',) -> α13055'')
//│ ╟── while constraining:  ‹∀ 2. (α12100''' -> ‹∀ 3. {(α12111'''' -> α12110'''') where: α12101'' <: ((α12100''',) -> α12108''''), α12100''' <: ((α12111'''',) -> α12109'''')}›)›  <!<  ((α13050'',) -> α13055'')
//│ ╟── while constraining:  α12101''  <!<  ((α13050'',) -> α13055'')
//│ ╟── while constraining:  {(α13058'' -> α13057'') where: α12101'' <: ((α13050'',) -> α13055''), α13050'' <: ((α13058'',) -> α13056'')}  <!<  ((α12989'',) -> α12990'')
//│ ╟── while constraining:  ‹∀ 3. {(α13054'''' -> α13053'''') where: α12101'' <: ((α13050'',) -> α13051''''), α13050'' <: ((α13054'''',) -> α13052'''')}›  <!<  ((α12989'',) -> α12990'')
//│ ╟── while constraining:  ‹∀ 3. {(α13054'''' -> α13053'''') where: α12101'' <: ((α13050'',) -> α13051''''), α13050'' <: ((α13054'''',) -> α13052'''')}›  <!<  α12988''
//│ ╟── while constraining:  (α13050'' -> ‹∀ 3. {(α13054'''' -> α13053'''') where: α12101'' <: ((α13050'',) -> α13051''''), α13050'' <: ((α13054'''',) -> α13052'''')}›)  <!<  ((α12983'',) -> α12988'')
//│ ╟── while constraining:  ‹∀ 2. (α12100''' -> ‹∀ 3. {(α12111'''' -> α12110'''') where: α12101'' <: ((α12100''',) -> α12108''''), α12100''' <: ((α12111'''',) -> α12109'''')}›)›  <!<  ((α12983'',) -> α12988'')
//│ ╟── while constraining:  α12101''  <!<  ((α12983'',) -> α12988'')
//│ ╟── while constraining:  {(α12991'' -> α12990'') where: α12101'' <: ((α12983'',) -> α12988''), α12983'' <: ((α12991'',) -> α12989'')}  <!<  ((α12922'',) -> α12923'')
//│ ╟── while constraining:  ‹∀ 3. {(α12987'''' -> α12986'''') where: α12101'' <: ((α12983'',) -> α12984''''), α12983'' <: ((α12987'''',) -> α12985'''')}›  <!<  ((α12922'',) -> α12923'')
//│ ╟── while constraining:  ‹∀ 3. {(α12987'''' -> α12986'''') where: α12101'' <: ((α12983'',) -> α12984''''), α12983'' <: ((α12987'''',) -> α12985'''')}›  <!<  α12921''
//│ ╟── while constraining:  (α12983'' -> ‹∀ 3. {(α12987'''' -> α12986'''') where: α12101'' <: ((α12983'',) -> α12984''''), α12983'' <: ((α12987'''',) -> α12985'''')}›)  <!<  ((α12916'',) -> α12921'')
//│ ╟── while constraining:  ‹∀ 2. (α12100''' -> ‹∀ 3. {(α12111'''' -> α12110'''') where: α12101'' <: ((α12100''',) -> α12108''''), α12100''' <: ((α12111'''',) -> α12109'''')}›)›  <!<  ((α12916'',) -> α12921'')
//│ ╟── while constraining:  α12101''  <!<  ((α12916'',) -> α12921'')
//│ ╟── while constraining:  {(α12924'' -> α12923'') where: α12101'' <: ((α12916'',) -> α12921''), α12916'' <: ((α12924'',) -> α12922'')}  <!<  ((α12855'',) -> α12856'')
//│ ╟── while constraining:  ‹∀ 3. {(α12920'''' -> α12919'''') where: α12101'' <: ((α12916'',) -> α12917''''), α12916'' <: ((α12920'''',) -> α12918'''')}›  <!<  ((α12855'',) -> α12856'')
//│ ╟── while constraining:  ‹∀ 3. {(α12920'''' -> α12919'''') where: α12101'' <: ((α12916'',) -> α12917''''), α12916'' <: ((α12920'''',) -> α12918'''')}›  <!<  α12854''
//│ ╟── while constraining:  (α12916'' -> ‹∀ 3. {(α12920'''' -> α12919'''') where: α12101'' <: ((α12916'',) -> α12917''''), α12916'' <: ((α12920'''',) -> α12918'''')}›)  <!<  ((α12849'',) -> α12854'')
//│ ╟── while constraining:  ‹∀ 2. (α12100''' -> ‹∀ 3. {(α12111'''' -> α12110'''') where: α12101'' <: ((α12100''',) -> α12108''''), α12100''' <: ((α12111'''',) -> α12109'''')}›)›  <!<  ((α12849'',) -> α12854'')
//│ ╟── while constraining:  α12101''  <!<  ((α12849'',) -> α12854'')
//│ ╟── while constraining:  {(α12857'' -> α12856'') where: α12101'' <: ((α12849'',) -> α12854''), α12849'' <: ((α12857'',) -> α12855'')}  <!<  ((α12788'',) -> α12789'')
//│ ╟── while constraining:  ‹∀ 3. {(α12853'''' -> α12852'''') where: α12101'' <: ((α12849'',) -> α12850''''), α12849'' <: ((α12853'''',) -> α12851'''')}›  <!<  ((α12788'',) -> α12789'')
//│ ╟── while constraining:  ‹∀ 3. {(α12853'''' -> α12852'''') where: α12101'' <: ((α12849'',) -> α12850''''), α12849'' <: ((α12853'''',) -> α12851'''')}›  <!<  α12787''
//│ ╟── while constraining:  (α12849'' -> ‹∀ 3. {(α12853'''' -> α12852'''') where: α12101'' <: ((α12849'',) -> α12850''''), α12849'' <: ((α12853'''',) -> α12851'''')}›)  <!<  ((α12782'',) -> α12787'')
//│ ╟── while constraining:  ‹∀ 2. (α12100''' -> ‹∀ 3. {(α12111'''' -> α12110'''') where: α12101'' <: ((α12100''',) -> α12108''''), α12100''' <: ((α12111'''',) -> α12109'''')}›)›  <!<  ((α12782'',) -> α12787'')
//│ ╟── while constraining:  α12101''  <!<  ((α12782'',) -> α12787'')
//│ ╟── while constraining:  {(α12790'' -> α12789'') where: α12101'' <: ((α12782'',) -> α12787''), α12782'' <: ((α12790'',) -> α12788'')}  <!<  ((α12721'',) -> α12722'')
//│ ╟── while constraining:  ‹∀ 3. {(α12786'''' -> α12785'''') where: α12101'' <: ((α12782'',) -> α12783''''), α12782'' <: ((α12786'''',) -> α12784'''')}›  <!<  ((α12721'',) -> α12722'')
//│ ╟── while constraining:  ‹∀ 3. {(α12786'''' -> α12785'''') where: α12101'' <: ((α12782'',) -> α12783''''), α12782'' <: ((α12786'''',) -> α12784'''')}›  <!<  α12720''
//│ ╟── while constraining:  (α12782'' -> ‹∀ 3. {(α12786'''' -> α12785'''') where: α12101'' <: ((α12782'',) -> α12783''''), α12782'' <: ((α12786'''',) -> α12784'''')}›)  <!<  ((α12715'',) -> α12720'')
//│ ╟── while constraining:  ‹∀ 2. (α12100''' -> ‹∀ 3. {(α12111'''' -> α12110'''') where: α12101'' <: ((α12100''',) -> α12108''''), α12100''' <: ((α12111'''',) -> α12109'''')}›)›  <!<  ((α12715'',) -> α12720'')
//│ ╟── while constraining:  α12101''  <!<  ((α12715'',) -> α12720'')
//│ ╟── while constraining:  {(α12723'' -> α12722'') where: α12101'' <: ((α12715'',) -> α12720''), α12715'' <: ((α12723'',) -> α12721'')}  <!<  ((α12654'',) -> α12655'')
//│ ╟── while constraining:  ‹∀ 3. {(α12719'''' -> α12718'''') where: α12101'' <: ((α12715'',) -> α12716''''), α12715'' <: ((α12719'''',) -> α12717'''')}›  <!<  ((α12654'',) -> α12655'')
//│ ╟── while constraining:  ‹∀ 3. {(α12719'''' -> α12718'''') where: α12101'' <: ((α12715'',) -> α12716''''), α12715'' <: ((α12719'''',) -> α12717'''')}›  <!<  α12653''
//│ ╟── while constraining:  (α12715'' -> ‹∀ 3. {(α12719'''' -> α12718'''') where: α12101'' <: ((α12715'',) -> α12716''''), α12715'' <: ((α12719'''',) -> α12717'''')}›)  <!<  ((α12648'',) -> α12653'')
//│ ╟── while constraining:  ‹∀ 2. (α12100''' -> ‹∀ 3. {(α12111'''' -> α12110'''') where: α12101'' <: ((α12100''',) -> α12108''''), α12100''' <: ((α12111'''',) -> α12109'''')}›)›  <!<  ((α12648'',) -> α12653'')
//│ ╟── while constraining:  α12101''  <!<  ((α12648'',) -> α12653'')
//│ ╟── while constraining:  {(α12656'' -> α12655'') where: α12101'' <: ((α12648'',) -> α12653''), α12648'' <: ((α12656'',) -> α12654'')}  <!<  ((α12587'',) -> α12588'')
//│ ╟── while constraining:  ‹∀ 3. {(α12652'''' -> α12651'''') where: α12101'' <: ((α12648'',) -> α12649''''), α12648'' <: ((α12652'''',) -> α12650'''')}›  <!<  ((α12587'',) -> α12588'')
//│ ╟── while constraining:  ‹∀ 3. {(α12652'''' -> α12651'''') where: α12101'' <: ((α12648'',) -> α12649''''), α12648'' <: ((α12652'''',) -> α12650'''')}›  <!<  α12586''
//│ ╟── while constraining:  (α12648'' -> ‹∀ 3. {(α12652'''' -> α12651'''') where: α12101'' <: ((α12648'',) -> α12649''''), α12648'' <: ((α12652'''',) -> α12650'''')}›)  <!<  ((α12581'',) -> α12586'')
//│ ╟── while constraining:  ‹∀ 2. (α12100''' -> ‹∀ 3. {(α12111'''' -> α12110'''') where: α12101'' <: ((α12100''',) -> α12108''''), α12100''' <: ((α12111'''',) -> α12109'''')}›)›  <!<  ((α12581'',) -> α12586'')
//│ ╟── while constraining:  α12101''  <!<  ((α12581'',) -> α12586'')
//│ ╟── while constraining:  {(α12589'' -> α12588'') where: α12101'' <: ((α12581'',) -> α12586''), α12581'' <: ((α12589'',) -> α12587'')}  <!<  ((α12520'',) -> α12521'')
//│ ╟── while constraining:  ‹∀ 3. {(α12585'''' -> α12584'''') where: α12101'' <: ((α12581'',) -> α12582''''), α12581'' <: ((α12585'''',) -> α12583'''')}›  <!<  ((α12520'',) -> α12521'')
//│ ╟── while constraining:  ‹∀ 3. {(α12585'''' -> α12584'''') where: α12101'' <: ((α12581'',) -> α12582''''), α12581'' <: ((α12585'''',) -> α12583'''')}›  <!<  α12519''
//│ ╟── while constraining:  (α12581'' -> ‹∀ 3. {(α12585'''' -> α12584'''') where: α12101'' <: ((α12581'',) -> α12582''''), α12581'' <: ((α12585'''',) -> α12583'''')}›)  <!<  ((α12514'',) -> α12519'')
//│ ╟── while constraining:  ‹∀ 2. (α12100''' -> ‹∀ 3. {(α12111'''' -> α12110'''') where: α12101'' <: ((α12100''',) -> α12108''''), α12100''' <: ((α12111'''',) -> α12109'''')}›)›  <!<  ((α12514'',) -> α12519'')
//│ ╟── while constraining:  α12101''  <!<  ((α12514'',) -> α12519'')
//│ ╟── while constraining:  {(α12522'' -> α12521'') where: α12101'' <: ((α12514'',) -> α12519''), α12514'' <: ((α12522'',) -> α12520'')}  <!<  ((α12453'',) -> α12454'')
//│ ╟── while constraining:  ‹∀ 3. {(α12518'''' -> α12517'''') where: α12101'' <: ((α12514'',) -> α12515''''), α12514'' <: ((α12518'''',) -> α12516'''')}›  <!<  ((α12453'',) -> α12454'')
//│ ╟── while constraining:  ‹∀ 3. {(α12518'''' -> α12517'''') where: α12101'' <: ((α12514'',) -> α12515''''), α12514'' <: ((α12518'''',) -> α12516'''')}›  <!<  α12452''
//│ ╟── while constraining:  (α12514'' -> ‹∀ 3. {(α12518'''' -> α12517'''') where: α12101'' <: ((α12514'',) -> α12515''''), α12514'' <: ((α12518'''',) -> α12516'''')}›)  <!<  ((α12447'',) -> α12452'')
//│ ╟── while constraining:  ‹∀ 2. (α12100''' -> ‹∀ 3. {(α12111'''' -> α12110'''') where: α12101'' <: ((α12100''',) -> α12108''''), α12100''' <: ((α12111'''',) -> α12109'''')}›)›  <!<  ((α12447'',) -> α12452'')
//│ ╟── while constraining:  α12101''  <!<  ((α12447'',) -> α12452'')
//│ ╟── while constraining:  {(α12455'' -> α12454'') where: α12101'' <: ((α12447'',) -> α12452''), α12447'' <: ((α12455'',) -> α12453'')}  <!<  ((α12386'',) -> α12387'')
//│ ╟── while constraining:  ‹∀ 3. {(α12451'''' -> α12450'''') where: α12101'' <: ((α12447'',) -> α12448''''), α12447'' <: ((α12451'''',) -> α12449'''')}›  <!<  ((α12386'',) -> α12387'')
//│ ╟── while constraining:  ‹∀ 3. {(α12451'''' -> α12450'''') where: α12101'' <: ((α12447'',) -> α12448''''), α12447'' <: ((α12451'''',) -> α12449'''')}›  <!<  α12385''
//│ ╟── while constraining:  (α12447'' -> ‹∀ 3. {(α12451'''' -> α12450'''') where: α12101'' <: ((α12447'',) -> α12448''''), α12447'' <: ((α12451'''',) -> α12449'''')}›)  <!<  ((α12380'',) -> α12385'')
//│ ╟── while constraining:  ‹∀ 2. (α12100''' -> ‹∀ 3. {(α12111'''' -> α12110'''') where: α12101'' <: ((α12100''',) -> α12108''''), α12100''' <: ((α12111'''',) -> α12109'''')}›)›  <!<  ((α12380'',) -> α12385'')
//│ ╟── while constraining:  α12101''  <!<  ((α12380'',) -> α12385'')
//│ ╟── while constraining:  {(α12388'' -> α12387'') where: α12101'' <: ((α12380'',) -> α12385''), α12380'' <: ((α12388'',) -> α12386'')}  <!<  ((α12319'',) -> α12320'')
//│ ╟── while constraining:  ‹∀ 3. {(α12384'''' -> α12383'''') where: α12101'' <: ((α12380'',) -> α12381''''), α12380'' <: ((α12384'''',) -> α12382'''')}›  <!<  ((α12319'',) -> α12320'')
//│ ╟── while constraining:  ‹∀ 3. {(α12384'''' -> α12383'''') where: α12101'' <: ((α12380'',) -> α12381''''), α12380'' <: ((α12384'''',) -> α12382'''')}›  <!<  α12318''
//│ ╟── while constraining:  (α12380'' -> ‹∀ 3. {(α12384'''' -> α12383'''') where: α12101'' <: ((α12380'',) -> α12381''''), α12380'' <: ((α12384'''',) -> α12382'''')}›)  <!<  ((α12313'',) -> α12318'')
//│ ╟── while constraining:  ‹∀ 2. (α12100''' -> ‹∀ 3. {(α12111'''' -> α12110'''') where: α12101'' <: ((α12100''',) -> α12108''''), α12100''' <: ((α12111'''',) -> α12109'''')}›)›  <!<  ((α12313'',) -> α12318'')
//│ ╟── while constraining:  α12101''  <!<  ((α12313'',) -> α12318'')
//│ ╟── while constraining:  {(α12321'' -> α12320'') where: α12101'' <: ((α12313'',) -> α12318''), α12313'' <: ((α12321'',) -> α12319'')}  <!<  ((α12252'',) -> α12253'')
//│ ╟── while constraining:  ‹∀ 3. {(α12317'''' -> α12316'''') where: α12101'' <: ((α12313'',) -> α12314''''), α12313'' <: ((α12317'''',) -> α12315'''')}›  <!<  ((α12252'',) -> α12253'')
//│ ╟── while constraining:  ‹∀ 3. {(α12317'''' -> α12316'''') where: α12101'' <: ((α12313'',) -> α12314''''), α12313'' <: ((α12317'''',) -> α12315'''')}›  <!<  α12251''
//│ ╟── while constraining:  (α12313'' -> ‹∀ 3. {(α12317'''' -> α12316'''') where: α12101'' <: ((α12313'',) -> α12314''''), α12313'' <: ((α12317'''',) -> α12315'''')}›)  <!<  ((α12246'',) -> α12251'')
//│ ╟── while constraining:  ‹∀ 2. (α12100''' -> ‹∀ 3. {(α12111'''' -> α12110'''') where: α12101'' <: ((α12100''',) -> α12108''''), α12100''' <: ((α12111'''',) -> α12109'''')}›)›  <!<  ((α12246'',) -> α12251'')
//│ ╟── while constraining:  α12101''  <!<  ((α12246'',) -> α12251'')
//│ ╟── while constraining:  {(α12254'' -> α12253'') where: α12101'' <: ((α12246'',) -> α12251''), α12246'' <: ((α12254'',) -> α12252'')}  <!<  ((α12185'',) -> α12186'')
//│ ╟── while constraining:  ‹∀ 3. {(α12250'''' -> α12249'''') where: α12101'' <: ((α12246'',) -> α12247''''), α12246'' <: ((α12250'''',) -> α12248'''')}›  <!<  ((α12185'',) -> α12186'')
//│ ╟── while constraining:  ‹∀ 3. {(α12250'''' -> α12249'''') where: α12101'' <: ((α12246'',) -> α12247''''), α12246'' <: ((α12250'''',) -> α12248'''')}›  <!<  α12184''
//│ ╟── while constraining:  (α12246'' -> ‹∀ 3. {(α12250'''' -> α12249'''') where: α12101'' <: ((α12246'',) -> α12247''''), α12246'' <: ((α12250'''',) -> α12248'''')}›)  <!<  ((α12179'',) -> α12184'')
//│ ╟── while constraining:  ‹∀ 2. (α12100''' -> ‹∀ 3. {(α12111'''' -> α12110'''') where: α12101'' <: ((α12100''',) -> α12108''''), α12100''' <: ((α12111'''',) -> α12109'''')}›)›  <!<  ((α12179'',) -> α12184'')
//│ ╟── while constraining:  α12101''  <!<  ((α12179'',) -> α12184'')
//│ ╟── while constraining:  {(α12187'' -> α12186'') where: α12101'' <: ((α12179'',) -> α12184''), α12179'' <: ((α12187'',) -> α12185'')}  <!<  ((α12118'',) -> α12119'')
//│ ╟── while constraining:  ‹∀ 3. {(α12183'''' -> α12182'''') where: α12101'' <: ((α12179'',) -> α12180''''), α12179'' <: ((α12183'''',) -> α12181'''')}›  <!<  ((α12118'',) -> α12119'')
//│ ╟── while constraining:  ‹∀ 3. {(α12183'''' -> α12182'''') where: α12101'' <: ((α12179'',) -> α12180''''), α12179'' <: ((α12183'''',) -> α12181'''')}›  <!<  α12117''
//│ ╟── while constraining:  (α12179'' -> ‹∀ 3. {(α12183'''' -> α12182'''') where: α12101'' <: ((α12179'',) -> α12180''''), α12179'' <: ((α12183'''',) -> α12181'''')}›)  <!<  ((α12112'',) -> α12117'')
//│ ╟── while constraining:  ‹∀ 2. (α12100''' -> ‹∀ 3. {(α12111'''' -> α12110'''') where: α12101'' <: ((α12100''',) -> α12108''''), α12100''' <: ((α12111'''',) -> α12109'''')}›)›  <!<  ((α12112'',) -> α12117'')
//│ ╟── while constraining:  α12101''  <!<  ((α12112'',) -> α12117'')
//│ ╟── while constraining:  {(α12120'' -> α12119'') where: α12101'' <: ((α12112'',) -> α12117''), α12112'' <: ((α12120'',) -> α12118'')}  <!<  ((‹∀ 0. ‹∀ 1. (α9565'' -> ‹∀ 2. (α9566''' -> α9566''')›)››,) -> α12096'')
//│ ╟── while constraining:  ‹∀ 3. {(α12116'''' -> α12115'''') where: α12101'' <: ((α12112'',) -> α12113''''), α12112'' <: ((α12116'''',) -> α12114'''')}›  <!<  ((‹∀ 0. ‹∀ 1. (α9565'' -> ‹∀ 2. (α9566''' -> α9566''')›)››,) -> α12096'')
//│ ╟── while constraining:  ‹∀ 3. {(α12116'''' -> α12115'''') where: α12101'' <: ((α12112'',) -> α12113''''), α12112'' <: ((α12116'''',) -> α12114'''')}›  <!<  α12095''
//│ ╟── while constraining:  (α12112'' -> ‹∀ 3. {(α12116'''' -> α12115'''') where: α12101'' <: ((α12112'',) -> α12113''''), α12112'' <: ((α12116'''',) -> α12114'''')}›)  <!<  ((α12094'',) -> α12095'')
//│ ╟── while constraining:  ‹∀ 2. (α12100''' -> ‹∀ 3. {(α12111'''' -> α12110'''') where: α12101'' <: ((α12100''',) -> α12108''''), α12100''' <: ((α12111'''',) -> α12109'''')}›)›  <!<  ((α12094'',) -> α12095'')
//│ ╟── while constraining:  α12099''  <!<  ((α12094'',) -> α12095'')
//│ ╟── while constraining:  ‹∀ 1. α12053''›  <!<  ((α12094'',) -> α12095'')
//│ ╟── while constraining:  α12087''  <!<  ((α12094'',) -> α12095'')
//│ ╟── while constraining:  {(α12097'' -> α12096'') where: α12087'' <: ((α12094'',) -> α12095'')}  <!<  ((‹∀ 0. α10229'›,) -> α12093'')
//│ ╟── while constraining:  ‹∀ 2. {(α12091''' -> α12090''') where: α12087'' <: ((α12088''',) -> α12089''')}›  <!<  ((‹∀ 0. α10229'›,) -> α12093'')
//│ ╙── while constraining:  α12086''  <!<  ((‹∀ 0. α10229'›,) -> α12093'')
//│ this_should_be_98': string
//│                   = '98'

//   print_fact2 0 ;
//   print_fact2 1 ;
//   print_fact2 2 ;
//   print_fact2 3 ;
//   print_fact2 4 ;
//   print_fact2 5 ;
//   print_fact2 6 ;
//   ()
print_fact2 0
print_fact2 1
print_fact2 2
print_fact2 3
print_fact2 4
print_fact2 5
print_fact2 6
//│ res: string
//│    = 'Factorial 0 = 1'
//│ res: string
//│    = 'Factorial 1 = 1'
//│ res: string
//│    = 'Factorial 2 = 2'
//│ res: string
//│    = 'Factorial 3 = 6'
//│ res: string
//│    = 'Factorial 4 = 24'
//│ res: string
//│    = 'Factorial 5 = 120'
//│ res: string
//│    = 'Factorial 6 = 720'

print_fact2' 0
print_fact2' 1
print_fact2' 2
print_fact2' 3
print_fact2' 4
print_fact2' 5
print_fact2' 6
//│ res: string
//│    = 'Factorial 6 = 720'
//│ res: string
//│    = 'Factorial 6 = 720'
//│ res: string
//│    = 'Factorial 6 = 720'
//│ res: string
//│    = 'Factorial 6 = 720'
//│ res: string
//│    = 'Factorial 6 = 720'
//│ res: string
//│    = 'Factorial 6 = 720'
//│ res: string
//│    = 'Factorial 6 = 720'



