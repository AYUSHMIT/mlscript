:GeneralizeCurriedFunctions

// (*** L'annotation est n�cessaire sur z, mais z n'est utilis� qu'une seule fois. ***)
// type sid = ['a] 'a -> 'a
type Sid = forall 'a. 'a -> 'a
//│ Defined type alias Sid

// let t (z:sid) = ( (fun a -> z) : ['a,'b] 'b -> 'a -> 'a )
def t (z: Sid) = (fun a -> z) : forall 'a 'b. 'b -> 'a -> 'a
//│ t: Sid -> (forall 'a. anything -> 'a -> 'a)
//│  = [Function: t]

// (* Une seule instance, mais polymorphe. *)
// let t z = ( (fun a -> z) : ['a,'b] 'b -> 'a -> 'a );;
def t z = (fun a -> z) : forall 'a 'b. 'b -> 'a -> 'a
//│ t: (‘a -> ‘a) -> (forall 'a. anything -> 'a -> 'a)
//│  = [Function: t1]

def t z = fun a -> z
//│ t: 'a -> anything -> 'a
//│  = [Function: t2]


// (*** Ne type pas avec les value-restriction. Emb�tant. ***)

// type Int = ['a] ('a -> 'a) -> ('a -> 'a)
// ;;
type ChurchInt = forall 'a. ('a -> 'a) -> ('a -> 'a)
//│ Defined type alias ChurchInt

// let zero f x = x
// ;;
def zero f x = x
//│ zero: anything -> (forall 'a. 'a -> 'a)
//│     = [Function: zero]

// let succ (n:Int) = fun f x -> f (n f x)
// ;;
def succ (n: ChurchInt) = fun f -> fun x -> f (n f x)
def succ' n = fun f -> fun x -> f (n f x)
//│ succ: ChurchInt -> (forall 'a. 'a -> (forall 'a, 'b, 'c, 'd. ('b -> 'd
//│   where
//│     'e <: 'a -> 'b -> 'c
//│     'a <: 'c -> 'd)))
//│     = [Function: succ]
//│ succ': 'a -> (forall 'b. 'b -> (forall 'b, 'c, 'd, 'e. ('e -> 'd
//│   where
//│     'b <: 'c -> 'd
//│     'a <: 'b -> 'e -> 'c)))
//│      = [Function: succ]

// let rec to_church n =
//   if n = 0 then zero
//   else succ (to_church (n-1))
// ;;
// FIXME: only works with explicit declaration for `succ`
//        might be an instance when we need constrained types to get the principal type
// def succ: ChurchInt -> ChurchInt
rec def to_church n =
  if n == 0 then zero
  else succ (to_church (n - 1))
rec def to_church' n =
  if n == 0 then zero
  else succ' (to_church' (n - 1))
//│ to_church: int -> (forall 'a. 'a -> (forall 'a, 'b, 'c, 'd, 'e. (('e & 'b) -> ('e | 'd)
//│   where
//│     'f <: 'a -> 'b -> 'c
//│     'a <: 'c -> 'd))) | 'to_church
//│   where
//│     'to_church <: int -> ChurchInt
//│          = [Function: to_church]
//│ to_church': int -> (forall 'a. 'a -> (forall 'a, 'b, 'c, 'd, 'e. (('e & 'd) -> ('e | 'c)
//│   where
//│     'a <: 'b -> 'c
//│     'f <: 'a -> 'd -> 'b))) | 'to_church'
//│   where
//│     'to_church' <: int -> anything
//│           = [Function: to_church]

// (* Marche *)
// let rec to_church n =
//   if n = 0 then fun f x -> x
//   else fun f x -> f ((to_church (n-1) : Int) f x)
// ;;
rec def to_church n =
  if n == 0 then fun f -> fun x -> x
  else fun f -> fun x -> f ((to_church (n - 1) : ChurchInt) f x)
//│ to_church: int -> (forall 'b. 'b -> (forall 'a, 'c. (('c & 'a) -> 'c
//│   where
//│     'to_church <: int -> ChurchInt
//│     'b <: 'a -> 'a & 'a -> 'c))) | 'to_church
//│          = [Function: to_church1]

// (* Ne Marche Pas *)
// let rec to_church n =
//   if n = 0 then fun f x -> x
//   else (fun f x -> f ((to_church (n-1)) f x) : Int)
// ;;
rec def to_church n =
  if n == 0 then fun f -> fun x -> x
  else fun f -> fun x -> f ((to_church (n - 1)) f x) : ChurchInt
//│ to_church: int -> (forall 'a. 'a -> (forall 'a, 'b, 'c. ('c -> (ChurchInt | 'c)
//│   where
//│     'a <: 'b -> ChurchInt
//│     'to_church <: int -> 'a -> 'c -> 'b))) | 'to_church
//│          = [Function: to_church2]


// (* La r�cursion est monomorphe. *)
// let rec to_church n =
//   if n = 0 then fun f x -> x
//   else fun f x -> f ((to_church (n-1)) f x)
// ;;
rec def to_church n =
  if n == 0 then fun f -> fun x -> x
  else fun f -> fun x -> f ((to_church (n - 1)) f x)
//│ to_church: int -> (forall 'a. 'a -> (forall 'a, 'b, 'c, 'd. (('d & 'b) -> 'd
//│   where
//│     'to_church <: int -> 'a -> 'b -> 'c
//│     'a <: 'c -> 'd))) | 'to_church
//│          = [Function: to_church3]

// (* Echoue avec la value restriction. *)
// let rec (to_church:int -> Int) n =
//   if n = 0 then fun f x -> x
//   else fun f x -> f ((to_church (n-1)) f x)
// ;;
// FIXME: principal type for constrained types
def to_church: int -> ChurchInt
rec def to_church n =
  if n == 0 then fun f -> fun x -> x
  else fun f -> fun x -> f ((to_church (n - 1)) f x)
//│ to_church: int -> ChurchInt
//│          = <missing implementation>
//│ int -> (forall 'a. 'a -> (forall 'a, 'b, 'c, 'd. (('c & 'd) -> 'c
//│   where
//│     'a <: 'b -> 'c
//│     'to_church <: int -> 'a -> 'd -> 'b))) | 'to_church
//│   <:  to_church:
//│ int -> ChurchInt
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?a, ?b, ?to_church, ?c, ?d, ?e, ?f, ?g, ?h, ?i, ?j, ?k, ?l, ?m, ?n, ?o, ?p, ?q, ?r, ?s, ?t, ?u, ?v, ?w, ?x, ?y, ?z, ?a1, ?b1, ?c1, ?d1, ?e1, ?f1, ?g1, ?h1, ?i1, ?j1, ?k1, ?l1, ?m1, ?n1, ?o1, ?p1, ?q1, ?r1, ?s1, ?t1, ?u1, ?v1, ?w1, ?x1, ?y1, ?z1, ?a2, ?b2, ?c2, ?d2, ?e2, ?f2, ?g2, ?h2, ?i2, ?j2, ?k2, ?l2, ?m2, ?n2, ?o2, ?p2, ?q2, ?r2, ?s2, ?t2, ?u2, ?v2, ?w2, ?x2, ?y2, ?z2, ?a3, ?b3, ?c3, ?d3, ?e3, ?f3, ?g3, ?h3, ?i3, ?j3, ?k3, ?l3, ?m3, ?n3, ?o3, ?p3, ?q3, ?r3, ?s3, ?t3, ?u3, ?v3, ?w3, ?x3, ?y3, ?z3, ?a4, ?b4, ?c4, ?d4, ?e4, ?f4, ?g4, ?h4, ?i4, ?j4, ?k4, ?l4, ?m4, ?n4, ?o4, ?p4, ?q4, ?r4, ?s4, ?t4, ?u4, ?v4, ?w4, ?x4, ?y4, ?z4, ?a5, ?b5, ?c5, ?d5, ?e5, ?f5, ?g5, ?h5, ?i5, ?j5, ?k5, ?l5, ?m5, ?n5, ?o5, ?p5, ?q5, ?r5, ?s5, ?t5, ?u5, ?v5, ?w5, ?x5, ?y5, ?z5, ?a6, ?b6, ?c6, ?d6, ?e6, ?f6. ?to_church <: int -> ChurchInt` exceeded recursion depth limit (400)
//│ ║  l.105: 	rec def to_church n =
//│ ║         	^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.106: 	  if n == 0 then fun f -> fun x -> x
//│ ║         	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.107: 	  else fun f -> fun x -> f ((to_church (n - 1)) f x)
//│ ║         	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── while constraining:  α444'  <!<  α782'
//│ ╟── while constraining:  α475'  <!<  α782'
//│ ╟── while constraining:  α506'  <!<  α782'
//│ ╟── while constraining:  α537'  <!<  α782'
//│ ╟── while constraining:  α568'  <!<  α782'
//│ ╟── while constraining:  α599'  <!<  α782'
//│ ╟── while constraining:  α630'  <!<  α782'
//│ ╟── while constraining:  α661'  <!<  α782'
//│ ╟── while constraining:  α692'  <!<  α782'
//│ ╟── while constraining:  α723'  <!<  α782'
//│ ╟── while constraining:  α754'  <!<  α782'
//│ ╟── while constraining:  α785'  <!<  α782'
//│ ╟── while constraining:  α785'  <!<  α804''
//│ ╟── while constraining:  (α785',)  <!<  (α804'',)
//│ ╟── while constraining:  (α804'' -> ‹∀ 3. (α310''' <: ((α805'''',) -> α806''''), to_church301' <: ((α807'''',) -> α808'''') => (α810'''' -> α806''''))›)  <!<  ((α785',) -> α797')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  ((α785',) -> α797')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  α796'
//│ ╟── while constraining:  α801''  <!<  α796'
//│ ╟── while constraining:  (α800'' -> α801'')  <!<  ((α795',) -> α796')
//│ ╟── while constraining:  ‹∀ 1. (α302'' -> α318'')›  <!<  ((α795',) -> α796')
//│ ╟── while constraining:  to_church301'  <!<  ((α795',) -> α796')
//│ ╟── while constraining:  to_church301'  <!<  ((α789'',) -> α790'')
//│ ╟── while constraining:  (α782' <: ((α787'',) -> α788''), to_church301' <: ((α789'',) -> α790'') => (α792'' -> α788''))  <!<  ((α767',) -> α768')
//│ ╟── while constraining:  ‹∀ 3. (α782' <: ((α774'''',) -> α775''''), to_church301' <: ((α783'''',) -> α784'''') => (α779'''' -> α775''''))›  <!<  ((α767',) -> α768')
//│ ╟── while constraining:  ‹∀ 3. (α782' <: ((α774'''',) -> α775''''), to_church301' <: ((α783'''',) -> α784'''') => (α779'''' -> α775''''))›  <!<  α766'
//│ ╟── while constraining:  ‹∀ 3. (α310''' <: ((α774'''',) -> α775''''), to_church301' <: ((α776'''',) -> α777'''') => (α779'''' -> α775''''))›  <!<  α766'
//│ ╟── while constraining:  (α773'' -> ‹∀ 3. (α310''' <: ((α774'''',) -> α775''''), to_church301' <: ((α776'''',) -> α777'''') => (α779'''' -> α775''''))›)  <!<  ((α754',) -> α766')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  ((α754',) -> α766')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  α765'
//│ ╟── while constraining:  α770''  <!<  α765'
//│ ╟── while constraining:  (α769'' -> α770'')  <!<  ((α764',) -> α765')
//│ ╟── while constraining:  ‹∀ 1. (α302'' -> α318'')›  <!<  ((α764',) -> α765')
//│ ╟── while constraining:  to_church301'  <!<  ((α764',) -> α765')
//│ ╟── while constraining:  to_church301'  <!<  ((α758'',) -> α759'')
//│ ╟── while constraining:  (α751' <: ((α756'',) -> α757''), to_church301' <: ((α758'',) -> α759'') => (α761'' -> α757''))  <!<  ((α736',) -> α737')
//│ ╟── while constraining:  ‹∀ 3. (α751' <: ((α743'''',) -> α744''''), to_church301' <: ((α752'''',) -> α753'''') => (α748'''' -> α744''''))›  <!<  ((α736',) -> α737')
//│ ╟── while constraining:  ‹∀ 3. (α751' <: ((α743'''',) -> α744''''), to_church301' <: ((α752'''',) -> α753'''') => (α748'''' -> α744''''))›  <!<  α735'
//│ ╟── while constraining:  ‹∀ 3. (α310''' <: ((α743'''',) -> α744''''), to_church301' <: ((α745'''',) -> α746'''') => (α748'''' -> α744''''))›  <!<  α735'
//│ ╟── while constraining:  (α742'' -> ‹∀ 3. (α310''' <: ((α743'''',) -> α744''''), to_church301' <: ((α745'''',) -> α746'''') => (α748'''' -> α744''''))›)  <!<  ((α723',) -> α735')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  ((α723',) -> α735')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  α734'
//│ ╟── while constraining:  α739''  <!<  α734'
//│ ╟── while constraining:  (α738'' -> α739'')  <!<  ((α733',) -> α734')
//│ ╟── while constraining:  ‹∀ 1. (α302'' -> α318'')›  <!<  ((α733',) -> α734')
//│ ╟── while constraining:  to_church301'  <!<  ((α733',) -> α734')
//│ ╟── while constraining:  to_church301'  <!<  ((α727'',) -> α728'')
//│ ╟── while constraining:  (α720' <: ((α725'',) -> α726''), to_church301' <: ((α727'',) -> α728'') => (α730'' -> α726''))  <!<  ((α705',) -> α706')
//│ ╟── while constraining:  ‹∀ 3. (α720' <: ((α712'''',) -> α713''''), to_church301' <: ((α721'''',) -> α722'''') => (α717'''' -> α713''''))›  <!<  ((α705',) -> α706')
//│ ╟── while constraining:  ‹∀ 3. (α720' <: ((α712'''',) -> α713''''), to_church301' <: ((α721'''',) -> α722'''') => (α717'''' -> α713''''))›  <!<  α704'
//│ ╟── while constraining:  ‹∀ 3. (α310''' <: ((α712'''',) -> α713''''), to_church301' <: ((α714'''',) -> α715'''') => (α717'''' -> α713''''))›  <!<  α704'
//│ ╟── while constraining:  (α711'' -> ‹∀ 3. (α310''' <: ((α712'''',) -> α713''''), to_church301' <: ((α714'''',) -> α715'''') => (α717'''' -> α713''''))›)  <!<  ((α692',) -> α704')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  ((α692',) -> α704')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  α703'
//│ ╟── while constraining:  α708''  <!<  α703'
//│ ╟── while constraining:  (α707'' -> α708'')  <!<  ((α702',) -> α703')
//│ ╟── while constraining:  ‹∀ 1. (α302'' -> α318'')›  <!<  ((α702',) -> α703')
//│ ╟── while constraining:  to_church301'  <!<  ((α702',) -> α703')
//│ ╟── while constraining:  to_church301'  <!<  ((α696'',) -> α697'')
//│ ╟── while constraining:  (α689' <: ((α694'',) -> α695''), to_church301' <: ((α696'',) -> α697'') => (α699'' -> α695''))  <!<  ((α674',) -> α675')
//│ ╟── while constraining:  ‹∀ 3. (α689' <: ((α681'''',) -> α682''''), to_church301' <: ((α690'''',) -> α691'''') => (α686'''' -> α682''''))›  <!<  ((α674',) -> α675')
//│ ╟── while constraining:  ‹∀ 3. (α689' <: ((α681'''',) -> α682''''), to_church301' <: ((α690'''',) -> α691'''') => (α686'''' -> α682''''))›  <!<  α673'
//│ ╟── while constraining:  ‹∀ 3. (α310''' <: ((α681'''',) -> α682''''), to_church301' <: ((α683'''',) -> α684'''') => (α686'''' -> α682''''))›  <!<  α673'
//│ ╟── while constraining:  (α680'' -> ‹∀ 3. (α310''' <: ((α681'''',) -> α682''''), to_church301' <: ((α683'''',) -> α684'''') => (α686'''' -> α682''''))›)  <!<  ((α661',) -> α673')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  ((α661',) -> α673')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  α672'
//│ ╟── while constraining:  α677''  <!<  α672'
//│ ╟── while constraining:  (α676'' -> α677'')  <!<  ((α671',) -> α672')
//│ ╟── while constraining:  ‹∀ 1. (α302'' -> α318'')›  <!<  ((α671',) -> α672')
//│ ╟── while constraining:  to_church301'  <!<  ((α671',) -> α672')
//│ ╟── while constraining:  to_church301'  <!<  ((α665'',) -> α666'')
//│ ╟── while constraining:  (α658' <: ((α663'',) -> α664''), to_church301' <: ((α665'',) -> α666'') => (α668'' -> α664''))  <!<  ((α643',) -> α644')
//│ ╟── while constraining:  ‹∀ 3. (α658' <: ((α650'''',) -> α651''''), to_church301' <: ((α659'''',) -> α660'''') => (α655'''' -> α651''''))›  <!<  ((α643',) -> α644')
//│ ╟── while constraining:  ‹∀ 3. (α658' <: ((α650'''',) -> α651''''), to_church301' <: ((α659'''',) -> α660'''') => (α655'''' -> α651''''))›  <!<  α642'
//│ ╟── while constraining:  ‹∀ 3. (α310''' <: ((α650'''',) -> α651''''), to_church301' <: ((α652'''',) -> α653'''') => (α655'''' -> α651''''))›  <!<  α642'
//│ ╟── while constraining:  (α649'' -> ‹∀ 3. (α310''' <: ((α650'''',) -> α651''''), to_church301' <: ((α652'''',) -> α653'''') => (α655'''' -> α651''''))›)  <!<  ((α630',) -> α642')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  ((α630',) -> α642')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  α641'
//│ ╟── while constraining:  α646''  <!<  α641'
//│ ╟── while constraining:  (α645'' -> α646'')  <!<  ((α640',) -> α641')
//│ ╟── while constraining:  ‹∀ 1. (α302'' -> α318'')›  <!<  ((α640',) -> α641')
//│ ╟── while constraining:  to_church301'  <!<  ((α640',) -> α641')
//│ ╟── while constraining:  to_church301'  <!<  ((α634'',) -> α635'')
//│ ╟── while constraining:  (α627' <: ((α632'',) -> α633''), to_church301' <: ((α634'',) -> α635'') => (α637'' -> α633''))  <!<  ((α612',) -> α613')
//│ ╟── while constraining:  ‹∀ 3. (α627' <: ((α619'''',) -> α620''''), to_church301' <: ((α628'''',) -> α629'''') => (α624'''' -> α620''''))›  <!<  ((α612',) -> α613')
//│ ╟── while constraining:  ‹∀ 3. (α627' <: ((α619'''',) -> α620''''), to_church301' <: ((α628'''',) -> α629'''') => (α624'''' -> α620''''))›  <!<  α611'
//│ ╟── while constraining:  ‹∀ 3. (α310''' <: ((α619'''',) -> α620''''), to_church301' <: ((α621'''',) -> α622'''') => (α624'''' -> α620''''))›  <!<  α611'
//│ ╟── while constraining:  (α618'' -> ‹∀ 3. (α310''' <: ((α619'''',) -> α620''''), to_church301' <: ((α621'''',) -> α622'''') => (α624'''' -> α620''''))›)  <!<  ((α599',) -> α611')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  ((α599',) -> α611')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  α610'
//│ ╟── while constraining:  α615''  <!<  α610'
//│ ╟── while constraining:  (α614'' -> α615'')  <!<  ((α609',) -> α610')
//│ ╟── while constraining:  ‹∀ 1. (α302'' -> α318'')›  <!<  ((α609',) -> α610')
//│ ╟── while constraining:  to_church301'  <!<  ((α609',) -> α610')
//│ ╟── while constraining:  to_church301'  <!<  ((α603'',) -> α604'')
//│ ╟── while constraining:  (α596' <: ((α601'',) -> α602''), to_church301' <: ((α603'',) -> α604'') => (α606'' -> α602''))  <!<  ((α581',) -> α582')
//│ ╟── while constraining:  ‹∀ 3. (α596' <: ((α588'''',) -> α589''''), to_church301' <: ((α597'''',) -> α598'''') => (α593'''' -> α589''''))›  <!<  ((α581',) -> α582')
//│ ╟── while constraining:  ‹∀ 3. (α596' <: ((α588'''',) -> α589''''), to_church301' <: ((α597'''',) -> α598'''') => (α593'''' -> α589''''))›  <!<  α580'
//│ ╟── while constraining:  ‹∀ 3. (α310''' <: ((α588'''',) -> α589''''), to_church301' <: ((α590'''',) -> α591'''') => (α593'''' -> α589''''))›  <!<  α580'
//│ ╟── while constraining:  (α587'' -> ‹∀ 3. (α310''' <: ((α588'''',) -> α589''''), to_church301' <: ((α590'''',) -> α591'''') => (α593'''' -> α589''''))›)  <!<  ((α568',) -> α580')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  ((α568',) -> α580')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  α579'
//│ ╟── while constraining:  α584''  <!<  α579'
//│ ╟── while constraining:  (α583'' -> α584'')  <!<  ((α578',) -> α579')
//│ ╟── while constraining:  ‹∀ 1. (α302'' -> α318'')›  <!<  ((α578',) -> α579')
//│ ╟── while constraining:  to_church301'  <!<  ((α578',) -> α579')
//│ ╟── while constraining:  to_church301'  <!<  ((α572'',) -> α573'')
//│ ╟── while constraining:  (α565' <: ((α570'',) -> α571''), to_church301' <: ((α572'',) -> α573'') => (α575'' -> α571''))  <!<  ((α550',) -> α551')
//│ ╟── while constraining:  ‹∀ 3. (α565' <: ((α557'''',) -> α558''''), to_church301' <: ((α566'''',) -> α567'''') => (α562'''' -> α558''''))›  <!<  ((α550',) -> α551')
//│ ╟── while constraining:  ‹∀ 3. (α565' <: ((α557'''',) -> α558''''), to_church301' <: ((α566'''',) -> α567'''') => (α562'''' -> α558''''))›  <!<  α549'
//│ ╟── while constraining:  ‹∀ 3. (α310''' <: ((α557'''',) -> α558''''), to_church301' <: ((α559'''',) -> α560'''') => (α562'''' -> α558''''))›  <!<  α549'
//│ ╟── while constraining:  (α556'' -> ‹∀ 3. (α310''' <: ((α557'''',) -> α558''''), to_church301' <: ((α559'''',) -> α560'''') => (α562'''' -> α558''''))›)  <!<  ((α537',) -> α549')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  ((α537',) -> α549')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  α548'
//│ ╟── while constraining:  α553''  <!<  α548'
//│ ╟── while constraining:  (α552'' -> α553'')  <!<  ((α547',) -> α548')
//│ ╟── while constraining:  ‹∀ 1. (α302'' -> α318'')›  <!<  ((α547',) -> α548')
//│ ╟── while constraining:  to_church301'  <!<  ((α547',) -> α548')
//│ ╟── while constraining:  to_church301'  <!<  ((α541'',) -> α542'')
//│ ╟── while constraining:  (α534' <: ((α539'',) -> α540''), to_church301' <: ((α541'',) -> α542'') => (α544'' -> α540''))  <!<  ((α519',) -> α520')
//│ ╟── while constraining:  ‹∀ 3. (α534' <: ((α526'''',) -> α527''''), to_church301' <: ((α535'''',) -> α536'''') => (α531'''' -> α527''''))›  <!<  ((α519',) -> α520')
//│ ╟── while constraining:  ‹∀ 3. (α534' <: ((α526'''',) -> α527''''), to_church301' <: ((α535'''',) -> α536'''') => (α531'''' -> α527''''))›  <!<  α518'
//│ ╟── while constraining:  ‹∀ 3. (α310''' <: ((α526'''',) -> α527''''), to_church301' <: ((α528'''',) -> α529'''') => (α531'''' -> α527''''))›  <!<  α518'
//│ ╟── while constraining:  (α525'' -> ‹∀ 3. (α310''' <: ((α526'''',) -> α527''''), to_church301' <: ((α528'''',) -> α529'''') => (α531'''' -> α527''''))›)  <!<  ((α506',) -> α518')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  ((α506',) -> α518')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  α517'
//│ ╟── while constraining:  α522''  <!<  α517'
//│ ╟── while constraining:  (α521'' -> α522'')  <!<  ((α516',) -> α517')
//│ ╟── while constraining:  ‹∀ 1. (α302'' -> α318'')›  <!<  ((α516',) -> α517')
//│ ╟── while constraining:  to_church301'  <!<  ((α516',) -> α517')
//│ ╟── while constraining:  to_church301'  <!<  ((α510'',) -> α511'')
//│ ╟── while constraining:  (α503' <: ((α508'',) -> α509''), to_church301' <: ((α510'',) -> α511'') => (α513'' -> α509''))  <!<  ((α488',) -> α489')
//│ ╟── while constraining:  ‹∀ 3. (α503' <: ((α495'''',) -> α496''''), to_church301' <: ((α504'''',) -> α505'''') => (α500'''' -> α496''''))›  <!<  ((α488',) -> α489')
//│ ╟── while constraining:  ‹∀ 3. (α503' <: ((α495'''',) -> α496''''), to_church301' <: ((α504'''',) -> α505'''') => (α500'''' -> α496''''))›  <!<  α487'
//│ ╟── while constraining:  ‹∀ 3. (α310''' <: ((α495'''',) -> α496''''), to_church301' <: ((α497'''',) -> α498'''') => (α500'''' -> α496''''))›  <!<  α487'
//│ ╟── while constraining:  (α494'' -> ‹∀ 3. (α310''' <: ((α495'''',) -> α496''''), to_church301' <: ((α497'''',) -> α498'''') => (α500'''' -> α496''''))›)  <!<  ((α475',) -> α487')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  ((α475',) -> α487')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  α486'
//│ ╟── while constraining:  α491''  <!<  α486'
//│ ╟── while constraining:  (α490'' -> α491'')  <!<  ((α485',) -> α486')
//│ ╟── while constraining:  ‹∀ 1. (α302'' -> α318'')›  <!<  ((α485',) -> α486')
//│ ╟── while constraining:  to_church301'  <!<  ((α485',) -> α486')
//│ ╟── while constraining:  to_church301'  <!<  ((α479'',) -> α480'')
//│ ╟── while constraining:  (α472' <: ((α477'',) -> α478''), to_church301' <: ((α479'',) -> α480'') => (α482'' -> α478''))  <!<  ((α457',) -> α458')
//│ ╟── while constraining:  ‹∀ 3. (α472' <: ((α464'''',) -> α465''''), to_church301' <: ((α473'''',) -> α474'''') => (α469'''' -> α465''''))›  <!<  ((α457',) -> α458')
//│ ╟── while constraining:  ‹∀ 3. (α472' <: ((α464'''',) -> α465''''), to_church301' <: ((α473'''',) -> α474'''') => (α469'''' -> α465''''))›  <!<  α456'
//│ ╟── while constraining:  ‹∀ 3. (α310''' <: ((α464'''',) -> α465''''), to_church301' <: ((α466'''',) -> α467'''') => (α469'''' -> α465''''))›  <!<  α456'
//│ ╟── while constraining:  (α463'' -> ‹∀ 3. (α310''' <: ((α464'''',) -> α465''''), to_church301' <: ((α466'''',) -> α467'''') => (α469'''' -> α465''''))›)  <!<  ((α444',) -> α456')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  ((α444',) -> α456')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  α455'
//│ ╟── while constraining:  α460''  <!<  α455'
//│ ╟── while constraining:  (α459'' -> α460'')  <!<  ((α454',) -> α455')
//│ ╟── while constraining:  ‹∀ 1. (α302'' -> α318'')›  <!<  ((α454',) -> α455')
//│ ╟── while constraining:  to_church301'  <!<  ((α454',) -> α455')
//│ ╟── while constraining:  to_church301'  <!<  ((α448'',) -> α449'')
//│ ╟── while constraining:  (α441' <: ((α446'',) -> α447''), to_church301' <: ((α448'',) -> α449'') => (α451'' -> α447''))  <!<  ((α426',) -> α427')
//│ ╟── while constraining:  ‹∀ 3. (α441' <: ((α433'''',) -> α434''''), to_church301' <: ((α442'''',) -> α443'''') => (α438'''' -> α434''''))›  <!<  ((α426',) -> α427')
//│ ╟── while constraining:  ‹∀ 3. (α441' <: ((α433'''',) -> α434''''), to_church301' <: ((α442'''',) -> α443'''') => (α438'''' -> α434''''))›  <!<  α425'
//│ ╟── while constraining:  ‹∀ 3. (α310''' <: ((α433'''',) -> α434''''), to_church301' <: ((α435'''',) -> α436'''') => (α438'''' -> α434''''))›  <!<  α425'
//│ ╟── while constraining:  (α432'' -> ‹∀ 3. (α310''' <: ((α433'''',) -> α434''''), to_church301' <: ((α435'''',) -> α436'''') => (α438'''' -> α434''''))›)  <!<  ((α413',) -> α425')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  ((α413',) -> α425')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  α424'
//│ ╟── while constraining:  α429''  <!<  α424'
//│ ╟── while constraining:  (α428'' -> α429'')  <!<  ((α423',) -> α424')
//│ ╟── while constraining:  ‹∀ 1. (α302'' -> α318'')›  <!<  ((α423',) -> α424')
//│ ╟── while constraining:  to_church301'  <!<  ((α423',) -> α424')
//│ ╟── while constraining:  to_church301'  <!<  ((α417'',) -> α418'')
//│ ╟── while constraining:  (α410' <: ((α415'',) -> α416''), to_church301' <: ((α417'',) -> α418'') => (α420'' -> α416''))  <!<  ((α395',) -> α396')
//│ ╟── while constraining:  ‹∀ 3. (α410' <: ((α402'''',) -> α403''''), to_church301' <: ((α411'''',) -> α412'''') => (α407'''' -> α403''''))›  <!<  ((α395',) -> α396')
//│ ╟── while constraining:  ‹∀ 3. (α410' <: ((α402'''',) -> α403''''), to_church301' <: ((α411'''',) -> α412'''') => (α407'''' -> α403''''))›  <!<  α394'
//│ ╟── while constraining:  ‹∀ 3. (α310''' <: ((α402'''',) -> α403''''), to_church301' <: ((α404'''',) -> α405'''') => (α407'''' -> α403''''))›  <!<  α394'
//│ ╟── while constraining:  (α401'' -> ‹∀ 3. (α310''' <: ((α402'''',) -> α403''''), to_church301' <: ((α404'''',) -> α405'''') => (α407'''' -> α403''''))›)  <!<  ((α382',) -> α394')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  ((α382',) -> α394')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  α393'
//│ ╟── while constraining:  α398''  <!<  α393'
//│ ╟── while constraining:  (α397'' -> α398'')  <!<  ((α392',) -> α393')
//│ ╟── while constraining:  ‹∀ 1. (α302'' -> α318'')›  <!<  ((α392',) -> α393')
//│ ╟── while constraining:  to_church301'  <!<  ((α392',) -> α393')
//│ ╟── while constraining:  to_church301'  <!<  ((α386'',) -> α387'')
//│ ╟── while constraining:  (α379' <: ((α384'',) -> α385''), to_church301' <: ((α386'',) -> α387'') => (α389'' -> α385''))  <!<  ((α364',) -> α365')
//│ ╟── while constraining:  ‹∀ 3. (α379' <: ((α371'''',) -> α372''''), to_church301' <: ((α380'''',) -> α381'''') => (α376'''' -> α372''''))›  <!<  ((α364',) -> α365')
//│ ╟── while constraining:  ‹∀ 3. (α379' <: ((α371'''',) -> α372''''), to_church301' <: ((α380'''',) -> α381'''') => (α376'''' -> α372''''))›  <!<  α363'
//│ ╟── while constraining:  ‹∀ 3. (α310''' <: ((α371'''',) -> α372''''), to_church301' <: ((α373'''',) -> α374'''') => (α376'''' -> α372''''))›  <!<  α363'
//│ ╟── while constraining:  (α370'' -> ‹∀ 3. (α310''' <: ((α371'''',) -> α372''''), to_church301' <: ((α373'''',) -> α374'''') => (α376'''' -> α372''''))›)  <!<  ((α362',) -> α363')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  ((α362',) -> α363')
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  α361'
//│ ╟── while constraining:  α367''  <!<  α361'
//│ ╟── while constraining:  (α366'' -> α367'')  <!<  ((α360',) -> α361')
//│ ╟── while constraining:  ‹∀ 1. (α302'' -> α318'')›  <!<  ((α360',) -> α361')
//│ ╟── while constraining:  to_church301'  <!<  ((α360',) -> α361')
//│ ╟── while constraining:  to_church301'  <!<  ((α356'',) -> α357'')
//│ ╟── while constraining:  (α310''' <: ((α354'',) -> α355''), to_church301' <: ((α356'',) -> α357'') => (α359'' -> α355''))  <!<  (‘a'' -> ‘a'')
//│ ╟── while constraining:  ‹∀ 3. (α310''' <: ((α348'''',) -> α349''''), to_church301' <: ((α350'''',) -> α351'''') => (α353'''' -> α349''''))›  <!<  (‘a'' -> ‘a'')
//│ ╟── while constraining:  (α347'' -> ‹∀ 3. (α310''' <: ((α348'''',) -> α349''''), to_church301' <: ((α350'''',) -> α351'''') => (α353'''' -> α349''''))›)  <!<  ((‘a'' -> ‘a'') -> (‘a'' -> ‘a''))
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  ((‘a'' -> ‘a'') -> (‘a'' -> ‘a''))
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  ‹∀ 0. (('a49' -> 'a49') -> ('a49' -> 'a49'))›
//│ ╟── while constraining:  ‹∀ 2. (α310''' -> ‹∀ 3. (α310''' <: ((α316'''',) -> α317''''), to_church301' <: ((α313'''',) -> α314'''') => (α311'''' -> α317''''))›)›  <!<  ChurchInt
//│ ╟── while constraining:  α344'  <!<  ChurchInt
//│ ╟── while constraining:  (α343' -> α344')  <!<  (Int -> ChurchInt)
//│ ╟── while constraining:  ‹∀ 1. (α302'' -> α318'')›  <!<  (Int -> ChurchInt)
//│ ╟── while constraining:  to_church342'  <!<  (Int -> ChurchInt)
//│ ╟── while constraining:  ‹∀ 0. to_church301'›  <!<  (Int -> ChurchInt)
//│ ╙── while constraining:  ‹∀ 0. to_church301'›  <!<  ‹∀ 0. (Int -> ChurchInt)›
//│          = [Function: to_church4]

:e // not precise enough
rec def to_church' n =
  if n == 0 then fun f -> fun x -> x
  else fun f -> fun x -> f ((to_church' (n - 1)) f x)
to_church = to_church'
//│ to_church': int -> (forall 'a. 'a -> (forall 'a, 'b, 'c, 'd. (('c & 'd) -> 'c
//│   where
//│     'a <: 'b -> 'c
//│     'to_church' <: int -> 'a -> 'd -> 'b))) | 'to_church'
//│           = [Function: to_church4]
//│ int -> (forall 'a. 'a -> (forall 'a, 'b, 'c, 'd. (('c & 'd) -> 'c
//│   where
//│     'a <: 'b -> 'c
//│     'to_church' <: int -> 'a -> 'd -> 'b))) | 'to_church'
//│   <:  to_church:
//│ int -> ChurchInt
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?a, ?b, ?to_church', ?c, ?d, ?e, ?f, ?g, ?h, ?i, ?j, ?k, ?l, ?m, ?n, ?o, ?p, ?q, ?r, ?s, ?t, ?u, ?v, ?w, ?x, ?y, ?z, ?a1, ?b1, ?c1, ?d1, ?e1, ?f1, ?g1, ?h1, ?i1, ?j1, ?k1, ?l1, ?m1, ?n1, ?o1, ?p1, ?q1, ?r1, ?s1, ?t1, ?u1, ?v1, ?w1, ?x1, ?y1, ?z1, ?a2, ?b2, ?c2, ?d2, ?e2, ?f2, ?g2, ?h2, ?i2, ?j2, ?k2, ?l2, ?m2, ?n2, ?o2, ?p2, ?q2, ?r2, ?s2, ?t2, ?u2, ?v2, ?w2, ?x2, ?y2, ?z2, ?a3, ?b3, ?c3, ?d3, ?e3, ?f3, ?g3, ?h3, ?i3, ?j3, ?k3, ?l3, ?m3, ?n3, ?o3, ?p3, ?q3, ?r3, ?s3, ?t3, ?u3, ?v3, ?w3, ?x3, ?y3, ?z3, ?a4, ?b4, ?c4, ?d4, ?e4, ?f4, ?g4, ?h4, ?i4, ?j4, ?k4, ?l4, ?m4, ?n4, ?o4, ?p4, ?q4, ?r4, ?s4, ?t4, ?u4, ?v4, ?w4, ?x4, ?y4, ?z4, ?a5, ?b5, ?c5, ?d5, ?e5, ?f5, ?g5, ?h5, ?i5, ?j5, ?k5, ?l5, ?m5, ?n5, ?o5, ?p5, ?q5, ?r5, ?s5, ?t5, ?u5. ?to_church' <: int -> ChurchInt` exceeded recursion depth limit (400)
//│ ║  l.328: 	to_church = to_church'
//│ ║         	^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── while constraining:  α1504'  <!<  ‘a''
//│ ╟── while constraining:  (α1504',)  <!<  (‘a'',)
//│ ╟── while constraining:  (‘a'' -> ‘a'')  <!<  ((α1504',) -> α1505')
//│ ╟── while constraining:  (‘a'' -> ‘a'')  <!<  α1493'
//│ ╟── while constraining:  α1104'  <!<  α1493'
//│ ╟── while constraining:  α1124'  <!<  α1493'
//│ ╟── while constraining:  α1155'  <!<  α1493'
//│ ╟── while constraining:  α1186'  <!<  α1493'
//│ ╟── while constraining:  α1217'  <!<  α1493'
//│ ╟── while constraining:  α1248'  <!<  α1493'
//│ ╟── while constraining:  α1279'  <!<  α1493'
//│ ╟── while constraining:  α1310'  <!<  α1493'
//│ ╟── while constraining:  α1341'  <!<  α1493'
//│ ╟── while constraining:  α1372'  <!<  α1493'
//│ ╟── while constraining:  α1403'  <!<  α1493'
//│ ╟── while constraining:  α1434'  <!<  α1493'
//│ ╟── while constraining:  α1465'  <!<  α1493'
//│ ╟── while constraining:  α1496'  <!<  α1493'
//│ ╟── while constraining:  α1496'  <!<  α1515''
//│ ╟── while constraining:  (α1496',)  <!<  (α1515'',)
//│ ╟── while constraining:  (α1515'' -> ‹∀ 3. (α1029''' <: ((α1516'''',) -> α1517''''), to_church'1020' <: ((α1518'''',) -> α1519'''') => (α1521'''' -> α1517''''))›)  <!<  ((α1496',) -> α1508')
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  ((α1496',) -> α1508')
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  α1507'
//│ ╟── while constraining:  α1512''  <!<  α1507'
//│ ╟── while constraining:  (α1511'' -> α1512'')  <!<  ((α1506',) -> α1507')
//│ ╟── while constraining:  ‹∀ 1. (α1021'' -> α1037'')›  <!<  ((α1506',) -> α1507')
//│ ╟── while constraining:  to_church'1020'  <!<  ((α1506',) -> α1507')
//│ ╟── while constraining:  to_church'1020'  <!<  ((α1500'',) -> α1501'')
//│ ╟── while constraining:  (α1493' <: ((α1498'',) -> α1499''), to_church'1020' <: ((α1500'',) -> α1501'') => (α1503'' -> α1499''))  <!<  ((α1478',) -> α1479')
//│ ╟── while constraining:  ‹∀ 3. (α1493' <: ((α1485'''',) -> α1486''''), to_church'1020' <: ((α1494'''',) -> α1495'''') => (α1490'''' -> α1486''''))›  <!<  ((α1478',) -> α1479')
//│ ╟── while constraining:  ‹∀ 3. (α1493' <: ((α1485'''',) -> α1486''''), to_church'1020' <: ((α1494'''',) -> α1495'''') => (α1490'''' -> α1486''''))›  <!<  α1477'
//│ ╟── while constraining:  ‹∀ 3. (α1029''' <: ((α1485'''',) -> α1486''''), to_church'1020' <: ((α1487'''',) -> α1488'''') => (α1490'''' -> α1486''''))›  <!<  α1477'
//│ ╟── while constraining:  (α1484'' -> ‹∀ 3. (α1029''' <: ((α1485'''',) -> α1486''''), to_church'1020' <: ((α1487'''',) -> α1488'''') => (α1490'''' -> α1486''''))›)  <!<  ((α1465',) -> α1477')
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  ((α1465',) -> α1477')
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  α1476'
//│ ╟── while constraining:  α1481''  <!<  α1476'
//│ ╟── while constraining:  (α1480'' -> α1481'')  <!<  ((α1475',) -> α1476')
//│ ╟── while constraining:  ‹∀ 1. (α1021'' -> α1037'')›  <!<  ((α1475',) -> α1476')
//│ ╟── while constraining:  to_church'1020'  <!<  ((α1475',) -> α1476')
//│ ╟── while constraining:  to_church'1020'  <!<  ((α1469'',) -> α1470'')
//│ ╟── while constraining:  (α1462' <: ((α1467'',) -> α1468''), to_church'1020' <: ((α1469'',) -> α1470'') => (α1472'' -> α1468''))  <!<  ((α1447',) -> α1448')
//│ ╟── while constraining:  ‹∀ 3. (α1462' <: ((α1454'''',) -> α1455''''), to_church'1020' <: ((α1463'''',) -> α1464'''') => (α1459'''' -> α1455''''))›  <!<  ((α1447',) -> α1448')
//│ ╟── while constraining:  ‹∀ 3. (α1462' <: ((α1454'''',) -> α1455''''), to_church'1020' <: ((α1463'''',) -> α1464'''') => (α1459'''' -> α1455''''))›  <!<  α1446'
//│ ╟── while constraining:  ‹∀ 3. (α1029''' <: ((α1454'''',) -> α1455''''), to_church'1020' <: ((α1456'''',) -> α1457'''') => (α1459'''' -> α1455''''))›  <!<  α1446'
//│ ╟── while constraining:  (α1453'' -> ‹∀ 3. (α1029''' <: ((α1454'''',) -> α1455''''), to_church'1020' <: ((α1456'''',) -> α1457'''') => (α1459'''' -> α1455''''))›)  <!<  ((α1434',) -> α1446')
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  ((α1434',) -> α1446')
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  α1445'
//│ ╟── while constraining:  α1450''  <!<  α1445'
//│ ╟── while constraining:  (α1449'' -> α1450'')  <!<  ((α1444',) -> α1445')
//│ ╟── while constraining:  ‹∀ 1. (α1021'' -> α1037'')›  <!<  ((α1444',) -> α1445')
//│ ╟── while constraining:  to_church'1020'  <!<  ((α1444',) -> α1445')
//│ ╟── while constraining:  to_church'1020'  <!<  ((α1438'',) -> α1439'')
//│ ╟── while constraining:  (α1431' <: ((α1436'',) -> α1437''), to_church'1020' <: ((α1438'',) -> α1439'') => (α1441'' -> α1437''))  <!<  ((α1416',) -> α1417')
//│ ╟── while constraining:  ‹∀ 3. (α1431' <: ((α1423'''',) -> α1424''''), to_church'1020' <: ((α1432'''',) -> α1433'''') => (α1428'''' -> α1424''''))›  <!<  ((α1416',) -> α1417')
//│ ╟── while constraining:  ‹∀ 3. (α1431' <: ((α1423'''',) -> α1424''''), to_church'1020' <: ((α1432'''',) -> α1433'''') => (α1428'''' -> α1424''''))›  <!<  α1415'
//│ ╟── while constraining:  ‹∀ 3. (α1029''' <: ((α1423'''',) -> α1424''''), to_church'1020' <: ((α1425'''',) -> α1426'''') => (α1428'''' -> α1424''''))›  <!<  α1415'
//│ ╟── while constraining:  (α1422'' -> ‹∀ 3. (α1029''' <: ((α1423'''',) -> α1424''''), to_church'1020' <: ((α1425'''',) -> α1426'''') => (α1428'''' -> α1424''''))›)  <!<  ((α1403',) -> α1415')
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  ((α1403',) -> α1415')
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  α1414'
//│ ╟── while constraining:  α1419''  <!<  α1414'
//│ ╟── while constraining:  (α1418'' -> α1419'')  <!<  ((α1413',) -> α1414')
//│ ╟── while constraining:  ‹∀ 1. (α1021'' -> α1037'')›  <!<  ((α1413',) -> α1414')
//│ ╟── while constraining:  to_church'1020'  <!<  ((α1413',) -> α1414')
//│ ╟── while constraining:  to_church'1020'  <!<  ((α1407'',) -> α1408'')
//│ ╟── while constraining:  (α1400' <: ((α1405'',) -> α1406''), to_church'1020' <: ((α1407'',) -> α1408'') => (α1410'' -> α1406''))  <!<  ((α1385',) -> α1386')
//│ ╟── while constraining:  ‹∀ 3. (α1400' <: ((α1392'''',) -> α1393''''), to_church'1020' <: ((α1401'''',) -> α1402'''') => (α1397'''' -> α1393''''))›  <!<  ((α1385',) -> α1386')
//│ ╟── while constraining:  ‹∀ 3. (α1400' <: ((α1392'''',) -> α1393''''), to_church'1020' <: ((α1401'''',) -> α1402'''') => (α1397'''' -> α1393''''))›  <!<  α1384'
//│ ╟── while constraining:  ‹∀ 3. (α1029''' <: ((α1392'''',) -> α1393''''), to_church'1020' <: ((α1394'''',) -> α1395'''') => (α1397'''' -> α1393''''))›  <!<  α1384'
//│ ╟── while constraining:  (α1391'' -> ‹∀ 3. (α1029''' <: ((α1392'''',) -> α1393''''), to_church'1020' <: ((α1394'''',) -> α1395'''') => (α1397'''' -> α1393''''))›)  <!<  ((α1372',) -> α1384')
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  ((α1372',) -> α1384')
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  α1383'
//│ ╟── while constraining:  α1388''  <!<  α1383'
//│ ╟── while constraining:  (α1387'' -> α1388'')  <!<  ((α1382',) -> α1383')
//│ ╟── while constraining:  ‹∀ 1. (α1021'' -> α1037'')›  <!<  ((α1382',) -> α1383')
//│ ╟── while constraining:  to_church'1020'  <!<  ((α1382',) -> α1383')
//│ ╟── while constraining:  to_church'1020'  <!<  ((α1376'',) -> α1377'')
//│ ╟── while constraining:  (α1369' <: ((α1374'',) -> α1375''), to_church'1020' <: ((α1376'',) -> α1377'') => (α1379'' -> α1375''))  <!<  ((α1354',) -> α1355')
//│ ╟── while constraining:  ‹∀ 3. (α1369' <: ((α1361'''',) -> α1362''''), to_church'1020' <: ((α1370'''',) -> α1371'''') => (α1366'''' -> α1362''''))›  <!<  ((α1354',) -> α1355')
//│ ╟── while constraining:  ‹∀ 3. (α1369' <: ((α1361'''',) -> α1362''''), to_church'1020' <: ((α1370'''',) -> α1371'''') => (α1366'''' -> α1362''''))›  <!<  α1353'
//│ ╟── while constraining:  ‹∀ 3. (α1029''' <: ((α1361'''',) -> α1362''''), to_church'1020' <: ((α1363'''',) -> α1364'''') => (α1366'''' -> α1362''''))›  <!<  α1353'
//│ ╟── while constraining:  (α1360'' -> ‹∀ 3. (α1029''' <: ((α1361'''',) -> α1362''''), to_church'1020' <: ((α1363'''',) -> α1364'''') => (α1366'''' -> α1362''''))›)  <!<  ((α1341',) -> α1353')
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  ((α1341',) -> α1353')
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  α1352'
//│ ╟── while constraining:  α1357''  <!<  α1352'
//│ ╟── while constraining:  (α1356'' -> α1357'')  <!<  ((α1351',) -> α1352')
//│ ╟── while constraining:  ‹∀ 1. (α1021'' -> α1037'')›  <!<  ((α1351',) -> α1352')
//│ ╟── while constraining:  to_church'1020'  <!<  ((α1351',) -> α1352')
//│ ╟── while constraining:  to_church'1020'  <!<  ((α1345'',) -> α1346'')
//│ ╟── while constraining:  (α1338' <: ((α1343'',) -> α1344''), to_church'1020' <: ((α1345'',) -> α1346'') => (α1348'' -> α1344''))  <!<  ((α1323',) -> α1324')
//│ ╟── while constraining:  ‹∀ 3. (α1338' <: ((α1330'''',) -> α1331''''), to_church'1020' <: ((α1339'''',) -> α1340'''') => (α1335'''' -> α1331''''))›  <!<  ((α1323',) -> α1324')
//│ ╟── while constraining:  ‹∀ 3. (α1338' <: ((α1330'''',) -> α1331''''), to_church'1020' <: ((α1339'''',) -> α1340'''') => (α1335'''' -> α1331''''))›  <!<  α1322'
//│ ╟── while constraining:  ‹∀ 3. (α1029''' <: ((α1330'''',) -> α1331''''), to_church'1020' <: ((α1332'''',) -> α1333'''') => (α1335'''' -> α1331''''))›  <!<  α1322'
//│ ╟── while constraining:  (α1329'' -> ‹∀ 3. (α1029''' <: ((α1330'''',) -> α1331''''), to_church'1020' <: ((α1332'''',) -> α1333'''') => (α1335'''' -> α1331''''))›)  <!<  ((α1310',) -> α1322')
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  ((α1310',) -> α1322')
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  α1321'
//│ ╟── while constraining:  α1326''  <!<  α1321'
//│ ╟── while constraining:  (α1325'' -> α1326'')  <!<  ((α1320',) -> α1321')
//│ ╟── while constraining:  ‹∀ 1. (α1021'' -> α1037'')›  <!<  ((α1320',) -> α1321')
//│ ╟── while constraining:  to_church'1020'  <!<  ((α1320',) -> α1321')
//│ ╟── while constraining:  to_church'1020'  <!<  ((α1314'',) -> α1315'')
//│ ╟── while constraining:  (α1307' <: ((α1312'',) -> α1313''), to_church'1020' <: ((α1314'',) -> α1315'') => (α1317'' -> α1313''))  <!<  ((α1292',) -> α1293')
//│ ╟── while constraining:  ‹∀ 3. (α1307' <: ((α1299'''',) -> α1300''''), to_church'1020' <: ((α1308'''',) -> α1309'''') => (α1304'''' -> α1300''''))›  <!<  ((α1292',) -> α1293')
//│ ╟── while constraining:  ‹∀ 3. (α1307' <: ((α1299'''',) -> α1300''''), to_church'1020' <: ((α1308'''',) -> α1309'''') => (α1304'''' -> α1300''''))›  <!<  α1291'
//│ ╟── while constraining:  ‹∀ 3. (α1029''' <: ((α1299'''',) -> α1300''''), to_church'1020' <: ((α1301'''',) -> α1302'''') => (α1304'''' -> α1300''''))›  <!<  α1291'
//│ ╟── while constraining:  (α1298'' -> ‹∀ 3. (α1029''' <: ((α1299'''',) -> α1300''''), to_church'1020' <: ((α1301'''',) -> α1302'''') => (α1304'''' -> α1300''''))›)  <!<  ((α1279',) -> α1291')
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  ((α1279',) -> α1291')
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  α1290'
//│ ╟── while constraining:  α1295''  <!<  α1290'
//│ ╟── while constraining:  (α1294'' -> α1295'')  <!<  ((α1289',) -> α1290')
//│ ╟── while constraining:  ‹∀ 1. (α1021'' -> α1037'')›  <!<  ((α1289',) -> α1290')
//│ ╟── while constraining:  to_church'1020'  <!<  ((α1289',) -> α1290')
//│ ╟── while constraining:  to_church'1020'  <!<  ((α1283'',) -> α1284'')
//│ ╟── while constraining:  (α1276' <: ((α1281'',) -> α1282''), to_church'1020' <: ((α1283'',) -> α1284'') => (α1286'' -> α1282''))  <!<  ((α1261',) -> α1262')
//│ ╟── while constraining:  ‹∀ 3. (α1276' <: ((α1268'''',) -> α1269''''), to_church'1020' <: ((α1277'''',) -> α1278'''') => (α1273'''' -> α1269''''))›  <!<  ((α1261',) -> α1262')
//│ ╟── while constraining:  ‹∀ 3. (α1276' <: ((α1268'''',) -> α1269''''), to_church'1020' <: ((α1277'''',) -> α1278'''') => (α1273'''' -> α1269''''))›  <!<  α1260'
//│ ╟── while constraining:  ‹∀ 3. (α1029''' <: ((α1268'''',) -> α1269''''), to_church'1020' <: ((α1270'''',) -> α1271'''') => (α1273'''' -> α1269''''))›  <!<  α1260'
//│ ╟── while constraining:  (α1267'' -> ‹∀ 3. (α1029''' <: ((α1268'''',) -> α1269''''), to_church'1020' <: ((α1270'''',) -> α1271'''') => (α1273'''' -> α1269''''))›)  <!<  ((α1248',) -> α1260')
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  ((α1248',) -> α1260')
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  α1259'
//│ ╟── while constraining:  α1264''  <!<  α1259'
//│ ╟── while constraining:  (α1263'' -> α1264'')  <!<  ((α1258',) -> α1259')
//│ ╟── while constraining:  ‹∀ 1. (α1021'' -> α1037'')›  <!<  ((α1258',) -> α1259')
//│ ╟── while constraining:  to_church'1020'  <!<  ((α1258',) -> α1259')
//│ ╟── while constraining:  to_church'1020'  <!<  ((α1252'',) -> α1253'')
//│ ╟── while constraining:  (α1245' <: ((α1250'',) -> α1251''), to_church'1020' <: ((α1252'',) -> α1253'') => (α1255'' -> α1251''))  <!<  ((α1230',) -> α1231')
//│ ╟── while constraining:  ‹∀ 3. (α1245' <: ((α1237'''',) -> α1238''''), to_church'1020' <: ((α1246'''',) -> α1247'''') => (α1242'''' -> α1238''''))›  <!<  ((α1230',) -> α1231')
//│ ╟── while constraining:  ‹∀ 3. (α1245' <: ((α1237'''',) -> α1238''''), to_church'1020' <: ((α1246'''',) -> α1247'''') => (α1242'''' -> α1238''''))›  <!<  α1229'
//│ ╟── while constraining:  ‹∀ 3. (α1029''' <: ((α1237'''',) -> α1238''''), to_church'1020' <: ((α1239'''',) -> α1240'''') => (α1242'''' -> α1238''''))›  <!<  α1229'
//│ ╟── while constraining:  (α1236'' -> ‹∀ 3. (α1029''' <: ((α1237'''',) -> α1238''''), to_church'1020' <: ((α1239'''',) -> α1240'''') => (α1242'''' -> α1238''''))›)  <!<  ((α1217',) -> α1229')
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  ((α1217',) -> α1229')
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  α1228'
//│ ╟── while constraining:  α1233''  <!<  α1228'
//│ ╟── while constraining:  (α1232'' -> α1233'')  <!<  ((α1227',) -> α1228')
//│ ╟── while constraining:  ‹∀ 1. (α1021'' -> α1037'')›  <!<  ((α1227',) -> α1228')
//│ ╟── while constraining:  to_church'1020'  <!<  ((α1227',) -> α1228')
//│ ╟── while constraining:  to_church'1020'  <!<  ((α1221'',) -> α1222'')
//│ ╟── while constraining:  (α1214' <: ((α1219'',) -> α1220''), to_church'1020' <: ((α1221'',) -> α1222'') => (α1224'' -> α1220''))  <!<  ((α1199',) -> α1200')
//│ ╟── while constraining:  ‹∀ 3. (α1214' <: ((α1206'''',) -> α1207''''), to_church'1020' <: ((α1215'''',) -> α1216'''') => (α1211'''' -> α1207''''))›  <!<  ((α1199',) -> α1200')
//│ ╟── while constraining:  ‹∀ 3. (α1214' <: ((α1206'''',) -> α1207''''), to_church'1020' <: ((α1215'''',) -> α1216'''') => (α1211'''' -> α1207''''))›  <!<  α1198'
//│ ╟── while constraining:  ‹∀ 3. (α1029''' <: ((α1206'''',) -> α1207''''), to_church'1020' <: ((α1208'''',) -> α1209'''') => (α1211'''' -> α1207''''))›  <!<  α1198'
//│ ╟── while constraining:  (α1205'' -> ‹∀ 3. (α1029''' <: ((α1206'''',) -> α1207''''), to_church'1020' <: ((α1208'''',) -> α1209'''') => (α1211'''' -> α1207''''))›)  <!<  ((α1186',) -> α1198')
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  ((α1186',) -> α1198')
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  α1197'
//│ ╟── while constraining:  α1202''  <!<  α1197'
//│ ╟── while constraining:  (α1201'' -> α1202'')  <!<  ((α1196',) -> α1197')
//│ ╟── while constraining:  ‹∀ 1. (α1021'' -> α1037'')›  <!<  ((α1196',) -> α1197')
//│ ╟── while constraining:  to_church'1020'  <!<  ((α1196',) -> α1197')
//│ ╟── while constraining:  to_church'1020'  <!<  ((α1190'',) -> α1191'')
//│ ╟── while constraining:  (α1183' <: ((α1188'',) -> α1189''), to_church'1020' <: ((α1190'',) -> α1191'') => (α1193'' -> α1189''))  <!<  ((α1168',) -> α1169')
//│ ╟── while constraining:  ‹∀ 3. (α1183' <: ((α1175'''',) -> α1176''''), to_church'1020' <: ((α1184'''',) -> α1185'''') => (α1180'''' -> α1176''''))›  <!<  ((α1168',) -> α1169')
//│ ╟── while constraining:  ‹∀ 3. (α1183' <: ((α1175'''',) -> α1176''''), to_church'1020' <: ((α1184'''',) -> α1185'''') => (α1180'''' -> α1176''''))›  <!<  α1167'
//│ ╟── while constraining:  ‹∀ 3. (α1029''' <: ((α1175'''',) -> α1176''''), to_church'1020' <: ((α1177'''',) -> α1178'''') => (α1180'''' -> α1176''''))›  <!<  α1167'
//│ ╟── while constraining:  (α1174'' -> ‹∀ 3. (α1029''' <: ((α1175'''',) -> α1176''''), to_church'1020' <: ((α1177'''',) -> α1178'''') => (α1180'''' -> α1176''''))›)  <!<  ((α1155',) -> α1167')
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  ((α1155',) -> α1167')
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  α1166'
//│ ╟── while constraining:  α1171''  <!<  α1166'
//│ ╟── while constraining:  (α1170'' -> α1171'')  <!<  ((α1165',) -> α1166')
//│ ╟── while constraining:  ‹∀ 1. (α1021'' -> α1037'')›  <!<  ((α1165',) -> α1166')
//│ ╟── while constraining:  to_church'1020'  <!<  ((α1165',) -> α1166')
//│ ╟── while constraining:  to_church'1020'  <!<  ((α1159'',) -> α1160'')
//│ ╟── while constraining:  (α1152' <: ((α1157'',) -> α1158''), to_church'1020' <: ((α1159'',) -> α1160'') => (α1162'' -> α1158''))  <!<  ((α1137',) -> α1138')
//│ ╟── while constraining:  ‹∀ 3. (α1152' <: ((α1144'''',) -> α1145''''), to_church'1020' <: ((α1153'''',) -> α1154'''') => (α1149'''' -> α1145''''))›  <!<  ((α1137',) -> α1138')
//│ ╟── while constraining:  ‹∀ 3. (α1152' <: ((α1144'''',) -> α1145''''), to_church'1020' <: ((α1153'''',) -> α1154'''') => (α1149'''' -> α1145''''))›  <!<  α1136'
//│ ╟── while constraining:  ‹∀ 3. (α1029''' <: ((α1144'''',) -> α1145''''), to_church'1020' <: ((α1146'''',) -> α1147'''') => (α1149'''' -> α1145''''))›  <!<  α1136'
//│ ╟── while constraining:  (α1143'' -> ‹∀ 3. (α1029''' <: ((α1144'''',) -> α1145''''), to_church'1020' <: ((α1146'''',) -> α1147'''') => (α1149'''' -> α1145''''))›)  <!<  ((α1124',) -> α1136')
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  ((α1124',) -> α1136')
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  α1135'
//│ ╟── while constraining:  α1140''  <!<  α1135'
//│ ╟── while constraining:  (α1139'' -> α1140'')  <!<  ((α1134',) -> α1135')
//│ ╟── while constraining:  ‹∀ 1. (α1021'' -> α1037'')›  <!<  ((α1134',) -> α1135')
//│ ╟── while constraining:  to_church'1020'  <!<  ((α1134',) -> α1135')
//│ ╟── while constraining:  to_church'1020'  <!<  ((α1128'',) -> α1129'')
//│ ╟── while constraining:  (α1121' <: ((α1126'',) -> α1127''), to_church'1020' <: ((α1128'',) -> α1129'') => (α1131'' -> α1127''))  <!<  ((α1106',) -> α1107')
//│ ╟── while constraining:  ‹∀ 3. (α1121' <: ((α1113'''',) -> α1114''''), to_church'1020' <: ((α1122'''',) -> α1123'''') => (α1118'''' -> α1114''''))›  <!<  ((α1106',) -> α1107')
//│ ╟── while constraining:  ‹∀ 3. (α1121' <: ((α1113'''',) -> α1114''''), to_church'1020' <: ((α1122'''',) -> α1123'''') => (α1118'''' -> α1114''''))›  <!<  α1105'
//│ ╟── while constraining:  ‹∀ 3. (α1029''' <: ((α1113'''',) -> α1114''''), to_church'1020' <: ((α1115'''',) -> α1116'''') => (α1118'''' -> α1114''''))›  <!<  α1105'
//│ ╟── while constraining:  (α1112'' -> ‹∀ 3. (α1029''' <: ((α1113'''',) -> α1114''''), to_church'1020' <: ((α1115'''',) -> α1116'''') => (α1118'''' -> α1114''''))›)  <!<  ((α1104',) -> α1105')
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  ((α1104',) -> α1105')
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  α1103'
//│ ╟── while constraining:  α1109''  <!<  α1103'
//│ ╟── while constraining:  (α1108'' -> α1109'')  <!<  ((α1102',) -> α1103')
//│ ╟── while constraining:  ‹∀ 1. (α1021'' -> α1037'')›  <!<  ((α1102',) -> α1103')
//│ ╟── while constraining:  to_church'1020'  <!<  ((α1102',) -> α1103')
//│ ╟── while constraining:  to_church'1020'  <!<  ((α1098'',) -> α1099'')
//│ ╟── while constraining:  (α1029''' <: ((α1096'',) -> α1097''), to_church'1020' <: ((α1098'',) -> α1099'') => (α1101'' -> α1097''))  <!<  (‘a'' -> ‘a'')
//│ ╟── while constraining:  ‹∀ 3. (α1029''' <: ((α1090'''',) -> α1091''''), to_church'1020' <: ((α1092'''',) -> α1093'''') => (α1095'''' -> α1091''''))›  <!<  (‘a'' -> ‘a'')
//│ ╟── while constraining:  (α1089'' -> ‹∀ 3. (α1029''' <: ((α1090'''',) -> α1091''''), to_church'1020' <: ((α1092'''',) -> α1093'''') => (α1095'''' -> α1091''''))›)  <!<  ((‘a'' -> ‘a'') -> (‘a'' -> ‘a''))
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  ((‘a'' -> ‘a'') -> (‘a'' -> ‘a''))
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  ‹∀ 0. (('a49' -> 'a49') -> ('a49' -> 'a49'))›
//│ ╟── while constraining:  ‹∀ 2. (α1029''' -> ‹∀ 3. (α1029''' <: ((α1035'''',) -> α1036''''), to_church'1020' <: ((α1032'''',) -> α1033'''') => (α1030'''' -> α1036''''))›)›  <!<  ChurchInt
//│ ╟── while constraining:  α1086'  <!<  ChurchInt
//│ ╟── while constraining:  (α1085' -> α1086')  <!<  (Int -> ChurchInt)
//│ ╟── while constraining:  ‹∀ 1. (α1021'' -> α1037'')›  <!<  (Int -> ChurchInt)
//│ ╟── while constraining:  to_church'1084'  <!<  (Int -> ChurchInt)
//│ ╟── while constraining:  ‹∀ 0. to_church'1020'›  <!<  (Int -> ChurchInt)
//│ ╟── while constraining:  ‹∀ 0. ‹∀ 0. to_church'1020'››  <!<  (Int -> ChurchInt)
//│ ╙── while constraining:  ‹∀ 0. ‹∀ 0. to_church'1020'››  <!<  ‹∀ 0. (Int -> ChurchInt)›
//│          = [Function: to_church4]

// emulates annotated rec def
def to_church' n =
  if n == 0 then fun f -> fun x -> x
  else fun f -> fun x -> f ((to_church' (n - 1)) f x)
//│ to_church': int -> (forall 'a. (nothing -> anything & 'a) -> (forall 'a, 'b, 'c, 'd, 'e. (('e & 'c & 'd) -> 'e
//│   where
//│     'f <: 'b -> 'c
//│     'to_church' <: int -> 'a -> 'd -> 'b
//│     'a <: 'c -> 'e)))
//│           = [Function: to_church4]

// (* �a coince. *)
// let tc n = (to_church n : Int);;
def tc n = to_church n : ChurchInt
//│ tc: int -> ChurchInt
//│   = [Function: tc]

// (* Duplicate with to_church1 ("Marche") above *)
// (* Avec la value restriction : �a passe. *)
// let rec to_church n =
//   if n = 0 then fun f x -> x
//   else fun f x -> f ((to_church (n-1) : Int) f x)


// (*** Les annotations de type ne commutent pas. ***)
// type sid = ['a] 'a -> 'a
// type z = ['a,'b] ('a -> 'b) -> ('a -> 'b)
type Z = forall 'a 'b. ('a -> 'b) -> ('a -> 'b)
//│ Defined type alias Z

// let f x = (x:sid), ((x:sid):z)
def f x = ((x : Sid), ((x : Sid) : Z))
//│ f: Sid -> (Sid, Z,)
//│  = [Function: f]

// (* Ne type pas ... c'est une instance polymorphe. Interdit. *)
// untype fun x -> (x:sid), (x:z)
fun x -> ((x : Sid), (x : Z))
//│ res: (Sid & Z) -> (Sid, Z,)
//│    = [Function: res]
