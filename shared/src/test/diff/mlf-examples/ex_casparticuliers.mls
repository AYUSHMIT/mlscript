:GeneralizeCurriedFunctions

// (*** L'annotation est n�cessaire sur z, mais z n'est utilis� qu'une seule fois. ***)
// type sid = ['a] 'a -> 'a
type Sid = forall 'a. 'a -> 'a
//│ Defined type alias Sid

// let t (z:sid) = ( (fun a -> z) : ['a,'b] 'b -> 'a -> 'a )
def t (z: Sid) = (fun a -> z) : forall 'a 'b. 'b -> 'a -> 'a
//│ t: Sid -> (forall 'a. anything -> 'a -> 'a)
//│  = [Function: t]

// (* Une seule instance, mais polymorphe. *)
// let t z = ( (fun a -> z) : ['a,'b] 'b -> 'a -> 'a );;
def t z = (fun a -> z) : forall 'a 'b. 'b -> 'a -> 'a
//│ t: (‘a -> ‘a) -> (forall 'a. anything -> 'a -> 'a)
//│  = [Function: t1]

def t z = fun a -> z
//│ t: 'a -> anything -> 'a
//│  = [Function: t2]


// (*** Ne type pas avec les value-restriction. Emb�tant. ***)

// type Int = ['a] ('a -> 'a) -> ('a -> 'a)
// ;;
type ChurchInt = forall 'a. ('a -> 'a) -> ('a -> 'a)
//│ Defined type alias ChurchInt

// let zero f x = x
// ;;
def zero f x = x
//│ zero: anything -> (forall 'a. 'a -> 'a)
//│     = [Function: zero]

// let succ (n:Int) = fun f x -> f (n f x)
// ;;
def succ (n: ChurchInt) = fun f -> fun x -> f (n f x)
def succ' n = fun f -> fun x -> f (n f x)
//│ succ: ChurchInt -> (forall 'a. 'a -> (forall 'a, 'b, 'c, 'd. ('b -> 'd
//│   where
//│     'e <: 'a -> 'b -> 'c
//│     'a <: 'c -> 'd)))
//│     = [Function: succ]
//│ succ': 'a -> (forall 'b. 'b -> (forall 'b, 'c, 'd, 'e. ('e -> 'd
//│   where
//│     'b <: 'c -> 'd
//│     'a <: 'b -> 'e -> 'c)))
//│      = [Function: succ]

// let rec to_church n =
//   if n = 0 then zero
//   else succ (to_church (n-1))
// ;;
// FIXME: only works with explicit declaration for `succ`
//        might be an instance when we need constrained types to get the principal type
// def succ: ChurchInt -> ChurchInt
rec def to_church n =
  if n == 0 then zero
  else succ (to_church (n - 1))
rec def to_church' n =
  if n == 0 then zero
  else succ' (to_church' (n - 1))
//│ to_church: int -> (forall 'a. 'a -> (forall 'a, 'b, 'c, 'd, 'e. (('e & 'b) -> ('e | 'd)
//│   where
//│     'f <: 'a -> 'b -> 'c
//│     'a <: 'c -> 'd)))
//│          = [Function: to_church]
//│ to_church': int -> (forall 'a. 'a -> (forall 'a, 'b, 'c, 'd, 'e. (('e & 'd) -> ('e | 'c)
//│   where
//│     'a <: 'b -> 'c
//│     'f <: 'a -> 'd -> 'b)))
//│           = [Function: to_church]

// (* Marche *)
// let rec to_church n =
//   if n = 0 then fun f x -> x
//   else fun f x -> f ((to_church (n-1) : Int) f x)
// ;;
rec def to_church n =
  if n == 0 then fun f -> fun x -> x
  else fun f -> fun x -> f ((to_church (n - 1) : ChurchInt) f x)
//│ to_church: int -> (forall 'b. (('a | ‘a) -> ‘a & ('a | ‘a) -> 'a & 'b) -> (forall 'a0, 'c. (('c & 'a0) -> 'c
//│   where
//│     'b <: 'a0 -> 'a0 & 'a0 -> 'c)))
//│          = [Function: to_church1]

// (* Ne Marche Pas *)
// let rec to_church n =
//   if n = 0 then fun f x -> x
//   else (fun f x -> f ((to_church (n-1)) f x) : Int)
// ;;
rec def to_church n =
  if n == 0 then fun f -> fun x -> x
  else fun f -> fun x -> f ((to_church (n - 1)) f x) : ChurchInt
//│ to_church: int -> (forall 'a. 'a -> (forall 'a, 'b, 'c. ('b -> (ChurchInt | 'b)
//│   where
//│     'd <: 'a -> 'b -> 'c
//│     'a <: 'c -> ChurchInt)))
//│          = [Function: to_church2]


// (* La r�cursion est monomorphe. *)
// let rec to_church n =
//   if n = 0 then fun f x -> x
//   else fun f x -> f ((to_church (n-1)) f x)
// ;;
rec def to_church n =
  if n == 0 then fun f -> fun x -> x
  else fun f -> fun x -> f ((to_church (n - 1)) f x)
//│ to_church: int -> (forall 'a. 'a -> (forall 'a, 'b, 'c, 'd. (('c & 'd) -> 'c
//│   where
//│     'a <: 'b -> 'c
//│     'e <: 'a -> 'd -> 'b)))
//│          = [Function: to_church3]

// (* Echoue avec la value restriction. *)
// let rec (to_church:int -> Int) n =
//   if n = 0 then fun f x -> x
//   else fun f x -> f ((to_church (n-1)) f x)
// ;;
// FIXME: principal type for constrained types
def to_church: int -> ChurchInt
rec def to_church n =
  if n == 0 then fun f -> fun x -> x
  else fun f -> fun x -> f ((to_church (n - 1)) f x)
//│ to_church: int -> ChurchInt
//│          = <missing implementation>
//│ int -> (forall 'a. 'a -> (forall 'a, 'b, 'c, 'd. (('c & 'd) -> 'c
//│   where
//│     'a <: 'b -> 'c
//│     'e <: 'a -> 'd -> 'b)))
//│   <:  to_church:
//│ int -> ChurchInt
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?a, ?b, ?c, ?d, ?e, ?f, ?g, ?h, ?i, ?j, ?k, ?l, ?m, ?n, ?o, ?p, ?q, ?r, ?s, ?t, ?to_church, ?u, ?v, ?w, ?x, ?y, ?z, ?a1, ?b1, ?c1, ?d1, ?e1, ?f1, ?g1, ?h1, ?i1, ?j1, ?k1, ?l1, ?m1, ?n1, ?o1, ?p1, ?q1, ?r1, ?s1, ?t1, ?u1, ?v1, ?w1, ?x1, ?y1, ?z1, ?a2, ?b2, ?c2, ?d2, ?e2, ?f2, ?g2, ?h2, ?i2, ?j2, ?k2, ?l2, ?m2, ?n2, ?o2, ?p2, ?q2, ?r2, ?s2, ?t2, ?u2, ?v2, ?w2, ?x2, ?y2, ?z2, ?a3, ?b3, ?c3, ?d3, ?e3, ?f3, ?g3, ?h3, ?i3, ?j3, ?k3, ?l3, ?m3, ?n3, ?o3, ?p3, ?q3, ?r3, ?s3, ?t3, ?u3, ?v3, ?w3, ?x3, ?y3, ?z3, ?a4, ?b4, ?c4, ?d4, ?e4, ?f4, ?g4, ?h4. ?to_church <: int -> ChurchInt` exceeded recursion depth limit (400)
//│ ║  l.125: 	rec def to_church n =
//│ ║         	^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.126: 	  if n == 0 then fun f -> fun x -> x
//│ ║         	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.127: 	  else fun f -> fun x -> f ((to_church (n - 1)) f x)
//│ ║         	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── while constraining:  α432'  <!<  ((α678',) -> α679')
//│ ╟── while constraining:  α448'  <!<  ((α678',) -> α679')
//│ ╟── while constraining:  α464'  <!<  ((α678',) -> α679')
//│ ╟── while constraining:  α480'  <!<  ((α678',) -> α679')
//│ ╟── while constraining:  α496'  <!<  ((α678',) -> α679')
//│ ╟── while constraining:  α512'  <!<  ((α678',) -> α679')
//│ ╟── while constraining:  α528'  <!<  ((α678',) -> α679')
//│ ╟── while constraining:  α544'  <!<  ((α678',) -> α679')
//│ ╟── while constraining:  α560'  <!<  ((α678',) -> α679')
//│ ╟── while constraining:  α576'  <!<  ((α678',) -> α679')
//│ ╟── while constraining:  α592'  <!<  ((α678',) -> α679')
//│ ╟── while constraining:  α608'  <!<  ((α678',) -> α679')
//│ ╟── while constraining:  α624'  <!<  ((α678',) -> α679')
//│ ╟── while constraining:  α640'  <!<  ((α678',) -> α679')
//│ ╟── while constraining:  α656'  <!<  ((α678',) -> α679')
//│ ╟── while constraining:  α672'  <!<  ((α678',) -> α679')
//│ ╟── while constraining:  α672'  <!<  ((α674'',) -> α675'')
//│ ╟── while constraining:  {(α677'' -> α675'') where: α672' <: ((α674'',) -> α675''), α345' <: ((α672',) -> α676'')}  <!<  ((α665',) -> α666')
//│ ╟── while constraining:  ‹∀ 3. {(α671'''' -> α669'''') where: α672' <: ((α668'''',) -> α669''''), α345' <: ((α672',) -> α673'''')}›  <!<  ((α665',) -> α666')
//│ ╟── while constraining:  ‹∀ 3. {(α671'''' -> α669'''') where: α672' <: ((α668'''',) -> α669''''), α345' <: ((α672',) -> α673'''')}›  <!<  α664'
//│ ╟── while constraining:  ‹∀ 3. {(α671'''' -> α669'''') where: α667'' <: ((α668'''',) -> α669''''), α345' <: ((α667'',) -> α670'''')}›  <!<  α664'
//│ ╟── while constraining:  (α667'' -> ‹∀ 3. {(α671'''' -> α669'''') where: α667'' <: ((α668'''',) -> α669''''), α345' <: ((α667'',) -> α670'''')}›)  <!<  ((α656',) -> α664')
//│ ╟── while constraining:  ‹∀ 2. (α339''' -> ‹∀ 3. {(α340'''' -> α348'''') where: α339''' <: ((α347'''',) -> α348''''), α345' <: ((α339''',) -> α346'''')}›)›  <!<  ((α656',) -> α664')
//│ ╟── while constraining:  α345'  <!<  ((α656',) -> α664')
//│ ╟── while constraining:  α345'  <!<  ((α656',) -> α660'')
//│ ╟── while constraining:  {(α661'' -> α659'') where: α656' <: ((α658'',) -> α659''), α345' <: ((α656',) -> α660'')}  <!<  ((α649',) -> α650')
//│ ╟── while constraining:  ‹∀ 3. {(α655'''' -> α653'''') where: α656' <: ((α652'''',) -> α653''''), α345' <: ((α656',) -> α657'''')}›  <!<  ((α649',) -> α650')
//│ ╟── while constraining:  ‹∀ 3. {(α655'''' -> α653'''') where: α656' <: ((α652'''',) -> α653''''), α345' <: ((α656',) -> α657'''')}›  <!<  α648'
//│ ╟── while constraining:  ‹∀ 3. {(α655'''' -> α653'''') where: α651'' <: ((α652'''',) -> α653''''), α345' <: ((α651'',) -> α654'''')}›  <!<  α648'
//│ ╟── while constraining:  (α651'' -> ‹∀ 3. {(α655'''' -> α653'''') where: α651'' <: ((α652'''',) -> α653''''), α345' <: ((α651'',) -> α654'''')}›)  <!<  ((α640',) -> α648')
//│ ╟── while constraining:  ‹∀ 2. (α339''' -> ‹∀ 3. {(α340'''' -> α348'''') where: α339''' <: ((α347'''',) -> α348''''), α345' <: ((α339''',) -> α346'''')}›)›  <!<  ((α640',) -> α648')
//│ ╟── while constraining:  α345'  <!<  ((α640',) -> α648')
//│ ╟── while constraining:  α345'  <!<  ((α640',) -> α644'')
//│ ╟── while constraining:  {(α645'' -> α643'') where: α640' <: ((α642'',) -> α643''), α345' <: ((α640',) -> α644'')}  <!<  ((α633',) -> α634')
//│ ╟── while constraining:  ‹∀ 3. {(α639'''' -> α637'''') where: α640' <: ((α636'''',) -> α637''''), α345' <: ((α640',) -> α641'''')}›  <!<  ((α633',) -> α634')
//│ ╟── while constraining:  ‹∀ 3. {(α639'''' -> α637'''') where: α640' <: ((α636'''',) -> α637''''), α345' <: ((α640',) -> α641'''')}›  <!<  α632'
//│ ╟── while constraining:  ‹∀ 3. {(α639'''' -> α637'''') where: α635'' <: ((α636'''',) -> α637''''), α345' <: ((α635'',) -> α638'''')}›  <!<  α632'
//│ ╟── while constraining:  (α635'' -> ‹∀ 3. {(α639'''' -> α637'''') where: α635'' <: ((α636'''',) -> α637''''), α345' <: ((α635'',) -> α638'''')}›)  <!<  ((α624',) -> α632')
//│ ╟── while constraining:  ‹∀ 2. (α339''' -> ‹∀ 3. {(α340'''' -> α348'''') where: α339''' <: ((α347'''',) -> α348''''), α345' <: ((α339''',) -> α346'''')}›)›  <!<  ((α624',) -> α632')
//│ ╟── while constraining:  α345'  <!<  ((α624',) -> α632')
//│ ╟── while constraining:  α345'  <!<  ((α624',) -> α628'')
//│ ╟── while constraining:  {(α629'' -> α627'') where: α624' <: ((α626'',) -> α627''), α345' <: ((α624',) -> α628'')}  <!<  ((α617',) -> α618')
//│ ╟── while constraining:  ‹∀ 3. {(α623'''' -> α621'''') where: α624' <: ((α620'''',) -> α621''''), α345' <: ((α624',) -> α625'''')}›  <!<  ((α617',) -> α618')
//│ ╟── while constraining:  ‹∀ 3. {(α623'''' -> α621'''') where: α624' <: ((α620'''',) -> α621''''), α345' <: ((α624',) -> α625'''')}›  <!<  α616'
//│ ╟── while constraining:  ‹∀ 3. {(α623'''' -> α621'''') where: α619'' <: ((α620'''',) -> α621''''), α345' <: ((α619'',) -> α622'''')}›  <!<  α616'
//│ ╟── while constraining:  (α619'' -> ‹∀ 3. {(α623'''' -> α621'''') where: α619'' <: ((α620'''',) -> α621''''), α345' <: ((α619'',) -> α622'''')}›)  <!<  ((α608',) -> α616')
//│ ╟── while constraining:  ‹∀ 2. (α339''' -> ‹∀ 3. {(α340'''' -> α348'''') where: α339''' <: ((α347'''',) -> α348''''), α345' <: ((α339''',) -> α346'''')}›)›  <!<  ((α608',) -> α616')
//│ ╟── while constraining:  α345'  <!<  ((α608',) -> α616')
//│ ╟── while constraining:  α345'  <!<  ((α608',) -> α612'')
//│ ╟── while constraining:  {(α613'' -> α611'') where: α608' <: ((α610'',) -> α611''), α345' <: ((α608',) -> α612'')}  <!<  ((α601',) -> α602')
//│ ╟── while constraining:  ‹∀ 3. {(α607'''' -> α605'''') where: α608' <: ((α604'''',) -> α605''''), α345' <: ((α608',) -> α609'''')}›  <!<  ((α601',) -> α602')
//│ ╟── while constraining:  ‹∀ 3. {(α607'''' -> α605'''') where: α608' <: ((α604'''',) -> α605''''), α345' <: ((α608',) -> α609'''')}›  <!<  α600'
//│ ╟── while constraining:  ‹∀ 3. {(α607'''' -> α605'''') where: α603'' <: ((α604'''',) -> α605''''), α345' <: ((α603'',) -> α606'''')}›  <!<  α600'
//│ ╟── while constraining:  (α603'' -> ‹∀ 3. {(α607'''' -> α605'''') where: α603'' <: ((α604'''',) -> α605''''), α345' <: ((α603'',) -> α606'''')}›)  <!<  ((α592',) -> α600')
//│ ╟── while constraining:  ‹∀ 2. (α339''' -> ‹∀ 3. {(α340'''' -> α348'''') where: α339''' <: ((α347'''',) -> α348''''), α345' <: ((α339''',) -> α346'''')}›)›  <!<  ((α592',) -> α600')
//│ ╟── while constraining:  α345'  <!<  ((α592',) -> α600')
//│ ╟── while constraining:  α345'  <!<  ((α592',) -> α596'')
//│ ╟── while constraining:  {(α597'' -> α595'') where: α592' <: ((α594'',) -> α595''), α345' <: ((α592',) -> α596'')}  <!<  ((α585',) -> α586')
//│ ╟── while constraining:  ‹∀ 3. {(α591'''' -> α589'''') where: α592' <: ((α588'''',) -> α589''''), α345' <: ((α592',) -> α593'''')}›  <!<  ((α585',) -> α586')
//│ ╟── while constraining:  ‹∀ 3. {(α591'''' -> α589'''') where: α592' <: ((α588'''',) -> α589''''), α345' <: ((α592',) -> α593'''')}›  <!<  α584'
//│ ╟── while constraining:  ‹∀ 3. {(α591'''' -> α589'''') where: α587'' <: ((α588'''',) -> α589''''), α345' <: ((α587'',) -> α590'''')}›  <!<  α584'
//│ ╟── while constraining:  (α587'' -> ‹∀ 3. {(α591'''' -> α589'''') where: α587'' <: ((α588'''',) -> α589''''), α345' <: ((α587'',) -> α590'''')}›)  <!<  ((α576',) -> α584')
//│ ╟── while constraining:  ‹∀ 2. (α339''' -> ‹∀ 3. {(α340'''' -> α348'''') where: α339''' <: ((α347'''',) -> α348''''), α345' <: ((α339''',) -> α346'''')}›)›  <!<  ((α576',) -> α584')
//│ ╟── while constraining:  α345'  <!<  ((α576',) -> α584')
//│ ╟── while constraining:  α345'  <!<  ((α576',) -> α580'')
//│ ╟── while constraining:  {(α581'' -> α579'') where: α576' <: ((α578'',) -> α579''), α345' <: ((α576',) -> α580'')}  <!<  ((α569',) -> α570')
//│ ╟── while constraining:  ‹∀ 3. {(α575'''' -> α573'''') where: α576' <: ((α572'''',) -> α573''''), α345' <: ((α576',) -> α577'''')}›  <!<  ((α569',) -> α570')
//│ ╟── while constraining:  ‹∀ 3. {(α575'''' -> α573'''') where: α576' <: ((α572'''',) -> α573''''), α345' <: ((α576',) -> α577'''')}›  <!<  α568'
//│ ╟── while constraining:  ‹∀ 3. {(α575'''' -> α573'''') where: α571'' <: ((α572'''',) -> α573''''), α345' <: ((α571'',) -> α574'''')}›  <!<  α568'
//│ ╟── while constraining:  (α571'' -> ‹∀ 3. {(α575'''' -> α573'''') where: α571'' <: ((α572'''',) -> α573''''), α345' <: ((α571'',) -> α574'''')}›)  <!<  ((α560',) -> α568')
//│ ╟── while constraining:  ‹∀ 2. (α339''' -> ‹∀ 3. {(α340'''' -> α348'''') where: α339''' <: ((α347'''',) -> α348''''), α345' <: ((α339''',) -> α346'''')}›)›  <!<  ((α560',) -> α568')
//│ ╟── while constraining:  α345'  <!<  ((α560',) -> α568')
//│ ╟── while constraining:  α345'  <!<  ((α560',) -> α564'')
//│ ╟── while constraining:  {(α565'' -> α563'') where: α560' <: ((α562'',) -> α563''), α345' <: ((α560',) -> α564'')}  <!<  ((α553',) -> α554')
//│ ╟── while constraining:  ‹∀ 3. {(α559'''' -> α557'''') where: α560' <: ((α556'''',) -> α557''''), α345' <: ((α560',) -> α561'''')}›  <!<  ((α553',) -> α554')
//│ ╟── while constraining:  ‹∀ 3. {(α559'''' -> α557'''') where: α560' <: ((α556'''',) -> α557''''), α345' <: ((α560',) -> α561'''')}›  <!<  α552'
//│ ╟── while constraining:  ‹∀ 3. {(α559'''' -> α557'''') where: α555'' <: ((α556'''',) -> α557''''), α345' <: ((α555'',) -> α558'''')}›  <!<  α552'
//│ ╟── while constraining:  (α555'' -> ‹∀ 3. {(α559'''' -> α557'''') where: α555'' <: ((α556'''',) -> α557''''), α345' <: ((α555'',) -> α558'''')}›)  <!<  ((α544',) -> α552')
//│ ╟── while constraining:  ‹∀ 2. (α339''' -> ‹∀ 3. {(α340'''' -> α348'''') where: α339''' <: ((α347'''',) -> α348''''), α345' <: ((α339''',) -> α346'''')}›)›  <!<  ((α544',) -> α552')
//│ ╟── while constraining:  α345'  <!<  ((α544',) -> α552')
//│ ╟── while constraining:  α345'  <!<  ((α544',) -> α548'')
//│ ╟── while constraining:  {(α549'' -> α547'') where: α544' <: ((α546'',) -> α547''), α345' <: ((α544',) -> α548'')}  <!<  ((α537',) -> α538')
//│ ╟── while constraining:  ‹∀ 3. {(α543'''' -> α541'''') where: α544' <: ((α540'''',) -> α541''''), α345' <: ((α544',) -> α545'''')}›  <!<  ((α537',) -> α538')
//│ ╟── while constraining:  ‹∀ 3. {(α543'''' -> α541'''') where: α544' <: ((α540'''',) -> α541''''), α345' <: ((α544',) -> α545'''')}›  <!<  α536'
//│ ╟── while constraining:  ‹∀ 3. {(α543'''' -> α541'''') where: α539'' <: ((α540'''',) -> α541''''), α345' <: ((α539'',) -> α542'''')}›  <!<  α536'
//│ ╟── while constraining:  (α539'' -> ‹∀ 3. {(α543'''' -> α541'''') where: α539'' <: ((α540'''',) -> α541''''), α345' <: ((α539'',) -> α542'''')}›)  <!<  ((α528',) -> α536')
//│ ╟── while constraining:  ‹∀ 2. (α339''' -> ‹∀ 3. {(α340'''' -> α348'''') where: α339''' <: ((α347'''',) -> α348''''), α345' <: ((α339''',) -> α346'''')}›)›  <!<  ((α528',) -> α536')
//│ ╟── while constraining:  α345'  <!<  ((α528',) -> α536')
//│ ╟── while constraining:  α345'  <!<  ((α528',) -> α532'')
//│ ╟── while constraining:  {(α533'' -> α531'') where: α528' <: ((α530'',) -> α531''), α345' <: ((α528',) -> α532'')}  <!<  ((α521',) -> α522')
//│ ╟── while constraining:  ‹∀ 3. {(α527'''' -> α525'''') where: α528' <: ((α524'''',) -> α525''''), α345' <: ((α528',) -> α529'''')}›  <!<  ((α521',) -> α522')
//│ ╟── while constraining:  ‹∀ 3. {(α527'''' -> α525'''') where: α528' <: ((α524'''',) -> α525''''), α345' <: ((α528',) -> α529'''')}›  <!<  α520'
//│ ╟── while constraining:  ‹∀ 3. {(α527'''' -> α525'''') where: α523'' <: ((α524'''',) -> α525''''), α345' <: ((α523'',) -> α526'''')}›  <!<  α520'
//│ ╟── while constraining:  (α523'' -> ‹∀ 3. {(α527'''' -> α525'''') where: α523'' <: ((α524'''',) -> α525''''), α345' <: ((α523'',) -> α526'''')}›)  <!<  ((α512',) -> α520')
//│ ╟── while constraining:  ‹∀ 2. (α339''' -> ‹∀ 3. {(α340'''' -> α348'''') where: α339''' <: ((α347'''',) -> α348''''), α345' <: ((α339''',) -> α346'''')}›)›  <!<  ((α512',) -> α520')
//│ ╟── while constraining:  α345'  <!<  ((α512',) -> α520')
//│ ╟── while constraining:  α345'  <!<  ((α512',) -> α516'')
//│ ╟── while constraining:  {(α517'' -> α515'') where: α512' <: ((α514'',) -> α515''), α345' <: ((α512',) -> α516'')}  <!<  ((α505',) -> α506')
//│ ╟── while constraining:  ‹∀ 3. {(α511'''' -> α509'''') where: α512' <: ((α508'''',) -> α509''''), α345' <: ((α512',) -> α513'''')}›  <!<  ((α505',) -> α506')
//│ ╟── while constraining:  ‹∀ 3. {(α511'''' -> α509'''') where: α512' <: ((α508'''',) -> α509''''), α345' <: ((α512',) -> α513'''')}›  <!<  α504'
//│ ╟── while constraining:  ‹∀ 3. {(α511'''' -> α509'''') where: α507'' <: ((α508'''',) -> α509''''), α345' <: ((α507'',) -> α510'''')}›  <!<  α504'
//│ ╟── while constraining:  (α507'' -> ‹∀ 3. {(α511'''' -> α509'''') where: α507'' <: ((α508'''',) -> α509''''), α345' <: ((α507'',) -> α510'''')}›)  <!<  ((α496',) -> α504')
//│ ╟── while constraining:  ‹∀ 2. (α339''' -> ‹∀ 3. {(α340'''' -> α348'''') where: α339''' <: ((α347'''',) -> α348''''), α345' <: ((α339''',) -> α346'''')}›)›  <!<  ((α496',) -> α504')
//│ ╟── while constraining:  α345'  <!<  ((α496',) -> α504')
//│ ╟── while constraining:  α345'  <!<  ((α496',) -> α500'')
//│ ╟── while constraining:  {(α501'' -> α499'') where: α496' <: ((α498'',) -> α499''), α345' <: ((α496',) -> α500'')}  <!<  ((α489',) -> α490')
//│ ╟── while constraining:  ‹∀ 3. {(α495'''' -> α493'''') where: α496' <: ((α492'''',) -> α493''''), α345' <: ((α496',) -> α497'''')}›  <!<  ((α489',) -> α490')
//│ ╟── while constraining:  ‹∀ 3. {(α495'''' -> α493'''') where: α496' <: ((α492'''',) -> α493''''), α345' <: ((α496',) -> α497'''')}›  <!<  α488'
//│ ╟── while constraining:  ‹∀ 3. {(α495'''' -> α493'''') where: α491'' <: ((α492'''',) -> α493''''), α345' <: ((α491'',) -> α494'''')}›  <!<  α488'
//│ ╟── while constraining:  (α491'' -> ‹∀ 3. {(α495'''' -> α493'''') where: α491'' <: ((α492'''',) -> α493''''), α345' <: ((α491'',) -> α494'''')}›)  <!<  ((α480',) -> α488')
//│ ╟── while constraining:  ‹∀ 2. (α339''' -> ‹∀ 3. {(α340'''' -> α348'''') where: α339''' <: ((α347'''',) -> α348''''), α345' <: ((α339''',) -> α346'''')}›)›  <!<  ((α480',) -> α488')
//│ ╟── while constraining:  α345'  <!<  ((α480',) -> α488')
//│ ╟── while constraining:  α345'  <!<  ((α480',) -> α484'')
//│ ╟── while constraining:  {(α485'' -> α483'') where: α480' <: ((α482'',) -> α483''), α345' <: ((α480',) -> α484'')}  <!<  ((α473',) -> α474')
//│ ╟── while constraining:  ‹∀ 3. {(α479'''' -> α477'''') where: α480' <: ((α476'''',) -> α477''''), α345' <: ((α480',) -> α481'''')}›  <!<  ((α473',) -> α474')
//│ ╟── while constraining:  ‹∀ 3. {(α479'''' -> α477'''') where: α480' <: ((α476'''',) -> α477''''), α345' <: ((α480',) -> α481'''')}›  <!<  α472'
//│ ╟── while constraining:  ‹∀ 3. {(α479'''' -> α477'''') where: α475'' <: ((α476'''',) -> α477''''), α345' <: ((α475'',) -> α478'''')}›  <!<  α472'
//│ ╟── while constraining:  (α475'' -> ‹∀ 3. {(α479'''' -> α477'''') where: α475'' <: ((α476'''',) -> α477''''), α345' <: ((α475'',) -> α478'''')}›)  <!<  ((α464',) -> α472')
//│ ╟── while constraining:  ‹∀ 2. (α339''' -> ‹∀ 3. {(α340'''' -> α348'''') where: α339''' <: ((α347'''',) -> α348''''), α345' <: ((α339''',) -> α346'''')}›)›  <!<  ((α464',) -> α472')
//│ ╟── while constraining:  α345'  <!<  ((α464',) -> α472')
//│ ╟── while constraining:  α345'  <!<  ((α464',) -> α468'')
//│ ╟── while constraining:  {(α469'' -> α467'') where: α464' <: ((α466'',) -> α467''), α345' <: ((α464',) -> α468'')}  <!<  ((α457',) -> α458')
//│ ╟── while constraining:  ‹∀ 3. {(α463'''' -> α461'''') where: α464' <: ((α460'''',) -> α461''''), α345' <: ((α464',) -> α465'''')}›  <!<  ((α457',) -> α458')
//│ ╟── while constraining:  ‹∀ 3. {(α463'''' -> α461'''') where: α464' <: ((α460'''',) -> α461''''), α345' <: ((α464',) -> α465'''')}›  <!<  α456'
//│ ╟── while constraining:  ‹∀ 3. {(α463'''' -> α461'''') where: α459'' <: ((α460'''',) -> α461''''), α345' <: ((α459'',) -> α462'''')}›  <!<  α456'
//│ ╟── while constraining:  (α459'' -> ‹∀ 3. {(α463'''' -> α461'''') where: α459'' <: ((α460'''',) -> α461''''), α345' <: ((α459'',) -> α462'''')}›)  <!<  ((α448',) -> α456')
//│ ╟── while constraining:  ‹∀ 2. (α339''' -> ‹∀ 3. {(α340'''' -> α348'''') where: α339''' <: ((α347'''',) -> α348''''), α345' <: ((α339''',) -> α346'''')}›)›  <!<  ((α448',) -> α456')
//│ ╟── while constraining:  α345'  <!<  ((α448',) -> α456')
//│ ╟── while constraining:  α345'  <!<  ((α448',) -> α452'')
//│ ╟── while constraining:  {(α453'' -> α451'') where: α448' <: ((α450'',) -> α451''), α345' <: ((α448',) -> α452'')}  <!<  ((α441',) -> α442')
//│ ╟── while constraining:  ‹∀ 3. {(α447'''' -> α445'''') where: α448' <: ((α444'''',) -> α445''''), α345' <: ((α448',) -> α449'''')}›  <!<  ((α441',) -> α442')
//│ ╟── while constraining:  ‹∀ 3. {(α447'''' -> α445'''') where: α448' <: ((α444'''',) -> α445''''), α345' <: ((α448',) -> α449'''')}›  <!<  α440'
//│ ╟── while constraining:  ‹∀ 3. {(α447'''' -> α445'''') where: α443'' <: ((α444'''',) -> α445''''), α345' <: ((α443'',) -> α446'''')}›  <!<  α440'
//│ ╟── while constraining:  (α443'' -> ‹∀ 3. {(α447'''' -> α445'''') where: α443'' <: ((α444'''',) -> α445''''), α345' <: ((α443'',) -> α446'''')}›)  <!<  ((α432',) -> α440')
//│ ╟── while constraining:  ‹∀ 2. (α339''' -> ‹∀ 3. {(α340'''' -> α348'''') where: α339''' <: ((α347'''',) -> α348''''), α345' <: ((α339''',) -> α346'''')}›)›  <!<  ((α432',) -> α440')
//│ ╟── while constraining:  α345'  <!<  ((α432',) -> α440')
//│ ╟── while constraining:  α345'  <!<  ((α432',) -> α436'')
//│ ╟── while constraining:  {(α437'' -> α435'') where: α432' <: ((α434'',) -> α435''), α345' <: ((α432',) -> α436'')}  <!<  ((α425',) -> α426')
//│ ╟── while constraining:  ‹∀ 3. {(α431'''' -> α429'''') where: α432' <: ((α428'''',) -> α429''''), α345' <: ((α432',) -> α433'''')}›  <!<  ((α425',) -> α426')
//│ ╟── while constraining:  ‹∀ 3. {(α431'''' -> α429'''') where: α432' <: ((α428'''',) -> α429''''), α345' <: ((α432',) -> α433'''')}›  <!<  α424'
//│ ╟── while constraining:  ‹∀ 3. {(α431'''' -> α429'''') where: α427'' <: ((α428'''',) -> α429''''), α345' <: ((α427'',) -> α430'''')}›  <!<  α424'
//│ ╟── while constraining:  (α427'' -> ‹∀ 3. {(α431'''' -> α429'''') where: α427'' <: ((α428'''',) -> α429''''), α345' <: ((α427'',) -> α430'''')}›)  <!<  ((α416',) -> α424')
//│ ╟── while constraining:  ‹∀ 2. (α339''' -> ‹∀ 3. {(α340'''' -> α348'''') where: α339''' <: ((α347'''',) -> α348''''), α345' <: ((α339''',) -> α346'''')}›)›  <!<  ((α416',) -> α424')
//│ ╟── while constraining:  α345'  <!<  ((α416',) -> α424')
//│ ╟── while constraining:  α345'  <!<  ((α416',) -> α420'')
//│ ╟── while constraining:  {(α421'' -> α419'') where: α416' <: ((α418'',) -> α419''), α345' <: ((α416',) -> α420'')}  <!<  ((α409',) -> α410')
//│ ╟── while constraining:  ‹∀ 3. {(α415'''' -> α413'''') where: α416' <: ((α412'''',) -> α413''''), α345' <: ((α416',) -> α417'''')}›  <!<  ((α409',) -> α410')
//│ ╟── while constraining:  ‹∀ 3. {(α415'''' -> α413'''') where: α416' <: ((α412'''',) -> α413''''), α345' <: ((α416',) -> α417'''')}›  <!<  α408'
//│ ╟── while constraining:  ‹∀ 3. {(α415'''' -> α413'''') where: α411'' <: ((α412'''',) -> α413''''), α345' <: ((α411'',) -> α414'''')}›  <!<  α408'
//│ ╟── while constraining:  (α411'' -> ‹∀ 3. {(α415'''' -> α413'''') where: α411'' <: ((α412'''',) -> α413''''), α345' <: ((α411'',) -> α414'''')}›)  <!<  ((α400',) -> α408')
//│ ╟── while constraining:  ‹∀ 2. (α339''' -> ‹∀ 3. {(α340'''' -> α348'''') where: α339''' <: ((α347'''',) -> α348''''), α345' <: ((α339''',) -> α346'''')}›)›  <!<  ((α400',) -> α408')
//│ ╟── while constraining:  α345'  <!<  ((α400',) -> α408')
//│ ╟── while constraining:  α345'  <!<  ((α400',) -> α404'')
//│ ╟── while constraining:  {(α405'' -> α403'') where: α400' <: ((α402'',) -> α403''), α345' <: ((α400',) -> α404'')}  <!<  ((α393',) -> α394')
//│ ╟── while constraining:  ‹∀ 3. {(α399'''' -> α397'''') where: α400' <: ((α396'''',) -> α397''''), α345' <: ((α400',) -> α401'''')}›  <!<  ((α393',) -> α394')
//│ ╟── while constraining:  ‹∀ 3. {(α399'''' -> α397'''') where: α400' <: ((α396'''',) -> α397''''), α345' <: ((α400',) -> α401'''')}›  <!<  α392'
//│ ╟── while constraining:  ‹∀ 3. {(α399'''' -> α397'''') where: α395'' <: ((α396'''',) -> α397''''), α345' <: ((α395'',) -> α398'''')}›  <!<  α392'
//│ ╟── while constraining:  (α395'' -> ‹∀ 3. {(α399'''' -> α397'''') where: α395'' <: ((α396'''',) -> α397''''), α345' <: ((α395'',) -> α398'''')}›)  <!<  ((α391',) -> α392')
//│ ╟── while constraining:  ‹∀ 2. (α339''' -> ‹∀ 3. {(α340'''' -> α348'''') where: α339''' <: ((α347'''',) -> α348''''), α345' <: ((α339''',) -> α346'''')}›)›  <!<  ((α391',) -> α392')
//│ ╟── while constraining:  α345'  <!<  ((α391',) -> α392')
//│ ╟── while constraining:  α345'  <!<  ((α382'',) -> α389'')
//│ ╟── while constraining:  {(α390'' -> α388'') where: α382'' <: ((α387'',) -> α388''), α345' <: ((α382'',) -> α389'')}  <!<  (‘a'' -> ‘a'')
//│ ╟── while constraining:  ‹∀ 3. {(α386'''' -> α384'''') where: α382'' <: ((α383'''',) -> α384''''), α345' <: ((α382'',) -> α385'''')}›  <!<  (‘a'' -> ‘a'')
//│ ╟── while constraining:  (α382'' -> ‹∀ 3. {(α386'''' -> α384'''') where: α382'' <: ((α383'''',) -> α384''''), α345' <: ((α382'',) -> α385'''')}›)  <!<  ((‘a'' -> ‘a'') -> (‘a'' -> ‘a''))
//│ ╟── while constraining:  ‹∀ 2. (α339''' -> ‹∀ 3. {(α340'''' -> α348'''') where: α339''' <: ((α347'''',) -> α348''''), α345' <: ((α339''',) -> α346'''')}›)›  <!<  ((‘a'' -> ‘a'') -> (‘a'' -> ‘a''))
//│ ╟── while constraining:  ‹∀ 2. (α339''' -> ‹∀ 3. {(α340'''' -> α348'''') where: α339''' <: ((α347'''',) -> α348''''), α345' <: ((α339''',) -> α346'''')}›)›  <!<  ‹∀ 0. (('a49' -> 'a49') -> ('a49' -> 'a49'))›
//│ ╟── while constraining:  ‹∀ 2. (α339''' -> ‹∀ 3. {(α340'''' -> α348'''') where: α339''' <: ((α347'''',) -> α348''''), α345' <: ((α339''',) -> α346'''')}›)›  <!<  ChurchInt
//│ ╟── while constraining:  α379'  <!<  ChurchInt
//│ ╟── while constraining:  (α378' -> α379')  <!<  (Int -> ChurchInt)
//│ ╟── while constraining:  ‹∀ 1. (α331'' -> α349'')›  <!<  (Int -> ChurchInt)
//│ ╟── while constraining:  to_church374'  <!<  (Int -> ChurchInt)
//│ ╟── while constraining:  ‹∀ 0. to_church330'›  <!<  (Int -> ChurchInt)
//│ ╙── while constraining:  ‹∀ 0. to_church330'›  <!<  ‹∀ 0. (Int -> ChurchInt)›
//│          = [Function: to_church4]

:e // not precise enough
rec def to_church' n =
  if n == 0 then fun f -> fun x -> x
  else fun f -> fun x -> f ((to_church' (n - 1)) f x)
to_church = to_church'
//│ to_church': int -> (forall 'a. 'a -> (forall 'a, 'b, 'c, 'd. (('c & 'd) -> 'c
//│   where
//│     'a <: 'b -> 'c
//│     'e <: 'a -> 'd -> 'b)))
//│           = [Function: to_church4]
//│ int -> (forall 'a. 'a -> (forall 'a, 'b, 'c, 'd. (('c & 'd) -> 'c
//│   where
//│     'a <: 'b -> 'c
//│     'e <: 'a -> 'd -> 'b)))
//│   <:  to_church:
//│ int -> ChurchInt
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?a, ?b, ?c, ?d, ?e, ?f, ?g, ?h, ?i, ?j, ?k, ?l, ?m, ?n, ?o, ?p, ?q, ?r, ?s, ?to_church', ?t, ?u, ?v, ?w, ?x, ?y, ?z, ?a1, ?b1, ?c1, ?d1, ?e1, ?f1, ?g1, ?h1, ?i1, ?j1, ?k1, ?l1, ?m1, ?n1, ?o1, ?p1, ?q1, ?r1, ?s1, ?t1, ?u1, ?v1, ?w1, ?x1, ?y1, ?z1, ?a2, ?b2, ?c2, ?d2, ?e2, ?f2, ?g2, ?h2, ?i2, ?j2, ?k2, ?l2, ?m2, ?n2, ?o2, ?p2, ?q2, ?r2, ?s2, ?t2, ?u2, ?v2, ?w2, ?x2, ?y2, ?z2, ?a3, ?b3, ?c3, ?d3, ?e3, ?f3, ?g3, ?h3, ?i3, ?j3, ?k3, ?l3, ?m3, ?n3, ?o3, ?p3, ?q3, ?r3, ?s3, ?t3, ?u3, ?v3, ?w3, ?x3, ?y3, ?z3, ?a4, ?b4. ?to_church' <: int -> ChurchInt` exceeded recursion depth limit (400)
//│ ║  l.322: 	to_church = to_church'
//│ ║         	^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── while constraining:  α1148'  <!<  ‘a''
//│ ╟── while constraining:  (α1148',)  <!<  (‘a'',)
//│ ╟── while constraining:  (‘a'' -> ‘a'')  <!<  ((α1148',) -> α1149')
//│ ╟── while constraining:  α877'  <!<  ((α1148',) -> α1149')
//│ ╟── while constraining:  α886'  <!<  ((α1148',) -> α1149')
//│ ╟── while constraining:  α902'  <!<  ((α1148',) -> α1149')
//│ ╟── while constraining:  α918'  <!<  ((α1148',) -> α1149')
//│ ╟── while constraining:  α934'  <!<  ((α1148',) -> α1149')
//│ ╟── while constraining:  α950'  <!<  ((α1148',) -> α1149')
//│ ╟── while constraining:  α966'  <!<  ((α1148',) -> α1149')
//│ ╟── while constraining:  α982'  <!<  ((α1148',) -> α1149')
//│ ╟── while constraining:  α998'  <!<  ((α1148',) -> α1149')
//│ ╟── while constraining:  α1014'  <!<  ((α1148',) -> α1149')
//│ ╟── while constraining:  α1030'  <!<  ((α1148',) -> α1149')
//│ ╟── while constraining:  α1046'  <!<  ((α1148',) -> α1149')
//│ ╟── while constraining:  α1062'  <!<  ((α1148',) -> α1149')
//│ ╟── while constraining:  α1078'  <!<  ((α1148',) -> α1149')
//│ ╟── while constraining:  α1094'  <!<  ((α1148',) -> α1149')
//│ ╟── while constraining:  α1110'  <!<  ((α1148',) -> α1149')
//│ ╟── while constraining:  α1126'  <!<  ((α1148',) -> α1149')
//│ ╟── while constraining:  α1142'  <!<  ((α1148',) -> α1149')
//│ ╟── while constraining:  α1142'  <!<  ((α1144'',) -> α1145'')
//│ ╟── while constraining:  {(α1147'' -> α1145'') where: α1142' <: ((α1144'',) -> α1145''), α809' <: ((α1142',) -> α1146'')}  <!<  ((α1135',) -> α1136')
//│ ╟── while constraining:  ‹∀ 3. {(α1141'''' -> α1139'''') where: α1142' <: ((α1138'''',) -> α1139''''), α809' <: ((α1142',) -> α1143'''')}›  <!<  ((α1135',) -> α1136')
//│ ╟── while constraining:  ‹∀ 3. {(α1141'''' -> α1139'''') where: α1142' <: ((α1138'''',) -> α1139''''), α809' <: ((α1142',) -> α1143'''')}›  <!<  α1134'
//│ ╟── while constraining:  ‹∀ 3. {(α1141'''' -> α1139'''') where: α1137'' <: ((α1138'''',) -> α1139''''), α809' <: ((α1137'',) -> α1140'''')}›  <!<  α1134'
//│ ╟── while constraining:  (α1137'' -> ‹∀ 3. {(α1141'''' -> α1139'''') where: α1137'' <: ((α1138'''',) -> α1139''''), α809' <: ((α1137'',) -> α1140'''')}›)  <!<  ((α1126',) -> α1134')
//│ ╟── while constraining:  ‹∀ 2. (α803''' -> ‹∀ 3. {(α804'''' -> α812'''') where: α803''' <: ((α811'''',) -> α812''''), α809' <: ((α803''',) -> α810'''')}›)›  <!<  ((α1126',) -> α1134')
//│ ╟── while constraining:  α809'  <!<  ((α1126',) -> α1134')
//│ ╟── while constraining:  α809'  <!<  ((α1126',) -> α1130'')
//│ ╟── while constraining:  {(α1131'' -> α1129'') where: α1126' <: ((α1128'',) -> α1129''), α809' <: ((α1126',) -> α1130'')}  <!<  ((α1119',) -> α1120')
//│ ╟── while constraining:  ‹∀ 3. {(α1125'''' -> α1123'''') where: α1126' <: ((α1122'''',) -> α1123''''), α809' <: ((α1126',) -> α1127'''')}›  <!<  ((α1119',) -> α1120')
//│ ╟── while constraining:  ‹∀ 3. {(α1125'''' -> α1123'''') where: α1126' <: ((α1122'''',) -> α1123''''), α809' <: ((α1126',) -> α1127'''')}›  <!<  α1118'
//│ ╟── while constraining:  ‹∀ 3. {(α1125'''' -> α1123'''') where: α1121'' <: ((α1122'''',) -> α1123''''), α809' <: ((α1121'',) -> α1124'''')}›  <!<  α1118'
//│ ╟── while constraining:  (α1121'' -> ‹∀ 3. {(α1125'''' -> α1123'''') where: α1121'' <: ((α1122'''',) -> α1123''''), α809' <: ((α1121'',) -> α1124'''')}›)  <!<  ((α1110',) -> α1118')
//│ ╟── while constraining:  ‹∀ 2. (α803''' -> ‹∀ 3. {(α804'''' -> α812'''') where: α803''' <: ((α811'''',) -> α812''''), α809' <: ((α803''',) -> α810'''')}›)›  <!<  ((α1110',) -> α1118')
//│ ╟── while constraining:  α809'  <!<  ((α1110',) -> α1118')
//│ ╟── while constraining:  α809'  <!<  ((α1110',) -> α1114'')
//│ ╟── while constraining:  {(α1115'' -> α1113'') where: α1110' <: ((α1112'',) -> α1113''), α809' <: ((α1110',) -> α1114'')}  <!<  ((α1103',) -> α1104')
//│ ╟── while constraining:  ‹∀ 3. {(α1109'''' -> α1107'''') where: α1110' <: ((α1106'''',) -> α1107''''), α809' <: ((α1110',) -> α1111'''')}›  <!<  ((α1103',) -> α1104')
//│ ╟── while constraining:  ‹∀ 3. {(α1109'''' -> α1107'''') where: α1110' <: ((α1106'''',) -> α1107''''), α809' <: ((α1110',) -> α1111'''')}›  <!<  α1102'
//│ ╟── while constraining:  ‹∀ 3. {(α1109'''' -> α1107'''') where: α1105'' <: ((α1106'''',) -> α1107''''), α809' <: ((α1105'',) -> α1108'''')}›  <!<  α1102'
//│ ╟── while constraining:  (α1105'' -> ‹∀ 3. {(α1109'''' -> α1107'''') where: α1105'' <: ((α1106'''',) -> α1107''''), α809' <: ((α1105'',) -> α1108'''')}›)  <!<  ((α1094',) -> α1102')
//│ ╟── while constraining:  ‹∀ 2. (α803''' -> ‹∀ 3. {(α804'''' -> α812'''') where: α803''' <: ((α811'''',) -> α812''''), α809' <: ((α803''',) -> α810'''')}›)›  <!<  ((α1094',) -> α1102')
//│ ╟── while constraining:  α809'  <!<  ((α1094',) -> α1102')
//│ ╟── while constraining:  α809'  <!<  ((α1094',) -> α1098'')
//│ ╟── while constraining:  {(α1099'' -> α1097'') where: α1094' <: ((α1096'',) -> α1097''), α809' <: ((α1094',) -> α1098'')}  <!<  ((α1087',) -> α1088')
//│ ╟── while constraining:  ‹∀ 3. {(α1093'''' -> α1091'''') where: α1094' <: ((α1090'''',) -> α1091''''), α809' <: ((α1094',) -> α1095'''')}›  <!<  ((α1087',) -> α1088')
//│ ╟── while constraining:  ‹∀ 3. {(α1093'''' -> α1091'''') where: α1094' <: ((α1090'''',) -> α1091''''), α809' <: ((α1094',) -> α1095'''')}›  <!<  α1086'
//│ ╟── while constraining:  ‹∀ 3. {(α1093'''' -> α1091'''') where: α1089'' <: ((α1090'''',) -> α1091''''), α809' <: ((α1089'',) -> α1092'''')}›  <!<  α1086'
//│ ╟── while constraining:  (α1089'' -> ‹∀ 3. {(α1093'''' -> α1091'''') where: α1089'' <: ((α1090'''',) -> α1091''''), α809' <: ((α1089'',) -> α1092'''')}›)  <!<  ((α1078',) -> α1086')
//│ ╟── while constraining:  ‹∀ 2. (α803''' -> ‹∀ 3. {(α804'''' -> α812'''') where: α803''' <: ((α811'''',) -> α812''''), α809' <: ((α803''',) -> α810'''')}›)›  <!<  ((α1078',) -> α1086')
//│ ╟── while constraining:  α809'  <!<  ((α1078',) -> α1086')
//│ ╟── while constraining:  α809'  <!<  ((α1078',) -> α1082'')
//│ ╟── while constraining:  {(α1083'' -> α1081'') where: α1078' <: ((α1080'',) -> α1081''), α809' <: ((α1078',) -> α1082'')}  <!<  ((α1071',) -> α1072')
//│ ╟── while constraining:  ‹∀ 3. {(α1077'''' -> α1075'''') where: α1078' <: ((α1074'''',) -> α1075''''), α809' <: ((α1078',) -> α1079'''')}›  <!<  ((α1071',) -> α1072')
//│ ╟── while constraining:  ‹∀ 3. {(α1077'''' -> α1075'''') where: α1078' <: ((α1074'''',) -> α1075''''), α809' <: ((α1078',) -> α1079'''')}›  <!<  α1070'
//│ ╟── while constraining:  ‹∀ 3. {(α1077'''' -> α1075'''') where: α1073'' <: ((α1074'''',) -> α1075''''), α809' <: ((α1073'',) -> α1076'''')}›  <!<  α1070'
//│ ╟── while constraining:  (α1073'' -> ‹∀ 3. {(α1077'''' -> α1075'''') where: α1073'' <: ((α1074'''',) -> α1075''''), α809' <: ((α1073'',) -> α1076'''')}›)  <!<  ((α1062',) -> α1070')
//│ ╟── while constraining:  ‹∀ 2. (α803''' -> ‹∀ 3. {(α804'''' -> α812'''') where: α803''' <: ((α811'''',) -> α812''''), α809' <: ((α803''',) -> α810'''')}›)›  <!<  ((α1062',) -> α1070')
//│ ╟── while constraining:  α809'  <!<  ((α1062',) -> α1070')
//│ ╟── while constraining:  α809'  <!<  ((α1062',) -> α1066'')
//│ ╟── while constraining:  {(α1067'' -> α1065'') where: α1062' <: ((α1064'',) -> α1065''), α809' <: ((α1062',) -> α1066'')}  <!<  ((α1055',) -> α1056')
//│ ╟── while constraining:  ‹∀ 3. {(α1061'''' -> α1059'''') where: α1062' <: ((α1058'''',) -> α1059''''), α809' <: ((α1062',) -> α1063'''')}›  <!<  ((α1055',) -> α1056')
//│ ╟── while constraining:  ‹∀ 3. {(α1061'''' -> α1059'''') where: α1062' <: ((α1058'''',) -> α1059''''), α809' <: ((α1062',) -> α1063'''')}›  <!<  α1054'
//│ ╟── while constraining:  ‹∀ 3. {(α1061'''' -> α1059'''') where: α1057'' <: ((α1058'''',) -> α1059''''), α809' <: ((α1057'',) -> α1060'''')}›  <!<  α1054'
//│ ╟── while constraining:  (α1057'' -> ‹∀ 3. {(α1061'''' -> α1059'''') where: α1057'' <: ((α1058'''',) -> α1059''''), α809' <: ((α1057'',) -> α1060'''')}›)  <!<  ((α1046',) -> α1054')
//│ ╟── while constraining:  ‹∀ 2. (α803''' -> ‹∀ 3. {(α804'''' -> α812'''') where: α803''' <: ((α811'''',) -> α812''''), α809' <: ((α803''',) -> α810'''')}›)›  <!<  ((α1046',) -> α1054')
//│ ╟── while constraining:  α809'  <!<  ((α1046',) -> α1054')
//│ ╟── while constraining:  α809'  <!<  ((α1046',) -> α1050'')
//│ ╟── while constraining:  {(α1051'' -> α1049'') where: α1046' <: ((α1048'',) -> α1049''), α809' <: ((α1046',) -> α1050'')}  <!<  ((α1039',) -> α1040')
//│ ╟── while constraining:  ‹∀ 3. {(α1045'''' -> α1043'''') where: α1046' <: ((α1042'''',) -> α1043''''), α809' <: ((α1046',) -> α1047'''')}›  <!<  ((α1039',) -> α1040')
//│ ╟── while constraining:  ‹∀ 3. {(α1045'''' -> α1043'''') where: α1046' <: ((α1042'''',) -> α1043''''), α809' <: ((α1046',) -> α1047'''')}›  <!<  α1038'
//│ ╟── while constraining:  ‹∀ 3. {(α1045'''' -> α1043'''') where: α1041'' <: ((α1042'''',) -> α1043''''), α809' <: ((α1041'',) -> α1044'''')}›  <!<  α1038'
//│ ╟── while constraining:  (α1041'' -> ‹∀ 3. {(α1045'''' -> α1043'''') where: α1041'' <: ((α1042'''',) -> α1043''''), α809' <: ((α1041'',) -> α1044'''')}›)  <!<  ((α1030',) -> α1038')
//│ ╟── while constraining:  ‹∀ 2. (α803''' -> ‹∀ 3. {(α804'''' -> α812'''') where: α803''' <: ((α811'''',) -> α812''''), α809' <: ((α803''',) -> α810'''')}›)›  <!<  ((α1030',) -> α1038')
//│ ╟── while constraining:  α809'  <!<  ((α1030',) -> α1038')
//│ ╟── while constraining:  α809'  <!<  ((α1030',) -> α1034'')
//│ ╟── while constraining:  {(α1035'' -> α1033'') where: α1030' <: ((α1032'',) -> α1033''), α809' <: ((α1030',) -> α1034'')}  <!<  ((α1023',) -> α1024')
//│ ╟── while constraining:  ‹∀ 3. {(α1029'''' -> α1027'''') where: α1030' <: ((α1026'''',) -> α1027''''), α809' <: ((α1030',) -> α1031'''')}›  <!<  ((α1023',) -> α1024')
//│ ╟── while constraining:  ‹∀ 3. {(α1029'''' -> α1027'''') where: α1030' <: ((α1026'''',) -> α1027''''), α809' <: ((α1030',) -> α1031'''')}›  <!<  α1022'
//│ ╟── while constraining:  ‹∀ 3. {(α1029'''' -> α1027'''') where: α1025'' <: ((α1026'''',) -> α1027''''), α809' <: ((α1025'',) -> α1028'''')}›  <!<  α1022'
//│ ╟── while constraining:  (α1025'' -> ‹∀ 3. {(α1029'''' -> α1027'''') where: α1025'' <: ((α1026'''',) -> α1027''''), α809' <: ((α1025'',) -> α1028'''')}›)  <!<  ((α1014',) -> α1022')
//│ ╟── while constraining:  ‹∀ 2. (α803''' -> ‹∀ 3. {(α804'''' -> α812'''') where: α803''' <: ((α811'''',) -> α812''''), α809' <: ((α803''',) -> α810'''')}›)›  <!<  ((α1014',) -> α1022')
//│ ╟── while constraining:  α809'  <!<  ((α1014',) -> α1022')
//│ ╟── while constraining:  α809'  <!<  ((α1014',) -> α1018'')
//│ ╟── while constraining:  {(α1019'' -> α1017'') where: α1014' <: ((α1016'',) -> α1017''), α809' <: ((α1014',) -> α1018'')}  <!<  ((α1007',) -> α1008')
//│ ╟── while constraining:  ‹∀ 3. {(α1013'''' -> α1011'''') where: α1014' <: ((α1010'''',) -> α1011''''), α809' <: ((α1014',) -> α1015'''')}›  <!<  ((α1007',) -> α1008')
//│ ╟── while constraining:  ‹∀ 3. {(α1013'''' -> α1011'''') where: α1014' <: ((α1010'''',) -> α1011''''), α809' <: ((α1014',) -> α1015'''')}›  <!<  α1006'
//│ ╟── while constraining:  ‹∀ 3. {(α1013'''' -> α1011'''') where: α1009'' <: ((α1010'''',) -> α1011''''), α809' <: ((α1009'',) -> α1012'''')}›  <!<  α1006'
//│ ╟── while constraining:  (α1009'' -> ‹∀ 3. {(α1013'''' -> α1011'''') where: α1009'' <: ((α1010'''',) -> α1011''''), α809' <: ((α1009'',) -> α1012'''')}›)  <!<  ((α998',) -> α1006')
//│ ╟── while constraining:  ‹∀ 2. (α803''' -> ‹∀ 3. {(α804'''' -> α812'''') where: α803''' <: ((α811'''',) -> α812''''), α809' <: ((α803''',) -> α810'''')}›)›  <!<  ((α998',) -> α1006')
//│ ╟── while constraining:  α809'  <!<  ((α998',) -> α1006')
//│ ╟── while constraining:  α809'  <!<  ((α998',) -> α1002'')
//│ ╟── while constraining:  {(α1003'' -> α1001'') where: α998' <: ((α1000'',) -> α1001''), α809' <: ((α998',) -> α1002'')}  <!<  ((α991',) -> α992')
//│ ╟── while constraining:  ‹∀ 3. {(α997'''' -> α995'''') where: α998' <: ((α994'''',) -> α995''''), α809' <: ((α998',) -> α999'''')}›  <!<  ((α991',) -> α992')
//│ ╟── while constraining:  ‹∀ 3. {(α997'''' -> α995'''') where: α998' <: ((α994'''',) -> α995''''), α809' <: ((α998',) -> α999'''')}›  <!<  α990'
//│ ╟── while constraining:  ‹∀ 3. {(α997'''' -> α995'''') where: α993'' <: ((α994'''',) -> α995''''), α809' <: ((α993'',) -> α996'''')}›  <!<  α990'
//│ ╟── while constraining:  (α993'' -> ‹∀ 3. {(α997'''' -> α995'''') where: α993'' <: ((α994'''',) -> α995''''), α809' <: ((α993'',) -> α996'''')}›)  <!<  ((α982',) -> α990')
//│ ╟── while constraining:  ‹∀ 2. (α803''' -> ‹∀ 3. {(α804'''' -> α812'''') where: α803''' <: ((α811'''',) -> α812''''), α809' <: ((α803''',) -> α810'''')}›)›  <!<  ((α982',) -> α990')
//│ ╟── while constraining:  α809'  <!<  ((α982',) -> α990')
//│ ╟── while constraining:  α809'  <!<  ((α982',) -> α986'')
//│ ╟── while constraining:  {(α987'' -> α985'') where: α982' <: ((α984'',) -> α985''), α809' <: ((α982',) -> α986'')}  <!<  ((α975',) -> α976')
//│ ╟── while constraining:  ‹∀ 3. {(α981'''' -> α979'''') where: α982' <: ((α978'''',) -> α979''''), α809' <: ((α982',) -> α983'''')}›  <!<  ((α975',) -> α976')
//│ ╟── while constraining:  ‹∀ 3. {(α981'''' -> α979'''') where: α982' <: ((α978'''',) -> α979''''), α809' <: ((α982',) -> α983'''')}›  <!<  α974'
//│ ╟── while constraining:  ‹∀ 3. {(α981'''' -> α979'''') where: α977'' <: ((α978'''',) -> α979''''), α809' <: ((α977'',) -> α980'''')}›  <!<  α974'
//│ ╟── while constraining:  (α977'' -> ‹∀ 3. {(α981'''' -> α979'''') where: α977'' <: ((α978'''',) -> α979''''), α809' <: ((α977'',) -> α980'''')}›)  <!<  ((α966',) -> α974')
//│ ╟── while constraining:  ‹∀ 2. (α803''' -> ‹∀ 3. {(α804'''' -> α812'''') where: α803''' <: ((α811'''',) -> α812''''), α809' <: ((α803''',) -> α810'''')}›)›  <!<  ((α966',) -> α974')
//│ ╟── while constraining:  α809'  <!<  ((α966',) -> α974')
//│ ╟── while constraining:  α809'  <!<  ((α966',) -> α970'')
//│ ╟── while constraining:  {(α971'' -> α969'') where: α966' <: ((α968'',) -> α969''), α809' <: ((α966',) -> α970'')}  <!<  ((α959',) -> α960')
//│ ╟── while constraining:  ‹∀ 3. {(α965'''' -> α963'''') where: α966' <: ((α962'''',) -> α963''''), α809' <: ((α966',) -> α967'''')}›  <!<  ((α959',) -> α960')
//│ ╟── while constraining:  ‹∀ 3. {(α965'''' -> α963'''') where: α966' <: ((α962'''',) -> α963''''), α809' <: ((α966',) -> α967'''')}›  <!<  α958'
//│ ╟── while constraining:  ‹∀ 3. {(α965'''' -> α963'''') where: α961'' <: ((α962'''',) -> α963''''), α809' <: ((α961'',) -> α964'''')}›  <!<  α958'
//│ ╟── while constraining:  (α961'' -> ‹∀ 3. {(α965'''' -> α963'''') where: α961'' <: ((α962'''',) -> α963''''), α809' <: ((α961'',) -> α964'''')}›)  <!<  ((α950',) -> α958')
//│ ╟── while constraining:  ‹∀ 2. (α803''' -> ‹∀ 3. {(α804'''' -> α812'''') where: α803''' <: ((α811'''',) -> α812''''), α809' <: ((α803''',) -> α810'''')}›)›  <!<  ((α950',) -> α958')
//│ ╟── while constraining:  α809'  <!<  ((α950',) -> α958')
//│ ╟── while constraining:  α809'  <!<  ((α950',) -> α954'')
//│ ╟── while constraining:  {(α955'' -> α953'') where: α950' <: ((α952'',) -> α953''), α809' <: ((α950',) -> α954'')}  <!<  ((α943',) -> α944')
//│ ╟── while constraining:  ‹∀ 3. {(α949'''' -> α947'''') where: α950' <: ((α946'''',) -> α947''''), α809' <: ((α950',) -> α951'''')}›  <!<  ((α943',) -> α944')
//│ ╟── while constraining:  ‹∀ 3. {(α949'''' -> α947'''') where: α950' <: ((α946'''',) -> α947''''), α809' <: ((α950',) -> α951'''')}›  <!<  α942'
//│ ╟── while constraining:  ‹∀ 3. {(α949'''' -> α947'''') where: α945'' <: ((α946'''',) -> α947''''), α809' <: ((α945'',) -> α948'''')}›  <!<  α942'
//│ ╟── while constraining:  (α945'' -> ‹∀ 3. {(α949'''' -> α947'''') where: α945'' <: ((α946'''',) -> α947''''), α809' <: ((α945'',) -> α948'''')}›)  <!<  ((α934',) -> α942')
//│ ╟── while constraining:  ‹∀ 2. (α803''' -> ‹∀ 3. {(α804'''' -> α812'''') where: α803''' <: ((α811'''',) -> α812''''), α809' <: ((α803''',) -> α810'''')}›)›  <!<  ((α934',) -> α942')
//│ ╟── while constraining:  α809'  <!<  ((α934',) -> α942')
//│ ╟── while constraining:  α809'  <!<  ((α934',) -> α938'')
//│ ╟── while constraining:  {(α939'' -> α937'') where: α934' <: ((α936'',) -> α937''), α809' <: ((α934',) -> α938'')}  <!<  ((α927',) -> α928')
//│ ╟── while constraining:  ‹∀ 3. {(α933'''' -> α931'''') where: α934' <: ((α930'''',) -> α931''''), α809' <: ((α934',) -> α935'''')}›  <!<  ((α927',) -> α928')
//│ ╟── while constraining:  ‹∀ 3. {(α933'''' -> α931'''') where: α934' <: ((α930'''',) -> α931''''), α809' <: ((α934',) -> α935'''')}›  <!<  α926'
//│ ╟── while constraining:  ‹∀ 3. {(α933'''' -> α931'''') where: α929'' <: ((α930'''',) -> α931''''), α809' <: ((α929'',) -> α932'''')}›  <!<  α926'
//│ ╟── while constraining:  (α929'' -> ‹∀ 3. {(α933'''' -> α931'''') where: α929'' <: ((α930'''',) -> α931''''), α809' <: ((α929'',) -> α932'''')}›)  <!<  ((α918',) -> α926')
//│ ╟── while constraining:  ‹∀ 2. (α803''' -> ‹∀ 3. {(α804'''' -> α812'''') where: α803''' <: ((α811'''',) -> α812''''), α809' <: ((α803''',) -> α810'''')}›)›  <!<  ((α918',) -> α926')
//│ ╟── while constraining:  α809'  <!<  ((α918',) -> α926')
//│ ╟── while constraining:  α809'  <!<  ((α918',) -> α922'')
//│ ╟── while constraining:  {(α923'' -> α921'') where: α918' <: ((α920'',) -> α921''), α809' <: ((α918',) -> α922'')}  <!<  ((α911',) -> α912')
//│ ╟── while constraining:  ‹∀ 3. {(α917'''' -> α915'''') where: α918' <: ((α914'''',) -> α915''''), α809' <: ((α918',) -> α919'''')}›  <!<  ((α911',) -> α912')
//│ ╟── while constraining:  ‹∀ 3. {(α917'''' -> α915'''') where: α918' <: ((α914'''',) -> α915''''), α809' <: ((α918',) -> α919'''')}›  <!<  α910'
//│ ╟── while constraining:  ‹∀ 3. {(α917'''' -> α915'''') where: α913'' <: ((α914'''',) -> α915''''), α809' <: ((α913'',) -> α916'''')}›  <!<  α910'
//│ ╟── while constraining:  (α913'' -> ‹∀ 3. {(α917'''' -> α915'''') where: α913'' <: ((α914'''',) -> α915''''), α809' <: ((α913'',) -> α916'''')}›)  <!<  ((α902',) -> α910')
//│ ╟── while constraining:  ‹∀ 2. (α803''' -> ‹∀ 3. {(α804'''' -> α812'''') where: α803''' <: ((α811'''',) -> α812''''), α809' <: ((α803''',) -> α810'''')}›)›  <!<  ((α902',) -> α910')
//│ ╟── while constraining:  α809'  <!<  ((α902',) -> α910')
//│ ╟── while constraining:  α809'  <!<  ((α902',) -> α906'')
//│ ╟── while constraining:  {(α907'' -> α905'') where: α902' <: ((α904'',) -> α905''), α809' <: ((α902',) -> α906'')}  <!<  ((α895',) -> α896')
//│ ╟── while constraining:  ‹∀ 3. {(α901'''' -> α899'''') where: α902' <: ((α898'''',) -> α899''''), α809' <: ((α902',) -> α903'''')}›  <!<  ((α895',) -> α896')
//│ ╟── while constraining:  ‹∀ 3. {(α901'''' -> α899'''') where: α902' <: ((α898'''',) -> α899''''), α809' <: ((α902',) -> α903'''')}›  <!<  α894'
//│ ╟── while constraining:  ‹∀ 3. {(α901'''' -> α899'''') where: α897'' <: ((α898'''',) -> α899''''), α809' <: ((α897'',) -> α900'''')}›  <!<  α894'
//│ ╟── while constraining:  (α897'' -> ‹∀ 3. {(α901'''' -> α899'''') where: α897'' <: ((α898'''',) -> α899''''), α809' <: ((α897'',) -> α900'''')}›)  <!<  ((α886',) -> α894')
//│ ╟── while constraining:  ‹∀ 2. (α803''' -> ‹∀ 3. {(α804'''' -> α812'''') where: α803''' <: ((α811'''',) -> α812''''), α809' <: ((α803''',) -> α810'''')}›)›  <!<  ((α886',) -> α894')
//│ ╟── while constraining:  α809'  <!<  ((α886',) -> α894')
//│ ╟── while constraining:  α809'  <!<  ((α886',) -> α890'')
//│ ╟── while constraining:  {(α891'' -> α889'') where: α886' <: ((α888'',) -> α889''), α809' <: ((α886',) -> α890'')}  <!<  ((α879',) -> α880')
//│ ╟── while constraining:  ‹∀ 3. {(α885'''' -> α883'''') where: α886' <: ((α882'''',) -> α883''''), α809' <: ((α886',) -> α887'''')}›  <!<  ((α879',) -> α880')
//│ ╟── while constraining:  ‹∀ 3. {(α885'''' -> α883'''') where: α886' <: ((α882'''',) -> α883''''), α809' <: ((α886',) -> α887'''')}›  <!<  α878'
//│ ╟── while constraining:  ‹∀ 3. {(α885'''' -> α883'''') where: α881'' <: ((α882'''',) -> α883''''), α809' <: ((α881'',) -> α884'''')}›  <!<  α878'
//│ ╟── while constraining:  (α881'' -> ‹∀ 3. {(α885'''' -> α883'''') where: α881'' <: ((α882'''',) -> α883''''), α809' <: ((α881'',) -> α884'''')}›)  <!<  ((α877',) -> α878')
//│ ╟── while constraining:  ‹∀ 2. (α803''' -> ‹∀ 3. {(α804'''' -> α812'''') where: α803''' <: ((α811'''',) -> α812''''), α809' <: ((α803''',) -> α810'''')}›)›  <!<  ((α877',) -> α878')
//│ ╟── while constraining:  α809'  <!<  ((α877',) -> α878')
//│ ╟── while constraining:  α809'  <!<  ((α868'',) -> α875'')
//│ ╟── while constraining:  {(α876'' -> α874'') where: α868'' <: ((α873'',) -> α874''), α809' <: ((α868'',) -> α875'')}  <!<  (‘a'' -> ‘a'')
//│ ╟── while constraining:  ‹∀ 3. {(α872'''' -> α870'''') where: α868'' <: ((α869'''',) -> α870''''), α809' <: ((α868'',) -> α871'''')}›  <!<  (‘a'' -> ‘a'')
//│ ╟── while constraining:  (α868'' -> ‹∀ 3. {(α872'''' -> α870'''') where: α868'' <: ((α869'''',) -> α870''''), α809' <: ((α868'',) -> α871'''')}›)  <!<  ((‘a'' -> ‘a'') -> (‘a'' -> ‘a''))
//│ ╟── while constraining:  ‹∀ 2. (α803''' -> ‹∀ 3. {(α804'''' -> α812'''') where: α803''' <: ((α811'''',) -> α812''''), α809' <: ((α803''',) -> α810'''')}›)›  <!<  ((‘a'' -> ‘a'') -> (‘a'' -> ‘a''))
//│ ╟── while constraining:  ‹∀ 2. (α803''' -> ‹∀ 3. {(α804'''' -> α812'''') where: α803''' <: ((α811'''',) -> α812''''), α809' <: ((α803''',) -> α810'''')}›)›  <!<  ‹∀ 0. (('a49' -> 'a49') -> ('a49' -> 'a49'))›
//│ ╟── while constraining:  ‹∀ 2. (α803''' -> ‹∀ 3. {(α804'''' -> α812'''') where: α803''' <: ((α811'''',) -> α812''''), α809' <: ((α803''',) -> α810'''')}›)›  <!<  ChurchInt
//│ ╟── while constraining:  α865'  <!<  ChurchInt
//│ ╟── while constraining:  (α864' -> α865')  <!<  (Int -> ChurchInt)
//│ ╟── while constraining:  ‹∀ 1. (α795'' -> α813'')›  <!<  (Int -> ChurchInt)
//│ ╟── while constraining:  to_church'860'  <!<  (Int -> ChurchInt)
//│ ╟── while constraining:  ‹∀ 0. to_church'794'›  <!<  (Int -> ChurchInt)
//│ ╟── while constraining:  ‹∀ 0. ‹∀ 0. to_church'794'››  <!<  (Int -> ChurchInt)
//│ ╙── while constraining:  ‹∀ 0. ‹∀ 0. to_church'794'››  <!<  ‹∀ 0. (Int -> ChurchInt)›
//│          = [Function: to_church4]

// emulates annotated rec def
def to_church' n =
  if n == 0 then fun f -> fun x -> x
  else fun f -> fun x -> f ((to_church' (n - 1)) f x)
//│ to_church': int -> (forall 'a. 'a -> (forall 'a, 'b, 'c, 'd, 'e. (('d & 'c & 'e) -> 'd
//│   where
//│     'a <: 'b -> 'c & 'c -> 'd
//│     'f <: 'a -> 'e -> 'b)))
//│           = [Function: to_church4]

// (* �a coince. *)
// let tc n = (to_church n : Int);;
def tc n = to_church n : ChurchInt
//│ tc: int -> ChurchInt
//│   = [Function: tc]

// (* Duplicate with to_church1 ("Marche") above *)
// (* Avec la value restriction : �a passe. *)
// let rec to_church n =
//   if n = 0 then fun f x -> x
//   else fun f x -> f ((to_church (n-1) : Int) f x)


// (*** Les annotations de type ne commutent pas. ***)
// type sid = ['a] 'a -> 'a
// type z = ['a,'b] ('a -> 'b) -> ('a -> 'b)
type Z = forall 'a 'b. ('a -> 'b) -> ('a -> 'b)
//│ Defined type alias Z

// let f x = (x:sid), ((x:sid):z)
def f x = ((x : Sid), ((x : Sid) : Z))
//│ f: Sid -> (Sid, Z,)
//│  = [Function: f]

// (* Ne type pas ... c'est une instance polymorphe. Interdit. *)
// untype fun x -> (x:sid), (x:z)
fun x -> ((x : Sid), (x : Z))
//│ res: (Sid & Z) -> (Sid, Z,)
//│    = [Function: res]
