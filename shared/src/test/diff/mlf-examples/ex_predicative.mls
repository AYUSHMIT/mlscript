:NoRecursiveTypes
:GeneralizeCurriedFunctions

// type bot = 0;;
type Bot = forall 'a. 'a
//│ Defined type alias Bot

// (* Rank 6 with intersection types, untypable in predicative System F,
//    typable in impredicative System F *)


// let imp (z : bot) =
//   (fun (x : ['a] ('a -> 'u) -> 'v) -> x x)
//   (fun (y : 'a -> bot) -> y z y);;
def imp (z: Bot) =
  (fun (x: forall 'a. ('a -> 'u) -> 'v) -> x x)
  (fun (y: 'a -> Bot) -> y z y)
def imp' z =
  (fun x -> x x)
  (fun y -> y z y)
//│ imp: Bot -> (forall 'a, 'b, 'c. ('b
//│   where
//│     'a <: 'a -> 'b
//│     'c <: ‘a & ‘a66))
//│    = [Function: imp]
//│ imp': ('a -> 'a -> anything & 'a -> 'a -> (forall 'b. ('a -> 'b -> anything & 'b) -> (forall 'a, 'b, 'c. ('c
//│   where
//│     'b <: 'a -> 'b -> 'c))) -> anything & 'a) -> (forall 'a, 'd, 'e, 'f. ('e
//│   where
//│     'd <: 'd -> 'e
//│     'a <: 'a -> 'f -> anything & 'a -> 'f -> (forall 'b. ('a -> 'b -> anything & 'b) -> (forall 'a, 'b, 'c. ('c
//│   where
//│     'b <: 'a -> 'b -> 'c))) -> anything & 'f & 'a -> 'g -> anything & 'a -> 'g -> (forall 'b. ('a -> 'b -> anything & 'b) -> (forall 'a, 'b, 'c. ('c
//│   where
//│     'b <: 'a -> 'b -> 'c))) -> anything & 'g & 'a -> 'h -> anything & 'a -> 'h -> (forall 'b. ('a -> 'b -> anything & 'b) -> (forall 'a, 'b, 'c. ('c
//│   where
//│     'b <: 'a -> 'b -> 'c))) -> anything & 'h & 'a -> 'i -> anything & 'a -> 'i -> (forall 'b. ('a -> 'b -> anything & 'b) -> (forall 'a, 'b, 'c. ('c
//│   where
//│     'b <: 'a -> 'b -> 'c))) -> anything & 'i))
//│     = [Function: imp]


// (* Quelques constantes. *)

// type sid = ['a] 'a -> 'a
type Sid = forall 'a. 'a -> 'a
//│ Defined type alias Sid

// let id = fun x -> x
// ;;
def id = fun x -> x
//│ id: 'a -> 'a
//│   = [Function: id]

// let delta = fun (x:sid) -> x x
// ;;
def delta = fun (x: Sid) -> x x
def delta' = fun x -> x x
//│ delta: Sid -> (forall 'a, 'b. ('b
//│   where
//│     'a <: 'a -> 'b))
//│      = [Function: delta]
//│ delta': ('a -> anything & 'a) -> (forall 'a, 'b. ('b
//│   where
//│     'a <: 'a -> 'b))
//│       = [Function: delta]

// delta id ;;
delta id
delta' id
//│ res: 'a
//│   where
//│     'b <: 'b -> 'a
//│    = [Function: id]
//│ res: 'a
//│   where
//│     'b <: 'b -> 'a
//│    = [Function: id]

// let t a b c d e = (fun x -> a x x) ((fun y -> b (c y)) (d e)) ;;
def t a b c d e = (fun x -> a x x) ((fun y -> b (c y)) (d e))
//│ t: (nothing -> nothing -> 'a & 'b) -> (forall 'a, 'b, 'c. ((nothing -> 'a & 'c) -> (forall 'a, 'b, 'c, 'd. ((nothing -> 'a & 'd) -> (forall 'a, 'b, 'c, 'd. ((nothing -> 'a & 'a) -> (forall 'a, 'b, 'c, 'd, 'e. ('e -> (forall 'a, 'b, 'c, 'd. ('f
//│   where
//│     'b <: (forall 'c, 'd, 'g, 'h, 'i. ('h
//│   where
//│     'c <: 'g -> 'h
//│     'd <: 'i -> 'g)) -> (forall 'c, 'd, 'g, 'h, 'i. ('h
//│   where
//│     'c <: 'g -> 'h
//│     'd <: 'i -> 'g)) -> 'f
//│     'b <: nothing -> nothing -> 'a
//│     'c <: nothing -> 'a
//│     'd <: nothing -> 'a
//│     'a <: 'e -> 'i))
//│   where
//│     'b <: nothing -> nothing -> 'a
//│     'c <: nothing -> 'a
//│     'd <: nothing -> 'a
//│     'a <: nothing -> 'a
//│     'b <: nothing -> nothing -> 'a
//│     'c <: nothing -> 'a
//│     'd <: nothing -> 'a
//│     'a <: nothing -> 'a))
//│   where
//│     'b <: nothing -> nothing -> 'a
//│     'c <: nothing -> 'a
//│     'd <: nothing -> 'a
//│     'b <: nothing -> nothing -> 'a
//│     'c <: nothing -> 'a
//│     'd <: nothing -> 'a))
//│   where
//│     'b <: nothing -> nothing -> 'a
//│     'c <: nothing -> 'a
//│     'b <: nothing -> nothing -> 'a
//│     'c <: nothing -> 'a))
//│   where
//│     'b <: nothing -> nothing -> 'a
//│     'b <: nothing -> nothing -> 'a))
//│  = [Function: t]

// let t w z a b = (fun y -> (fun x -> w (x y) z) a) b ;;
def t w z a b = (fun y -> (fun x -> w (x y) z) a) b
//│ t: (nothing -> nothing -> 'a & 'b) -> (forall 'a, 'b, 'c. ('c -> (forall 'a, 'b, 'd. ((nothing -> 'a & 'd) -> (forall 'a, 'b, 'd, 'e. ('e -> (forall 'a, 'b, 'c, 'd, 'e, 'f, 'g, 'h. ('g
//│   where
//│     'b <: 'f -> 'c -> 'g
//│     'a <: 'h -> 'f
//│     'b <: nothing -> nothing -> 'a
//│     'd <: 'h -> 'a & 'a
//│     'b <: nothing -> nothing -> 'a
//│     'd <: nothing -> 'a
//│     'e <: 'h))
//│   where
//│     'b <: nothing -> nothing -> 'a
//│     'd <: nothing -> 'a
//│     'b <: nothing -> nothing -> 'a
//│     'd <: nothing -> 'a))
//│   where
//│     'b <: nothing -> nothing -> 'a
//│     'b <: nothing -> nothing -> 'a))
//│   where
//│     'b <: nothing -> nothing -> 'a
//│     'b <: nothing -> nothing -> 'a))
//│  = [Function: t1]

// let t y a = (fun x -> x (x y)) ((fun z -> z) (fun x -> a x)) ;;
def t y a = (fun x -> x (x y)) ((fun z -> z) (fun x -> a x))
//│ t: 'a -> (forall 'a, 'b. ((nothing -> 'b & 'b) -> (forall 'a, 'b, 'c, 'd, 'e. ('e
//│   where
//│     'c <: 'a -> 'd & 'd -> 'e
//│     'a <: 'b
//│     'b <: nothing -> 'b))
//│   where
//│     'a <: 'b
//│     'a <: 'b))
//│  = [Function: t2]

// (* Rank 1 *)
// (fun x -> fun y -> x y) (fun y -> fun x -> x y) ;;
(fun x -> fun y -> x y) (fun y -> fun x -> x y)
//│ res: 'a -> (forall 'a, 'b. ('b
//│   where
//│     'c <: 'a -> 'b))
//│   where
//│     'c <: nothing -> anything
//│     'c <: nothing -> anything
//│    = [Function (anonymous)]

// (* Rank 3 *)
// (fun x -> fun y -> x) delta ;;
(fun x -> fun y -> x) delta
(fun x -> fun y -> x) delta'
//│ res: anything -> Sid -> (forall 'a, 'b. ('b
//│   where
//│     'a <: 'a -> 'b))
//│    = [Function (anonymous)]
//│ res: anything -> (forall 'a. ('a -> anything & 'a) -> (forall 'a, 'b. ('b
//│   where
//│     'a <: 'a -> 'b)))
//│    = [Function (anonymous)]

// (* Rank 5 *)
// (fun x -> fun y -> x y) (fun y -> fun x -> x y) delta ;;
(fun x -> fun y -> x y) (fun y -> fun x -> x y) delta
(fun x -> fun y -> x y) (fun y -> fun x -> x y) delta'
//│ res: 'a
//│   where
//│     'b <: (Sid -> (forall 'c, 'd. ('d
//│   where
//│     'c <: 'c -> 'd))) -> 'a
//│    = [Function (anonymous)]
//│ res: 'a
//│   where
//│     'b <: (forall 'c. ('c -> anything & 'c) -> (forall 'c, 'd. ('d
//│   where
//│     'c <: 'c -> 'd))) -> 'a
//│    = [Function (anonymous)]

// (* Rank 8 *)
// (fun (x:sid) -> x x x x x) id delta ;;
(fun (x: Sid) -> x x x x x) id delta
(fun x -> x x x x x) id delta'
//│ res: Sid -> (forall 'a, 'b. ('b
//│   where
//│     'a <: 'a -> 'b))
//│    = [Function: delta]
//│ res: ('a -> anything & 'a) -> (forall 'a, 'b. ('b
//│   where
//│     'a <: 'a -> 'b))
//│    = [Function: delta]

// (* Rank 2 *)
// type sk = ['a,'b] 'a -> 'b -> 'a;;
// (fun (f:sk) -> fun x -> f f x) (fun v -> fun w -> v) ;;
type Sk = forall 'a 'b. 'a -> 'b -> 'a
(fun (f: Sk) -> fun x -> f f x) (fun v -> fun w -> v)
(fun f -> fun x -> f f x) (fun v -> fun w -> v)
//│ Defined type alias Sk
//│ res: 'a -> (forall 'a, 'b. ('b
//│   where
//│     'c <: 'c -> 'a -> 'b))
//│   where
//│     'c <: 'c -> 'c -> anything
//│     'c <: 'c -> 'c -> anything
//│    = [Function (anonymous)]
//│ res: 'a -> (forall 'a, 'b. ('b
//│   where
//│     'c <: 'c -> 'a -> 'b))
//│   where
//│     'c <: 'c -> 'c -> anything
//│     'c <: 'c -> 'c -> anything
//│    = [Function (anonymous)]

// (* Rank 3 *)
// (fun t -> fun k -> t k) (fun (f:sk) -> fun x -> f f x) (fun v -> fun w -> v);;
(fun t -> fun k -> t k) (fun (f: Sk) -> fun x -> f f x) (fun v -> fun w -> v)
(fun t -> fun k -> t k) (fun f -> fun x -> f f x) (fun v -> fun w -> v)
//│ res: 'a
//│   where
//│     'b <: (forall 'c. 'c -> anything -> 'c) -> 'a
//│    = [Function (anonymous)]
//│ res: 'a
//│   where
//│     'b <: (forall 'c. 'c -> anything -> 'c) -> 'a
//│    = [Function (anonymous)]


// let k = fun x y -> x
// let k' = fun x y -> y
// let app = fun f x -> f x
// let two = fun f x -> f (f x)
// let three = fun f x -> f (f (f x))
def k = fun x -> fun y -> x
def k2 = fun x -> fun y -> y
def app = fun f -> fun x -> f x
def two = fun f -> fun x -> f (f x)
def three = fun f -> fun x -> f (f (f x))
//│ k: 'a -> anything -> 'a
//│  = [Function: k]
//│ k2: anything -> (forall 'a. 'a -> 'a)
//│   = [Function: k2]
//│ app: (nothing -> 'a & 'a) -> (forall 'a, 'b. ('b -> (forall 'a, 'b, 'c. ('c
//│   where
//│     'a <: 'b -> 'c))
//│   where
//│     'a <: nothing -> 'a
//│     'a <: nothing -> 'a))
//│    = [Function: app]
//│ two: (nothing -> 'a & 'a) -> (forall 'a, 'b. ('b -> (forall 'a, 'b, 'c, 'd. ('d
//│   where
//│     'a <: 'b -> 'c & 'c -> 'd))
//│   where
//│     'a <: nothing -> 'a
//│     'a <: nothing -> 'a))
//│    = [Function: two]
//│ three: (nothing -> 'a & 'a) -> (forall 'a, 'b. ('b -> (forall 'a, 'b, 'c, 'd, 'e. ('e
//│   where
//│     'a <: 'b -> 'c & 'c -> 'd & 'd -> 'e))
//│   where
//│     'a <: nothing -> 'a
//│     'a <: nothing -> 'a))
//│      = [Function: three]


// * Tony noticed this did not work before this commit generalizing the LHS of ascriptions...
(app id): Sid
//│ res: Sid
//│    = [Function (anonymous)]
// * this one worked:
let t = app id in t: Sid
//│ res: Sid
//│    = [Function (anonymous)]


// type Int = ['a] ('a -> 'a) -> ('a -> 'a)
// ;;
type ChurchInt = forall 'a. ('a -> 'a) -> ('a -> 'a)
//│ Defined type alias ChurchInt

// (* Factorial of two and three *)
// (* Only ONE annotation ! *)
// let t y = (fun h -> h (h (h (fun x -> y)))) (fun f -> fun (n:Int) -> n (fun v -> k') k app (fun g -> fun x -> n (f (n (fun p -> fun s -> s (p k') (fun f -> fun x -> f (p k' f x))) (fun s -> s k' k') k) g) x)) two ;;

// FIXME
// :e // due to tapping
def t y = (fun h -> h (h (h (fun x -> y)))) (fun f -> fun (n: ChurchInt) -> n (fun v -> k2) k app (fun g -> fun x -> n (f (n (fun p -> fun s -> s (p k2) (fun f -> fun x -> f (p k2 f x))) (fun s -> s k2 k2) k) g) x)) two
def t2 y = (fun h -> h (h (h (fun x -> y)))) (fun f -> fun n -> n (fun v -> k2) k app (fun g -> fun x -> n (f (n (fun p -> fun s -> s (p k2) (fun f -> fun x -> f (p k2 f x))) (fun s -> s k2 k2) k) g) x)) two
//│ ╔══[ERROR] Cyclic-looking constraint while typing expression
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  α3831_3962^6  <:  ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α3833_4103^6)    TypeVariable  FunctionType
//│ ╙──  ... looks like:  α3831^12  <:  ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α3833_3969^13)
//│ ╔══[ERROR] Cyclic-looking constraint while typing expression
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  α3831_4190'''  <:  ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α3833_4331''')    TypeVariable  FunctionType
//│ ╙──  ... looks like:  α3831^12  <:  ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α3833_4197^13)
//│ t: anything -> error
//│  = [Function: t3]
//│ ╔══[ERROR] Subtyping constraint of the form `?a <: (forall ?b, ?c, ?d, ?e, ?f, ?g, ?h, ?i, ?j. ?j -> (forall ?k, ?l, ?m, ?n, ?o. (?k -> (forall ?k, ?p, ?q. (?q
//│   where
//│     ?j <: ?k -> ?p & ?p -> ?q))
//│   where
//│     ?j <: ?l -> ?m & ?n -> ?o
//│     ?j <: ?b -> ?c & ?d -> ?e))) -> ?r` took too many steps and ran out of fuel (5000)
//│ ║  l.306: 	def t2 y = (fun h -> h (h (h (fun x -> y)))) (fun f -> fun n -> n (fun v -> k2) k app (fun g -> fun x -> n (f (n (fun p -> fun s -> s (p k2) (fun f -> fun x -> f (p k2 f x))) (fun s -> s k2 k2) k) g) x)) two
//│ ║         	           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟──  + {‹∀ 5. {(α4352_48970^6 -> ‹∀ 6. {α4473_49115^7 where: α4352_48970^6 <: ((‹∀ 7. (α4353^8 -> ‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››)›,) -> α4354_49068^7), α4352_48970^6 <: ((‹∀ 11. (α4359^12 -> ‹∀ 12. {‹∀ 13. {(α4360^14 -> ‹∀ 14. {α4395^15 where: α4359^12 <: ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α4361^15), α4359^12 <: ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α4365_4390^15), α4360^14 <: ((α4361^15,) -> α4362^15)}›) where: α4359^12 <: ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α4361_4396^14), α4359^12 <: ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α4365_4397^14)}› where: α4359^12 <: ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α4361_4405^13), α4359^12 <: ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α4365_4406^13)}›)›,) -> α4417_49116^7), α4352_48970^6 <: ((α4426_49119^7,) -> α4427_49120^7), α4351_48949''' <: ((α4424_49123^7,) -> α4425_49124^7)}›) where: α4351_48949''' <: ((α4424_48962^6,) -> α4425_48963^6)}› where: α4351_48949''' <: ((α4424_69314''',) -> α4425_69315''')}
//│ ║  l.306: 	def t2 y = (fun h -> h (h (h (fun x -> y)))) (fun f -> fun n -> n (fun v -> k2) k app (fun g -> fun x -> n (f (n (fun p -> fun s -> s (p k2) (fun f -> fun x -> f (p k2 f x))) (fun s -> s k2 k2) k) g) x)) two
//│ ║         	                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟──  + ‹∀ 4. {‹∀ 5. {(α4352_48970^6 -> ‹∀ 6. {α4473_49115^7 where: α4352_48970^6 <: ((‹∀ 7. (α4353^8 -> ‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››)›,) -> α4354_49068^7), α4352_48970^6 <: ((‹∀ 11. (α4359^12 -> ‹∀ 12. {‹∀ 13. {(α4360^14 -> ‹∀ 14. {α4395^15 where: α4359^12 <: ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α4361^15), α4359^12 <: ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α4365_4390^15), α4360^14 <: ((α4361^15,) -> α4362^15)}›) where: α4359^12 <: ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α4361_4396^14), α4359^12 <: ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α4365_4397^14)}› where: α4359^12 <: ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α4361_4405^13), α4359^12 <: ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α4365_4406^13)}›)›,) -> α4417_49116^7), α4352_48970^6 <: ((α4426_49119^7,) -> α4427_49120^7), α4351_48949''' <: ((α4424_49123^7,) -> α4425_49124^7)}›) where: α4351_48949''' <: ((α4424_48962^6,) -> α4425_48963^6)}› where: α4351_48949''' <: ((α4424_48954''''',) -> α4425_48955''''')}›
//│ ║  l.306: 	def t2 y = (fun h -> h (h (h (fun x -> y)))) (fun f -> fun n -> n (fun v -> k2) k app (fun g -> fun x -> n (f (n (fun p -> fun s -> s (p k2) (fun f -> fun x -> f (p k2 f x))) (fun s -> s k2 k2) k) g) x)) two
//│ ║         	                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟──  - ((α4424_27341''',) -> α4425_27342''')
//│ ║  l.306: 	def t2 y = (fun h -> h (h (h (fun x -> y)))) (fun f -> fun n -> n (fun v -> k2) k app (fun g -> fun x -> n (f (n (fun p -> fun s -> s (p k2) (fun f -> fun x -> f (p k2 f x))) (fun s -> s k2 k2) k) g) x)) two
//│ ║         	                                                                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟──  - ((α4424_27341''',) -> α4425_27342''')
//│ ║  l.306: 	def t2 y = (fun h -> h (h (h (fun x -> y)))) (fun f -> fun n -> n (fun v -> k2) k app (fun g -> fun x -> n (f (n (fun p -> fun s -> s (p k2) (fun f -> fun x -> f (p k2 f x))) (fun s -> s k2 k2) k) g) x)) two
//│ ║         	                                                                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟──  - ((α4424_27341''',) -> α4425_27342''')
//│ ║  l.306: 	def t2 y = (fun h -> h (h (h (fun x -> y)))) (fun f -> fun n -> n (fun v -> k2) k app (fun g -> fun x -> n (f (n (fun p -> fun s -> s (p k2) (fun f -> fun x -> f (p k2 f x))) (fun s -> s k2 k2) k) g) x)) two
//│ ║         	                                                                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟──  - ((α4424_27341''',) -> α4425_27342''')
//│ ╟──  - α4351_5903'''
//│ ╟──  - α4351_5903'''
//│ ╟──  - α4351_5903'''
//│ ║  l.306: 	def t2 y = (fun h -> h (h (h (fun x -> y)))) (fun f -> fun n -> n (fun v -> k2) k app (fun g -> fun x -> n (f (n (fun p -> fun s -> s (p k2) (fun f -> fun x -> f (p k2 f x))) (fun s -> s k2 k2) k) g) x)) two
//│ ║         	                           ^^^^^^^^^^^^^^
//│ ╟──  - α4343_5695'''
//│ ║  l.306: 	def t2 y = (fun h -> h (h (h (fun x -> y)))) (fun f -> fun n -> n (fun v -> k2) k app (fun g -> fun x -> n (f (n (fun p -> fun s -> s (p k2) (fun f -> fun x -> f (p k2 f x))) (fun s -> s k2 k2) k) g) x)) two
//│ ╙──       	                           ^^^^^^^^^^^^^^
//│ /!!!\ Uncaught error: java.lang.StackOverflowError

// FIXME
t id succ 0
//│ res: error
//│    = 2

// FIXME
//:e // due to tapping
t2 id succ 0
//│ ╔══[ERROR] identifier not found: t2
//│ ║  l.358: 	t2 id succ 0
//│ ╙──       	^^
//│ res: error
//│    = 2

// let t y = (fun h -> h (h (h (h (fun x -> y))))) (fun f -> fun (n:Int) -> n (fun v -> k') k app (fun g -> fun x -> n (f (n (fun p -> fun s -> s (p k') (fun f -> fun x -> f (p k' f x))) (fun s -> s k' k') k) g) x)) three

// FIXME
// :e // due to tapping
def t y = (fun h -> h (h (h (fun x -> y)))) (fun f -> fun (n: ChurchInt) -> n (fun v -> k2) k app (fun g -> fun x -> n (f (n (fun p -> fun s -> s (p k2) (fun f -> fun x -> f (p k2 f x))) (fun s -> s k2 k2) k) g) x)) three
def t2 y = (fun h -> h (h (h (fun x -> y)))) (fun f -> fun n -> n (fun v -> k2) k app (fun g -> fun x -> n (f (n (fun p -> fun s -> s (p k2) (fun f -> fun x -> f (p k2 f x))) (fun s -> s k2 k2) k) g) x)) three
//│ ╔══[ERROR] Cyclic-looking constraint while typing expression
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  α130559_130694^6  <:  ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α130561_130835^6)    TypeVariable  FunctionType
//│ ╙──  ... looks like:  α130559^12  <:  ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α130561_130701^13)
//│ ╔══[ERROR] Cyclic-looking constraint while typing expression
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  α130559_130922'''  <:  ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α130561_131063''')    TypeVariable  FunctionType
//│ ╙──  ... looks like:  α130559^12  <:  ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α130561_130929^13)
//│ t: anything -> error
//│  = [Function: t4]
//│ ╔══[ERROR] Subtyping constraint of the form `?a <: (forall ?b, ?c, ?d, ?e, ?f, ?g, ?h, ?i, ?j, ?k, ?l, ?m, ?n. ?n -> (forall ?o, ?p, ?q, ?r, ?s, ?t, ?u. (?o -> (forall ?o, ?v, ?w, ?x. (?x
//│   where
//│     ?n <: ?o -> ?v & ?v -> ?w & ?w -> ?x))
//│   where
//│     ?n <: ?p -> ?q & ?r -> ?s & ?t -> ?u
//│     ?n <: ?b -> ?c & ?d -> ?e & ?f -> ?g))) -> ?y` took too many steps and ran out of fuel (5000)
//│ ║  l.370: 	def t2 y = (fun h -> h (h (h (fun x -> y)))) (fun f -> fun n -> n (fun v -> k2) k app (fun g -> fun x -> n (f (n (fun p -> fun s -> s (p k2) (fun f -> fun x -> f (p k2 f x))) (fun s -> s k2 k2) k) g) x)) three
//│ ║         	           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟──  + {‹∀ 5. {(α131084_175702^6 -> ‹∀ 6. {α131205_175851^7 where: α131083_175681''' <: ((α131156_175800^7,) -> α131157_175801^7), α131084_175702^6 <: ((‹∀ 7. (α131085^8 -> ‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››)›,) -> α131086_175804^7), α131084_175702^6 <: ((‹∀ 11. (α131091^12 -> ‹∀ 12. {‹∀ 13. {(α131092^14 -> ‹∀ 14. {α131127^15 where: α131091^12 <: ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α131093^15), α131091^12 <: ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α131097_131122^15), α131092^14 <: ((α131093^15,) -> α131094^15)}›) where: α131091^12 <: ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α131093_131128^14), α131091^12 <: ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α131097_131129^14)}› where: α131091^12 <: ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α131093_131137^13), α131091^12 <: ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α131097_131138^13)}›)›,) -> α131149_175852^7), α131084_175702^6 <: ((α131158_175855^7,) -> α131159_175856^7)}›) where: α131083_175681''' <: ((α131156_175694^6,) -> α131157_175695^6)}› where: α131083_175681''' <: ((α131156_196046''',) -> α131157_196047''')}
//│ ║  l.370: 	def t2 y = (fun h -> h (h (h (fun x -> y)))) (fun f -> fun n -> n (fun v -> k2) k app (fun g -> fun x -> n (f (n (fun p -> fun s -> s (p k2) (fun f -> fun x -> f (p k2 f x))) (fun s -> s k2 k2) k) g) x)) three
//│ ║         	                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟──  + ‹∀ 4. {‹∀ 5. {(α131084_175702^6 -> ‹∀ 6. {α131205_175851^7 where: α131083_175681''' <: ((α131156_175800^7,) -> α131157_175801^7), α131084_175702^6 <: ((‹∀ 7. (α131085^8 -> ‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››)›,) -> α131086_175804^7), α131084_175702^6 <: ((‹∀ 11. (α131091^12 -> ‹∀ 12. {‹∀ 13. {(α131092^14 -> ‹∀ 14. {α131127^15 where: α131091^12 <: ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α131093^15), α131091^12 <: ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α131097_131122^15), α131092^14 <: ((α131093^15,) -> α131094^15)}›) where: α131091^12 <: ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α131093_131128^14), α131091^12 <: ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α131097_131129^14)}› where: α131091^12 <: ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α131093_131137^13), α131091^12 <: ((‹∀ 0. ‹∀ 1. (α3556'' -> ‹∀ 3. (α3557'''' -> α3557'''')›)››,) -> α131097_131138^13)}›)›,) -> α131149_175852^7), α131084_175702^6 <: ((α131158_175855^7,) -> α131159_175856^7)}›) where: α131083_175681''' <: ((α131156_175694^6,) -> α131157_175695^6)}› where: α131083_175681''' <: ((α131156_175686''''',) -> α131157_175687''''')}›
//│ ║  l.370: 	def t2 y = (fun h -> h (h (h (fun x -> y)))) (fun f -> fun n -> n (fun v -> k2) k app (fun g -> fun x -> n (f (n (fun p -> fun s -> s (p k2) (fun f -> fun x -> f (p k2 f x))) (fun s -> s k2 k2) k) g) x)) three
//│ ║         	                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟──  - ((α131156_154070''',) -> α131157_154071''')
//│ ║  l.370: 	def t2 y = (fun h -> h (h (h (fun x -> y)))) (fun f -> fun n -> n (fun v -> k2) k app (fun g -> fun x -> n (f (n (fun p -> fun s -> s (p k2) (fun f -> fun x -> f (p k2 f x))) (fun s -> s k2 k2) k) g) x)) three
//│ ║         	                                                                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟──  - ((α131156_154070''',) -> α131157_154071''')
//│ ║  l.370: 	def t2 y = (fun h -> h (h (h (fun x -> y)))) (fun f -> fun n -> n (fun v -> k2) k app (fun g -> fun x -> n (f (n (fun p -> fun s -> s (p k2) (fun f -> fun x -> f (p k2 f x))) (fun s -> s k2 k2) k) g) x)) three
//│ ║         	                                                                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟──  - ((α131156_154070''',) -> α131157_154071''')
//│ ║  l.370: 	def t2 y = (fun h -> h (h (h (fun x -> y)))) (fun f -> fun n -> n (fun v -> k2) k app (fun g -> fun x -> n (f (n (fun p -> fun s -> s (p k2) (fun f -> fun x -> f (p k2 f x))) (fun s -> s k2 k2) k) g) x)) three
//│ ║         	                                                                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟──  - ((α131156_154070''',) -> α131157_154071''')
//│ ╟──  - α131083_132635'''
//│ ╟──  - α131083_132635'''
//│ ╟──  - α131083_132635'''
//│ ║  l.370: 	def t2 y = (fun h -> h (h (h (fun x -> y)))) (fun f -> fun n -> n (fun v -> k2) k app (fun g -> fun x -> n (f (n (fun p -> fun s -> s (p k2) (fun f -> fun x -> f (p k2 f x))) (fun s -> s k2 k2) k) g) x)) three
//│ ║         	                           ^^^^^^^^^^^^^^
//│ ╟──  - α131075_132427'''
//│ ║  l.370: 	def t2 y = (fun h -> h (h (h (fun x -> y)))) (fun f -> fun n -> n (fun v -> k2) k app (fun g -> fun x -> n (f (n (fun p -> fun s -> s (p k2) (fun f -> fun x -> f (p k2 f x))) (fun s -> s k2 k2) k) g) x)) three
//│ ╙──       	                           ^^^^^^^^^^^^^^
//│ /!!!\ Uncaught error: java.lang.StackOverflowError

// (* This comment is from the ORIGINAL PAGE: *)
// (* Factorial of three. Exposed bugs in old implementation. This one works correctly, but the generated files take up to 3.8GB, and it takes about 1 hour on a 2GHz PIII box to get the result. You can see the final judgement here. Yes, the result is the Church numeral for 6. *)

// (* We test that the result is 6: *)
// let succ n = n + 1 ;;
// t id succ 0 ;;

// FIXME
t id succ 0
//│ res: error
//│    = 6

// :e // TODO try without cycle check // works with quantif extrus
:e // FIXME? refreshing-extr
t2 id succ 0
//│ ╔══[ERROR] identifier not found: t2
//│ ║  l.429: 	t2 id succ 0
//│ ╙──       	^^
//│ res: error
//│    = 6

// let t (z : 0) = let x = (fun (y: ['t > 0] 'a -> 't) -> y z y) in x x;;
def t (z: nothing) = let x = fun (y: forall 't. 'a -> 't) -> y z y in x x
//│ t: nothing -> (forall 'a, 'b, 'c. ('c
//│   where
//│     'a <: 'b -> 'a -> 'c
//│     'b <: 'a -> anything))
//│  = [Function: t5]

// (* Plus petit. *)
// type tt = ['b = 0] ['c > ['a] ['d = ['t] 'a -> 't] ['e] 'd -> 'e] 'b -> 'c ;;
// let t (z : 0) = let x = (fun (y: ['t > 0] 'a -> 't) -> y z) in x x;;
type Tt = forall 'b 'c. ('b & nothing) -> ('c | (forall 'a 'd 'e. ('d & (forall 't. 'a -> 't))) -> 'e)
def t (z: nothing) = let x = fun (y: forall 't. 'a -> 't) -> y z in x x
//│ Defined type alias Tt
//│ t: nothing -> (forall 'a, 'b, 'c. ('c
//│   where
//│     'a <: 'b -> 'c
//│     'b <: 'b -> anything))
//│  = [Function: t6]

// (*
//     * Rank 3, untypable in System F?
//       (fun x -> z (x (fun f -> fun u -> f u)) (x (fun v -> fun g -> g v))) (fun y -> y y y)
// FIXME: z is free???

//     * Untypable at any rank
//       (fun x -> x x) (fun x -> x x)
// :e // TODO show failure without cycle check // works with quantif extrus
:re
:e // FIXME? refreshing-extr
(fun x -> x x) (fun x -> x x)
//│ ╔══[ERROR] Cyclic-looking constraint while typing application
//│ ║  l.466: 	(fun x -> x x) (fun x -> x x)
//│ ║         	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ‹∀ 0. (α257429' -> ‹∀ 1. {α257430'' where: α257429' <: ((α257429',) -> α257430'')}›)›  <:  α257429_257441    PolymorphicType  TypeVariable
//│ ╙──  ... looks like:  ‹∀ 0. (α257429' -> ‹∀ 1. {α257430'' where: α257429' <: ((α257429',) -> α257430'')}›)›  <:  α257429'
//│ res: error
//│ Runtime error:
//│   RangeError: Maximum call stack size exceeded

//     * Rank 3, untypable in F2 but F3
//       (fun f x -> f (f x)) (fun f x -> f (f x)) (fun v w -> v)
(fun f -> fun x -> f (f x)) (fun f -> fun x -> f (f x)) (fun v -> fun w -> v)
//│ res: 'a
//│   where
//│     'b <: (forall 'c. 'c -> anything -> 'c) -> 'd & 'd -> 'a
//│    = [Function (anonymous)]

//     * Rank 4, alternate formulation, untypeable in F2, but F3
//       (fun two k -> two two k)(fun f x -> f (f x)) (fun v w -> v)
(fun two -> fun k -> two two k) (fun f -> fun x -> f (f x)) (fun v -> fun w -> v)
//│ res: 'a
//│   where
//│     'b <: 'b -> (forall 'c. 'c -> anything -> 'c) -> 'a
//│    = [Function (anonymous)]

//     * Rank 5, causes huge blowup. Do not attempt to output skeletons !
//       (fun two k -> two two two k)(fun f -x -> f (f x)) (fun v w -> v)
// * Note: the only example in this file that requires `:GeneralizeCurriedFunctions`
// :e // due to not stashing...?
:e // FIXME? refreshing-extr
(fun two -> fun k -> two two two k) (fun f -> fun x -> f (f x)) (fun v -> fun w -> v)
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?a, ?b, ?c, ?d, ?e. ?c -> (forall ?f, ?g, ?h, ?i, ?j, ?a, ?b, ?c, ?d, ?e, ?k, ?l, ?m, ?n. (?f -> (forall ?f, ?o, ?a, ?b, ?c, ?d, ?e, ?p, ?q. (?o
//│   where
//│     ?c <: ?c -> ?p))
//│   where
//│     ?c <: ?c -> ?m
//│     ?c <: ?c -> ?k)) <: (forall ?r, ?s, ?t, ?u, ?v. ?v -> (forall ?w, ?x, ?y, ?z, ?a1, ?b1, ?c1, ?d1, ?e1, ?r, ?s, ?t, ?u, ?v. (?w -> (forall ?w, ?f1, ?g1, ?r, ?s, ?t, ?u, ?v. (?g1
//│   where
//│     ?v <: ?w -> ?f1 & ?f1 -> ?g1))
//│   where
//│     ?v <: ?x -> ?y & ?z -> ?a1
//│     ?v <: ?b1 -> ?c1 & ?d1 -> ?e1))) -> ?h1` took too many steps and ran out of fuel (5000)
//│ ║  l.498: 	(fun two -> fun k -> two two two k) (fun f -> fun x -> f (f x)) (fun v -> fun w -> v)
//│ ║         	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟──  + ‹∀ 1. {‹∀ 2. {(α263086_289084''' -> ‹∀ 3. {α263088_289086'''' where: α263085_289063 <: ((α263086_289084''',) -> α263087_289085''''), α263085_289063 <: ((α263087_289085'''',) -> α263088_289086'''')}›) where: α263085_289063 <: ((α263086_289076''',) -> α263087_289077'''), α263085_289063 <: ((α263087_289078''',) -> α263088_289079''')}› where: α263085_289063 <: ((α263086_289068'',) -> α263087_289069''), α263085_289063 <: ((α263087_289070'',) -> α263088_289071'')}›
//│ ║  l.498: 	(fun two -> fun k -> two two two k) (fun f -> fun x -> f (f x)) (fun v -> fun w -> v)
//│ ║         	                                              ^^^^^^^^^^^^^^^^
//│ ╟──  + ‹∀ 1. {‹∀ 2. {(α263086_289084''' -> ‹∀ 3. {α263088_289086'''' where: α263085_289063 <: ((α263086_289084''',) -> α263087_289085''''), α263085_289063 <: ((α263087_289085'''',) -> α263088_289086'''')}›) where: α263085_289063 <: ((α263086_289076''',) -> α263087_289077'''), α263085_289063 <: ((α263087_289078''',) -> α263088_289079''')}› where: α263085_289063 <: ((α263086_289068'',) -> α263087_289069''), α263085_289063 <: ((α263087_289070'',) -> α263088_289071'')}›
//│ ║  l.498: 	(fun two -> fun k -> two two two k) (fun f -> fun x -> f (f x)) (fun v -> fun w -> v)
//│ ║         	                                              ^^^^^^^^^^^^^^^^
//│ ╟──  + ‹∀ 1. {‹∀ 2. {(α263086_289084''' -> ‹∀ 3. {α263088_289086'''' where: α263085_289063 <: ((α263086_289084''',) -> α263087_289085''''), α263085_289063 <: ((α263087_289085'''',) -> α263088_289086'''')}›) where: α263085_289063 <: ((α263086_289076''',) -> α263087_289077'''), α263085_289063 <: ((α263087_289078''',) -> α263088_289079''')}› where: α263085_289063 <: ((α263086_289068'',) -> α263087_289069''), α263085_289063 <: ((α263087_289070'',) -> α263088_289071'')}›
//│ ║  l.498: 	(fun two -> fun k -> two two two k) (fun f -> fun x -> f (f x)) (fun v -> fun w -> v)
//│ ║         	                                                          ^^^
//│ ╟──  + α263087_286429
//│ ║  l.498: 	(fun two -> fun k -> two two two k) (fun f -> fun x -> f (f x)) (fun v -> fun w -> v)
//│ ║         	                                                          ^^^
//│ ╙──  - α263085_291667
//│ res: error
//│    = [Function (anonymous)]



//  ?????
//     * Factorial of two, using the Y combinator
//       (fun h -> (fun x -> h (x x)) (fun x -> h (x x))) (fun f -> fun n -> n (fun v -> fun x -> fun y -> y) k (fun f -> fun x -> f x)(fun g -> fun x -> n (f (n (fun p -> fun s -> s (p (fun x -> fun y -> y)) (fun f -> fun x -> f (p (fun x -> fun y -> y) f x))) (fun s -> s (fun f -> fun x -> x) (fun f -> fun x -> x)) k) g) x)) (fun f -> fun x -> f (f x))

// *)
// :e // works with quantif extrus
:e // FIXME? refreshing-extr
:re
(fun h -> (fun x -> h (x x)) (fun x -> h (x x))) (fun f -> fun n -> n (fun v -> fun x -> fun y -> y) k (fun f -> fun x -> f x)(fun g -> fun x -> n (f (n (fun p -> fun s -> s (p (fun x -> fun y -> y)) (fun f -> fun x -> f (p (fun x -> fun y -> y) f x))) (fun s -> s (fun f -> fun x -> x) (fun f -> fun x -> x)) k) g) x)) (fun f -> fun x -> f (f x))
//│ ╔══[ERROR] Cyclic-looking constraint while typing application
//│ ║  l.538: 	(fun h -> (fun x -> h (x x)) (fun x -> h (x x))) (fun f -> fun n -> n (fun v -> fun x -> fun y -> y) k (fun f -> fun x -> f x)(fun g -> fun x -> n (f (n (fun p -> fun s -> s (p (fun x -> fun y -> y)) (fun f -> fun x -> f (p (fun x -> fun y -> y) f x))) (fun s -> s (fun f -> fun x -> x) (fun f -> fun x -> x)) k) g) x)) (fun f -> fun x -> f (f x))
//│ ║         	          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ‹∀ 2. {(α292600''' -> ‹∀ 3. {α292602'''' where: α292591' <: ((α292601'''',) -> α292602''''), α292600''' <: ((α292600''',) -> α292601'''')}›) where: α292591' <: ((α292601_292603''',) -> α292602_292604''')}›  <:  α292600_292629''    PolymorphicType  TypeVariable
//│ ╙──  ... looks like:  ‹∀ 2. {(α292600''' -> ‹∀ 3. {α292602'''' where: α292591' <: ((α292601'''',) -> α292602''''), α292600''' <: ((α292600''',) -> α292601'''')}›) where: α292591' <: ((α292601_292603''',) -> α292602_292604''')}›  <:  α292600'''
//│ res: error
//│ Runtime error:
//│   RangeError: Maximum call stack size exceeded


