:NewParser
:NewDefs

:js
class Foo(x: int)
//│ class Foo(x: int)
//│ // Prelude
//│ let res;
//│ let typing_unit = {
//│   cache: {},
//│   get Foo() {
//│     if (this.cache.Foo === undefined) {
//│       class Foo {
//│         constructor(x) {
//│           this.x = x;
//│         }
//│       };
//│       this.cache.Foo = ((x) => new Foo(x));
//│       this.cache.Foo["class"] = Foo;
//│     }
//│     return this.cache.Foo;
//│   }
//│ };
//│ globalThis.Foo = typing_unit.Foo;
//│ // End of generated code

:js
:e
class Bar(x: int, y: int): Foo(x + y)
//│ ╔══[ERROR] Unsupported parent specification
//│ ║  l.29: 	class Bar(x: int, y: int): Foo(x + y)
//│ ╙──      	                           ^^^^^^^^^^
//│ class Bar(x: int, y: int)
//│ // Prelude
//│ let typing_unit1 = {
//│   cache: {},
//│   get Bar() {
//│     if (this.cache.Bar === undefined) {
//│       class Bar extends Foo {
//│         constructor(x, y) {
//│           super(x + y);
//│           this.x = x;
//│         }
//│       };
//│       this.cache.Bar = ((x, y) => new Bar(x, y));
//│       this.cache.Bar["class"] = Bar;
//│     }
//│     return this.cache.Bar;
//│   }
//│ };
//│ globalThis.Bar = typing_unit1.Bar;
//│ // End of generated code
