:NewParser
:NoJS

class Option
class Some(value): Option
class None: Option
//│ Defined class Option
//│ Defined class Some
//│ Defined class None
//│ Option: () -> Option
//│ Some: 'value -> (Some with {value: 'value})
//│ None: () -> None

class Either
class Left(leftValue): Either
class Right(rightValue): Either
//│ Defined class Either
//│ Defined class Left
//│ Defined class Right
//│ Either: () -> Either
//│ Left: 'leftValue -> (Left with {leftValue: 'leftValue})
//│ Right: 'rightValue -> (Right with {rightValue: 'rightValue})

fun compute(v) =
  if v is
    Left(Some(x)) then x * 5
    Left(None()) then 1
    Right(Some(x)) then x * 3
    Right(None()) then 0
//│ compute: (Left & {leftValue: None | Some & {value: int}} | Right & {rightValue: None | Some & {value: int}}) -> int

fun crazy(v) =
  if v is
    Some(Some(Some(Some(Some(Some(None())))))) then "bruh!"
    _ then "lol"
//│ crazy: anything -> ("bruh!" | "lol")

if x is
  (0, 0) then "zeros"
  (1, 1) then "ones"
//│ /!!!\ Uncaught error: java.lang.Exception: illegal pattern: '(' 0, 0, ')'
//│ 	at: mlscript.Typer.destructPattern(Typer.scala:1037)
//│ 	at: mlscript.Typer.desugarMatchBranch$1(Typer.scala:1073)
//│ 	at: mlscript.Typer.$anonfun$desugarIf$2(Typer.scala:1152)
//│ 	at: mlscript.Typer.$anonfun$desugarIf$2$adapted(Typer.scala:1152)
//│ 	at: scala.collection.immutable.List.foreach(List.scala:333)
//│ 	at: mlscript.Typer.desugarIfBody$1(Typer.scala:1152)
//│ 	at: mlscript.Typer.desugarIf(Typer.scala:1170)
//│ 	at: mlscript.Typer.$anonfun$typeTerm$2(Typer.scala:725)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:30)
//│ 	at: mlscript.Typer.typeTerm(Typer.scala:744)

if x is
  (0, 0) then "zeros"
  (1, 1) then "ones"
  (y, 1) then x
//│ /!!!\ Uncaught error: java.lang.Exception: illegal pattern: '(' 0, 0, ')'
//│ 	at: mlscript.Typer.destructPattern(Typer.scala:1037)
//│ 	at: mlscript.Typer.desugarMatchBranch$1(Typer.scala:1073)
//│ 	at: mlscript.Typer.$anonfun$desugarIf$2(Typer.scala:1152)
//│ 	at: mlscript.Typer.$anonfun$desugarIf$2$adapted(Typer.scala:1152)
//│ 	at: scala.collection.immutable.List.foreach(List.scala:333)
//│ 	at: mlscript.Typer.desugarIfBody$1(Typer.scala:1152)
//│ 	at: mlscript.Typer.desugarIf(Typer.scala:1170)
//│ 	at: mlscript.Typer.$anonfun$typeTerm$2(Typer.scala:725)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:30)
//│ 	at: mlscript.Typer.typeTerm(Typer.scala:744)
