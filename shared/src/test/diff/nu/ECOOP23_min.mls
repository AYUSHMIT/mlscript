:NewParser
:NewDefs
:NoJS


class Add<E>(lhs: E, rhs: E)
// class Lit(n: int)
//│ 
//│ class Add[E](lhs: E, rhs: E) {
//│ this: 'this
//│ }
//│   where
//│     'this :> Add

let e = Add(1, 1)
//│ 
//│ let e: Add & {Add#E = 'E}
//│   where
//│     'E :> 1

:d
e
//│ 0. Typing TypingUnit(List(e))
//│ | 0. Typing term e
//│ | 0. : α33
//│ ======== TYPED ========
//│ res: Some(α33) where 
//│ 		α33 :> (Add<> & {Add#E: mut E23_34..E23_34})
//│ 		E23_34 :> 1<int,number>
//│ 
//│ Add & {Add#E = 'E}
//│   where
//│     'E :> 1
//│ ⬤ Typed as: ‹∀ 0. α33›
//│  where: 
//│ 		α33 :> (Add<> & {Add#E: mut E23_34..E23_34})
//│ 		E23_34 :> 1<int,number>
//│ Typed: Add & {Add#E = 'E}
//│   where
//│     'E :> 1

e.lhs
//│ 
//│ 1
//│ Typed: 1

:d
e
//│ 0. Typing TypingUnit(List(e))
//│ | 0. Typing term e
//│ | 0. : α33
//│ ======== TYPED ========
//│ res: Some(α33) where 
//│ 		α33 :> (Add<> & {Add#E: mut E23_34..E23_34}) <: {lhs: lhs45}
//│ 		E23_34 :> 1<int,number> <: lhs45
//│ 		lhs45 :> 1<int,number>
//│ 
//│ Add & {Add#E = 'E}
//│   where
//│     'E :> 1
//│ ⬤ Typed as: ‹∀ 0. α33›
//│  where: 
//│ 		α33 :> (Add<> & {Add#E: mut E23_34..E23_34}) <: {lhs: lhs45}
//│ 		E23_34 :> 1<int,number> <: lhs45
//│ 		lhs45 :> 1<int,number>
//│ Typed: Add & {Add#E = 'E}
//│   where
//│     'E :> 1


Add(2, 2)
//│ 
//│ Add & {Add#E = 'E}
//│   where
//│     'E :> 2
//│ Typed: Add & {Add#E = 'E}
//│   where
//│     'E :> 2


