:NewParser
:NewDefs
:NoJS


class Add<E>(lhs: E, rhs: E)
// class Lit(n: int)
//│ class Add[E](lhs: E, rhs: E)

let e = Add(1, 1)
//│ let e: Add['E]
//│   where
//│     'E :> 1

:d
e
//│ 0. Typing TypingUnit(List(e))
//│ | 0. Typing term e
//│ | 0. : α32
//│ ======== TYPED ========
//│ res: Some(α32) where 
//│ 		α32 :> (Add<> & {Add#E: mut E23_33..E23_33})
//│ 		E23_33 :> 1<int,number>
//│ Add['E]
//│   where
//│     'E :> 1

e.lhs
//│ 1

:d
e
//│ 0. Typing TypingUnit(List(e))
//│ | 0. Typing term e
//│ | 0. : α32
//│ ======== TYPED ========
//│ res: Some(α32) where 
//│ 		α32 :> (Add<> & {Add#E: mut E23_33..E23_33}) <: {lhs: lhs42}
//│ 		E23_33 :> 1<int,number> <: lhs42
//│ 		lhs42 :> 1<int,number>
//│ Add['E]
//│   where
//│     'E :> 1


Add(2, 2)
//│ Add['E]
//│   where
//│     'E :> 2


