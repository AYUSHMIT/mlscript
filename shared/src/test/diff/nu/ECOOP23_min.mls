:NewParser
:NewDefs
:NoJS


class Add<E>(lhs: E, rhs: E)
// class Lit(n: int)
//│ class Add[E](lhs: E, rhs: E)

let e = Add(1, 1)
//│ let e: Add[1]

:d
e
//│ 0. Typing TypingUnit(List(e))
//│ | 0. Typing term e
//│ | 0. : α29
//│ ======== TYPED ========
//│ res: Some(α29) where 
//│ 		α29 :> (Add<> & {Add#E: mut E23_30..E23_30})
//│ 		E23_30 :> 1<int,number>
//│ Add[1]

e.lhs
//│ 1

:d
e
//│ 0. Typing TypingUnit(List(e))
//│ | 0. Typing term e
//│ | 0. : α29
//│ ======== TYPED ========
//│ res: Some(α29) where 
//│ 		α29 :> (Add<> & {Add#E: mut E23_30..E23_30}) <: {lhs: lhs35}
//│ 		E23_30 :> 1<int,number> <: lhs35
//│ 		lhs35 :> 1<int,number>
//│ Add[1]


Add(2, 2)
//│ Add[2]


