:NewParser
:NewDefs
:NoJS


class Add<E>(lhs: E, rhs: E)
// class Lit(n: int)
//│ class Add[E](lhs: E, rhs: E) {
//│   this: 'this
//│ }
//│ where
//│   'this :> Add[?]

let e = Add(1, 1)
//│ let e: Add['E]
//│   where
//│     'E :> 1

:d
e
//│ 0. Typing TypingUnit(List(e))
//│ | 0. Typing term e
//│ | 0. : α35
//│ ======== TYPED ========
//│ res: Some(α35) where 
//│ 		α35 :> (Add<> & {Add#E: mut E23_36..E23_36})
//│ 		E23_36 :> 1<int,number>
//│ Add['E]
//│   where
//│     'E :> 1

e.lhs
//│ 1

:d
e
//│ 0. Typing TypingUnit(List(e))
//│ | 0. Typing term e
//│ | 0. : α35
//│ ======== TYPED ========
//│ res: Some(α35) where 
//│ 		α35 :> (Add<> & {Add#E: mut E23_36..E23_36}) <: {lhs: lhs45}
//│ 		E23_36 :> 1<int,number> <: lhs45
//│ 		lhs45 :> 1<int,number>
//│ Add['E]
//│   where
//│     'E :> 1


Add(2, 2)
//│ Add['E]
//│   where
//│     'E :> 2


