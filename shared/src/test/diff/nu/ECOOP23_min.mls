:NewParser
:NewDefs
:NoJS


class Add<E>(lhs: E, rhs: E)
// class Lit(n: int)
//│ class Add[E](lhs: E, rhs: E)

let e = Add(1, 1)
//│ let e: Add<1>

:d
e
//│ 0. Typing TypingUnit(List(e))
//│ | 0. Typing term e
//│ | 0. : α30
//│ ======== TYPED ========
//│ res: Some(α30) where 
//│ 		α30 :> (Add<> & {Add#E: mut E23_31..E23_31})
//│ 		E23_31 :> 1<int,number>
//│ Add<1>

e.lhs
//│ 1

:d
e
//│ 0. Typing TypingUnit(List(e))
//│ | 0. Typing term e
//│ | 0. : α30
//│ ======== TYPED ========
//│ res: Some(α30) where 
//│ 		α30 :> (Add<> & {Add#E: mut E23_31..E23_31}) <: {lhs: lhs36}
//│ 		E23_31 :> 1<int,number> <: lhs36
//│ 		lhs36 :> 1<int,number>
//│ Add<1>


Add(2, 2)
//│ Add<2>


