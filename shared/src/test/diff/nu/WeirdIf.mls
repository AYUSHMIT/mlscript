:NewParser

// Should report duplicated else branches.
:w
if
  _ then 0
  else 0
else 1
//│ ╔══[WARNING] duplicated branch
//│ ╙──
//│ ╔══[WARNING] duplicated branch
//│ ╙──
//│ res: 0
//│    = 0

:w
if else 0 else 1
//│ ╔══[WARNING] duplicated branch
//│ ╙──
//│ res: 0
//│    = 0

:w
fun f(x) = if x is else 0 else 1
//│ ╔══[WARNING] duplicated branch
//│ ╙──
//│ f: anything -> 0
//│  = [Function: f]

fun f(x) = if x is else 0 
//│ f: anything -> 0
//│  = [Function: f1]

:e
:ge
if true
  then 0
//│ ╔══[ERROR] missing a default branch
//│ ║  l.36: 	if true
//│ ║        	   ^^^^
//│ ║  l.37: 	  then 0
//│ ╙──      	^^^^^^^^
//│ res: error
//│ Code generation encountered an error:
//│   if expression has not been not desugared

// This cannot be parsed. But the next one works.
:pe
:e
:ge
fun f(x) =
  if x ==
    else "bruh"
//│ ╔══[PARSE ERROR] Unexpected indented block in expression position
//│ ║  l.53: 	    else "bruh"
//│ ╙──      	^^^^
//│ ╔══[PARSE ERROR] Unexpected end of indented block; an expression was expected here
//│ ║  l.53: 	    else "bruh"
//│ ╙──      	    ^
//│ ╔══[PARSE ERROR] Expected 'then'/'else' clause; found operator application instead
//│ ║  l.52: 	  if x ==
//│ ║        	     ^^^^
//│ ║  l.53: 	    else "bruh"
//│ ║        	^^^^
//│ ╟── Note: 'if' expression started here:
//│ ║  l.52: 	  if x ==
//│ ╙──      	  ^^
//│ ╔══[ERROR] missing a default branch
//│ ║  l.52: 	  if x ==
//│ ║        	     ^^^^
//│ ║  l.53: 	    else "bruh"
//│ ╙──      	^^^^
//│ f: anything -> error
//│ Code generation encountered an error:
//│   if expression has not been not desugared

// But this works.
fun f(x) =
  if x ==
    _ then "bruh"
//│ f: anything -> "bruh"
//│  = [Function: f3]
