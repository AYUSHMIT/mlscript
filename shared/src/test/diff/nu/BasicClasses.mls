:NewParser
:NewDefs
:NoJS


// TODO
class Base0(n) {
  fun me = this
  fun my = this.n
  fun mine = my
  fun oops = this.my
}
//│ ╔══[ERROR] class `Base0` does not contain member `my`
//│ ║  l.11: 	  fun oops = this.my
//│ ╙──      	                 ^^^
//│ class Base0
//│   fun me: ‹∀ 1. me29''#› where 
//│   |		me29''# := Base0<>
//│   [pretty-printed] me: Base0
//│   fun my: ‹∀ 1. my30''#› where 
//│   |		my30''# := n31''
//│   |		n31'' :> n23' <: mine32''# & my30''#
//│   |		mine32''# := my30''#
//│   [pretty-printed] my: nothing
//│   fun mine: ‹∀ 1. mine32''#› where 
//│   |		my30''# := n31''
//│   |		n31'' :> n23' <: mine32''# & my30''#
//│   |		mine32''# := my30''#
//│   [pretty-printed] mine: nothing
//│   fun oops: ‹∀ 1. oops33''#› where 
//│   |		oops33''# := my34''
//│   |		my34'' :> error<> | error<> <: oops33''#
//│   [pretty-printed] oops: error


class Base1(base: int) {
  fun getBase1 = base
  fun getBase2 = this.base
  fun foo(x) = this.base + x
}
//│ class Base1
//│   fun getBase1: ‹∀ 1. getBase150''#› where 
//│   |		getBase150''# := Int
//│   [pretty-printed] getBase1: int
//│   fun getBase2: ‹∀ 1. getBase251''#› where 
//│   |		getBase251''# := base52''
//│   |		base52'' :> Int <: getBase251''#
//│   [pretty-printed] getBase2: int
//│   fun foo: ‹∀ 1. foo53''#› where 
//│   |		foo53''# := (α54'' -> α57'')
//│   |		α54'' <: int<number>
//│   |		α57'' :> int<number>
//│   [pretty-printed] foo: int -> int

Base1
//│ Typed: (base: int,) -> Base1

let b = Base1(1)
//│ fun b: ‹∀ 0. b65'#› where 
//│ |		b65'# := α66'
//│ |		α66' :> Base1<> <: b65'#
//│ [pretty-printed] b: Base1

b.base
//│ Typed: int

// TODO
// :d
b.getBase1
//│ ╔══[ERROR] class `Base1` does not contain member `getBase1`
//│ ║  l.69: 	b.getBase1
//│ ╙──      	 ^^^^^^^^^
//│ Typed: error

:e
b.getBaseTypo
//│ ╔══[ERROR] class `Base1` does not contain member `getBaseTypo`
//│ ║  l.76: 	b.getBaseTypo
//│ ╙──      	 ^^^^^^^^^^^^
//│ Typed: error


b : Base1
//│ Typed: Base1


// TODO treat `a: int` as a signature
class Annots(base: 0 | 1) {
  a: int
  fun a = base
}
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing


