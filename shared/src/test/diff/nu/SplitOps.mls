:NewParser

fun f(x) =
  if x
    is Left(v) then 0
    is Right(v) then 1
    <> undefined then 2
//│ ╔══[ERROR] class Left not found
//│ ╙──
//│ f: anything -> error
//│ Code generation encountered an error:
//│   if expression has not been desugared

fun f(x) =
  if x
    is Some(xv) and y is Some(yv) then xv + yv
    is None() and y is None() then 0
//│ ╔══[ERROR] class Some not found
//│ ╙──
//│ f: anything -> error
//│ Code generation encountered an error:
//│   if expression has not been desugared

class A()
class B()
//│ Defined class A
//│ Defined class B
//│ A: () -> A
//│  = [Function: A1]
//│ B: () -> B
//│  = [Function: B1]

fun f(a) =
  if a
    is A() and b is B() then 0
//│ ╔══[ERROR] identifier not found: b
//│ ║  l.35: 	    is A() and b is B() then 0
//│ ╙──      	               ^
//│ f: A -> 0
//│ Code generation encountered an error:
//│   unresolved symbol b

class C()
//│ Defined class C
//│ C: () -> C
//│  = [Function: C1]

fun f(a, b, c) =
  if a
    == 0 and b is B() and c is C() then 0
//│ ╔══[ERROR] missing a default branch
//│ ╙──
//│ f: (anything, anything, anything,) -> error
//│ Code generation encountered an error:
//│   if expression has not been desugared

fun f(x) =
  if x
    is A() then "A"
    is B() then "B"
//│ f: (A | B) -> ("A" | "B")
//│  = [Function: f4]

fun sumOpt(x, y) =
  if x
    is Some(xv) and y is
      Some(yv) then xv + yvand
      None() then xv
    is None() and y is
      Some(yv) then yv
      None() then 0
//│ ╔══[ERROR] class Some not found
//│ ╙──
//│ sumOpt: (anything, anything,) -> error
//│ Code generation encountered an error:
//│   if expression has not been desugared

fun f(x, y) =
  if x is A() and y
    == z then 1
    is B() then 0
//│ ╔══[ERROR] identifier not found: z
//│ ║  l.80: 	    == z then 1
//│ ╙──      	       ^
//│ f: (A, nothing,) -> (0 | 1)
//│ Code generation encountered an error:
//│   unresolved symbol z
