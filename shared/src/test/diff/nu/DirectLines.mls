:NewParser

fun f(x, y) =
  if
    x == 0 then "x"
    y == 0 then "y"
//│ f: (number, anything,) -> ("x" | "y")
//│  = [Function: f]

fun f(x) =
  if x
    is Some(x) and isValid(x) then "good"
    is None() and allowNone then "okay"
    is _ then "bad"
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.Typer.desugarIfBody$1(Typer.scala:1126)
//│ 	at: mlscript.Typer.desugarIf(Typer.scala:1170)
//│ 	at: mlscript.Typer.$anonfun$typeTerm$2(Typer.scala:725)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:30)
//│ 	at: mlscript.Typer.typeTerm(Typer.scala:744)
//│ 	at: mlscript.Typer.$anonfun$typeTerm$2(Typer.scala:612)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:30)
//│ 	at: mlscript.Typer.typeTerm(Typer.scala:744)
//│ 	at: mlscript.Typer.$anonfun$typeTerm$2(Typer.scala:620)

fun f(x, y) =
  if
    x == 0 then "x"
    y ==
      1 then "y = 1"
      2 and z ==
        0 then "z = 0"
        9 then "z = 9"
      3 then "y = 3"
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.MutCaseOf$IfThenElse.merge(helpers.scala:949)
//│ 	at: mlscript.MutCaseOf$.$anonfun$build$1(helpers.scala:1060)
//│ 	at: mlscript.MutCaseOf$.$anonfun$build$1$adapted(helpers.scala:1060)
//│ 	at: scala.collection.immutable.List.foreach(List.scala:333)
//│ 	at: mlscript.MutCaseOf$.build(helpers.scala:1060)
//│ 	at: mlscript.Typer.$anonfun$typeTerm$2(Typer.scala:727)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:30)
//│ 	at: mlscript.Typer.typeTerm(Typer.scala:744)
//│ 	at: mlscript.Typer.$anonfun$typeTerm$2(Typer.scala:612)

fun f(a, b) =
  if
    a == 0 then 0
    b ==
      1 then 1
      2 then 2
      _ then 7
    else 3
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.MutCaseOf$IfThenElse.merge(helpers.scala:949)
//│ 	at: mlscript.MutCaseOf$.$anonfun$build$1(helpers.scala:1060)
//│ 	at: mlscript.MutCaseOf$.$anonfun$build$1$adapted(helpers.scala:1060)
//│ 	at: scala.collection.immutable.List.foreach(List.scala:333)
//│ 	at: mlscript.MutCaseOf$.build(helpers.scala:1060)
//│ 	at: mlscript.Typer.$anonfun$typeTerm$2(Typer.scala:727)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:30)
//│ 	at: mlscript.Typer.typeTerm(Typer.scala:744)
//│ 	at: mlscript.Typer.$anonfun$typeTerm$2(Typer.scala:612)
