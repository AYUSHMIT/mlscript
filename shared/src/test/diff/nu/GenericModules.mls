:NewParser
:NewDefs
:NoJS


module Test<A> {
  fun foo: A => A
}
//│ module Test[A]() {
//│   fun foo: A -> A
//│ }

Test.foo
//│ (??A & 'A) -> ('A | ??A0)

:e
Test.foo(1)
//│ ╔══[ERROR] Type error in application
//│ ║  l.17: 	Test.foo(1)
//│ ║        	^^^^^^^^^^^
//│ ╟── type variable `A` leaks out of its scope
//│ ║  l.17: 	Test.foo(1)
//│ ╙──      	         ^
//│ error | ??A

:e
Test.foo(error) + 1
//│ ╔══[ERROR] Type error in operator application
//│ ║  l.27: 	Test.foo(error) + 1
//│ ║        	^^^^^^^^^^^^^^^^^
//│ ╟── type variable `A` leaks out of its scope
//│ ║  l.27: 	Test.foo(error) + 1
//│ ║        	^^^^^^^^^^^^^^^
//│ ╙── into type `int`
//│ error | int

:e
Test<int> .foo
//│ ╔══[ERROR] Type application syntax is not yet supported
//│ ║  l.38: 	Test<int> .foo
//│ ╙──      	^^^^^^^^^
//│ error

:e
(Test<int>).foo
//│ ╔══[ERROR] Type application syntax is not yet supported
//│ ║  l.45: 	(Test<int>).foo
//│ ╙──      	 ^^^^^^^^^
//│ error


