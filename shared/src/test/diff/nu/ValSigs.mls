:NewDefs


val x: Int
//│ let x: Int
//│ x
//│   = <missing implementation>

// * Note that this counts as a completely new `val` since it's in a new block
val x = "hi"
//│ let x: "hi"
//│ x
//│   = 'hi'


val x: Int
val x = 1
//│ let x: 1
//│ let x: Int
//│ x
//│   = <missing implementation>
//│ x
//│   = 1

x
//│ Int
//│ res
//│     = 1


:e
val x: Int
val x = "oops"
//│ ╔══[ERROR] Type mismatch in definition:
//│ ║  l.33: 	val x = "oops"
//│ ║        	    ^^^^^^^^^^
//│ ╟── string literal of type `"oops"` is not an instance of type `Int`
//│ ║  l.33: 	val x = "oops"
//│ ║        	        ^^^^^^
//│ ╟── Note: constraint arises from type reference:
//│ ║  l.32: 	val x: Int
//│ ╙──      	       ^^^
//│ let x: "oops"
//│ let x: Int
//│ x
//│   = <missing implementation>
//│ x
//│   = 'oops'


