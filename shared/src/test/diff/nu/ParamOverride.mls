:NewParser
:NewDefs


class Base0(n: number)
//│ class Base0(n: number)

// TODO
class Derived0(n: int) extends Base
//│ ╔══[ERROR] Could not find definition `Base`
//│ ║  l.9: 	class Derived0(n: int) extends Base
//│ ╙──     	                               ^^^^
//│ class Derived0(n: int)
//│ Code generation encountered an error:
//│   unresolved symbol Base


mixin Base1(n: number) {
  fun original = n
}
//│ mixin Base1(n: number) {
//│   fun original: number
//│ }

:e
mixin DerivedBad(n: int) extends Base
//│ ╔══[ERROR] mixin definitions cannot yet extend parents
//│ ║  l.26: 	mixin DerivedBad(n: int) extends Base
//│ ╙──      	                                 ^^^^
//│ mixin DerivedBad(n: int)

mixin Derived1(n: int) {
  fun foo = [n, this.n, super.n]
}
//│ mixin Derived1(n: int) {
//│   super: {n: 'n}
//│   this: {n: 'n0}
//│   fun foo: (int, 'n0, 'n,)
//│ }


class Test0 extends Base1(0), Derived1(1)
//│ class Test0() {
//│   fun foo: (int, 1, 0,)
//│   fun original: number
//│ }

let t = Test0()
//│ let t: Test0
//│ t
//│   = Test0 {}

t.n
//│ 1
//│ res
//│     = 1

t.original
//│ number
//│ res
//│     = 0

t.foo
//│ (int, 1, 0,)
//│ res
//│     = [ 1, 1, 0 ]


:ShowRepl
module Test1 extends Base1(0), Derived1(1) {
  fun n = this.n
}
//│ module Test1() {
//│   fun foo: (int, 1, 0,)
//│   fun n: 1
//│   fun original: number
//│ }
//│ ┌ Block at ParamOverride.mls:70
//│ ├─┬ Prelude
//│ │ ├── Code
//│ │ │   let typing_unit10 = {
//│ │ │     cache: {},
//│ │ │     get Test1() {
//│ │ │       if (this.cache.Test1 === undefined) {
//│ │ │         class Test1 extends Derived1(Base1(Object)) {
//│ │ │           constructor() {
//│ │ │             super(1, 0);
//│ │ │           }
//│ │ │           get n() {
//│ │ │             const self = this;
//│ │ │             return self.n;
//│ │ │           }
//│ │ │         }
//│ │ │         this.cache.Test1 = new Test1();
//│ │ │         this.cache.Test1["class"] = Test1;
//│ │ │       }
//│ │ │       return this.cache.Test1;
//│ │ │     }
//│ │ │   };
//│ │ │   globalThis.Test1 = typing_unit10.Test1;
//│ │ └── Reply
//│ │     Test1 { class: [Function: Test1] }
//│ └── No queries

// FIXME
Test1.n
//│ 1
//│ res
//│ Runtime error:
//│   RangeError: Maximum call stack size exceeded


