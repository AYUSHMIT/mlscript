:NewParser
:NewDefs
:NoJS


// :d
mixin BaseTest {
  fun test = super.base
}
//│ mixin BaseTest
//│   this: this23' 
//│   super: super24' 
//│   |		super24' <: {base: base27_28'}
//│   fun test: ‹∀ 1. test26''#› where 
//│   |		test26''# := base27''
//│   |		base27'' :> base27_28' <: test26''#
//│   [pretty-printed] test: nothing

mixin BaseInc {
  fun test = super.base + 1
}
//│ mixin BaseInc
//│   this: this33' 
//│   super: super34' 
//│   |		super34' <: {base: base37_38'}
//│   |		base37_38' <: int<number>
//│   fun test: ‹∀ 1. test36''#› where 
//│   |		test36''# := α40''
//│   |		α40'' :> int<number> <: test36''#
//│   [pretty-printed] test: int

:d
class Base1(base: int): BaseTest
//│ 0. Typing TypingUnit(List(class Base1(base: int,): BaseTest {}))
//│ Completing class Base1(base: int,): BaseTest {}
//│ | Typing type int
//│ | | vars=Map() newDefsInfo=Map()
//│ | | 1. type int
//│ | | => Int
//│ | => Int ——— 
//│ | List()
//│ | base: int,
//│ | List(BaseTest)
//│ | 1. Inheriting from BaseTest
//│ | | 2. FRESHEN ‹∀ 1. test26''#› || 0 .. 1024  1 false
//│ | | | 3. FRESHEN test26''# || 1 .. 1024  2 false
//│ | | | | 3. FRESHEN base27'' || 1 .. 1024  2 false
//│ | | | | | 3. FRESHEN base27_28' || 1 .. 1024  1 true
//│ | | | | | => base27_28'
//│ | | | | | 3. FRESHEN test26''# || 1 .. 1024  2 false
//│ | | | | | | 3. FRESHEN test26''# || 1 .. 1024  2 false
//│ | | | | | | => test26_47'''
//│ | | | | | => test26_47'''
//│ | | | | => base27_48'''
//│ | | | => test26_47'''#
//│ | | | 2. FRESHEN ‹∀ 2. test26_47'''#› || 0 .. 1024  1 false
//│ | | | | 2. FRESHEN test26_47'''# || 0 .. 2  3 false
//│ | | | | | 2. FRESHEN base27_48''' || 0 .. 2  3 false
//│ | | | | | | 2. FRESHEN base27_28' || 0 .. 2  1 false
//│ | | | | | | => base27_51''
//│ | | | | | | 2. FRESHEN test26_47'''# || 0 .. 2  3 false
//│ | | | | | | | 2. FRESHEN test26_47'''# || 0 .. 2  3 false
//│ | | | | | | | => test26_49'''
//│ | | | | | | => test26_49'''
//│ | | | | | => base27_50'''
//│ | | | | => test26_49'''#
//│ | | | => ‹∀ 2. test26_49'''#›
//│ | | => ‹∀ 2. test26_49'''#›
//│ | | CONSTRAIN {base: Int} <! super24'
//│ | |   where 
//│ 		super24' <: {base: base27_28'}
//│ | | 1. C {base: Int} <! super24'    (0)
//│ | | | NEW super24' LB (0)
//│ | | | 1. C {base: Int} <! {base: base27_28'}    (2)
//│ | | | | 1. C {base: Int} <! {base: base27_28'}    (2)
//│ | | | | | 1. C {base: Int} <! {base: base27_28'}    (2)
//│ | | | | | | 1. C {base: Int} <! {base: base27_28'}    (2)
//│ | | | | | | | 1. C {base: Int} <! {base: base27_28'}    (2)
//│ | | | | | | | | 1. C Int <! base27_28'    (2)
//│ | | | | | | | | | NEW base27_28' LB (0)
//│ | | CONSTRAIN this45' <! this23'
//│ | |   where 
//│ | | 1. C this45' <! this23'    (0)
//│ | | | NEW this45' UB (1)
//│ | CONSTRAIN {base: Int, test: ‹∀ 2. test26_49'''#›} <! this45'
//│ |   where 
//│ 		this45' <: this23'
//│ 		test26_49'''# := base27_50'''
//│ 		base27_50''' :> base27_51'' <: test26_49'''#
//│ | 1. C {base: Int, test: ‹∀ 2. test26_49'''#›} <! this45'    (0)
//│ | | wrong level: 2
//│ | | LHS bounds  
//│ 		test26_49'''# := base27_50'''
//│ 		base27_50''' :> base27_51'' <: test26_49'''#
//│ | | RECONSTRAINING TVs
//│ | | | 1. C base27_54' <! test26_52'''#    (1)
//│ | | | | 1. C base27_54' <! test26_52'''#    (1)
//│ | | | | | 1. C base27_54' <! base27_53'''    (4)
//│ | | | | | | NEW base27_53''' LB (1)
//│ | | | | | | 1. C base27_54' <! test26_52'''#    (7)
//│ | | | | | | | 1. C base27_54' <! test26_52'''#    (7)
//│ | | | | | | | | Cached!
//│ | | EXTR LHS  ~>  {base: Int, test: ‹∀ 2. test26_52'''#›}  to 1
//│ | |  where 
//│ 		test26_52'''# := base27_53'''
//│ 		base27_53''' :> base27_54' | base27_54' <: test26_52'''#
//│ | | 1. C {base: Int, test: ‹∀ 2. test26_52'''#›} <! this45'    (2)
//│ | | | NEW this45' LB (1)
//│ | | | 1. C {base: Int, test: ‹∀ 2. test26_52'''#›} <! this23'    (3)
//│ | | | | NEW this23' LB (1)
//│ | 1. Typing TypingUnit(List())
//│ | UNSTASHING... (out)
//│ CONSTRAIN Base1<> <! this44'
//│   where 
//│ 0. C Base1<> <! this44'    (0)
//│ | NEW this44' LB (0)
//│ class Base1


class Base1(base): BaseTest
//│ class Base1

:e
class Base1(x): BaseTest
//│ ╔══[ERROR] Type mismatch in type declaration:
//│ ║  l.124: 	class Base1(x): BaseTest
//│ ║         	      ^^^^^^^^^^^^^^^^^^
//│ ╟── type `{x: ?x}` does not have field 'base'
//│ ║  l.124: 	class Base1(x): BaseTest
//│ ║         	           ^^^
//│ ╟── Note: constraint arises from field selection:
//│ ║  l.8: 	  fun test = super.base
//│ ║       	             ^^^^^^^^^^
//│ ╟── from reference:
//│ ║  l.8: 	  fun test = super.base
//│ ╙──     	             ^^^^^
//│ class Base1

Base1
//│ Typed: (x: anything,) -> Base1


// :ns
mixin Foo {
  fun test(x) = [super.base + x, x, super.misc]
}
//│ mixin Foo
//│   this: this88' 
//│   super: super89' 
//│   |		super89' <: {misc: misc97_98'} & {base: base93_94'}
//│   |		base93_94' <: int<number>
//│   fun test: ‹∀ 1. test91''#› where 
//│   |		test91''# := (α92'' -> (α96'', α92'', misc97'',))
//│   |		α92'' <: int<number>
//│   |		α96'' :> int<number>
//│   |		misc97'' :> misc97_98'
//│   [pretty-printed] test: (int & 'a) -> (int, 'a, nothing,)


mixin WrapBase {
  fun wrap(x) = x
}
//│ mixin WrapBase
//│   this: this107' 
//│   super: super108' 
//│   fun wrap: ‹∀ 1. wrap110''#› where 
//│   |		wrap110''# := (α111'' -> α111'')
//│   [pretty-printed] wrap: 'a -> 'a

:d
mixin Wrap {
  fun wrap(x) = [super.wrap(x)]
}
//│ 0. Typing TypingUnit(List(mixin Wrap() {fun wrap = (x,) => '(' (super).wrap (x,), ')'}))
//│ Completing mixin Wrap() {fun wrap = (x,) => '(' (super).wrap (x,), ')'}
//│ | 1. Typing TypingUnit(List(fun wrap = (x,) => '(' (super).wrap (x,), ')'))
//│ | UNSTASHING... (out)
//│ Completing fun wrap = (x,) => '(' (super).wrap (x,), ')'
//│ | 2. Typing term (x,) => '(' (super).wrap (x,), ')'
//│ | | 2. Typing pattern x,
//│ | | | 2. Typing pattern x
//│ | | | 2. : x121''
//│ | | 2. : (x121'',)
//│ | | 2. Typing term '(' (super).wrap (x,), ')'
//│ | | | 2. Typing term (super).wrap (x,),
//│ | | | | 2. Typing term (super).wrap (x,)
//│ | | | | | 2. Typing term (super).wrap
//│ | | | | | | 2. Typing term super
//│ | | | | | | 2. : super118'
//│ | | | | | | CONSTRAIN super118' <! {wrap: wrap122''}
//│ | | | | | |   where 
//│ | | | | | | 2. C super118' <! {wrap: wrap122''}    (0)
//│ | | | | | | | wrong level: 2
//│ | | | | | | | RECONSTRAINING TVs
//│ | | | | | | | EXTR RHS  ~>  {wrap: wrap122_123'}  to 1
//│ | | | | | | |  where 
//│ | | | | | | | 2. C super118' <! {wrap: wrap122_123'}    (2)
//│ | | | | | | | | NEW super118' UB (1)
//│ | | | | | 2. : wrap122''
//│ | | | | | 2. Typing term x
//│ | | | | | 2. : x121''
//│ | | | | | CONSTRAIN wrap122'' <! (x121'' -> α124'')
//│ | | | | |   where 
//│ 		wrap122'' :> wrap122_123'
//│ | | | | | 2. C wrap122'' <! (x121'' -> α124'')    (0)
//│ | | | | | | NEW wrap122'' UB (2)
//│ | | | | | | 2. C wrap122_123' <! (x121'' -> α124'')    (2)
//│ | | | | | | | wrong level: 2
//│ | | | | | | | RECONSTRAINING TVs
//│ | | | | | | | EXTR RHS  ~>  (x121_125' -> α124_126')  to 1
//│ | | | | | | |  where 
//│ | | | | | | | 2. C wrap122_123' <! (x121_125' -> α124_126')    (4)
//│ | | | | | | | | NEW wrap122_123' UB (1)
//│ | | | | 2. : α124''
//│ | | | 2. : (α124'',)
//│ | | 2. : (α124'',)
//│ | 2. : (x121'' -> (α124'',))
//│ | CONSTRAIN (x121'' -> (α124'',)) <! wrap120''
//│ |   where 
//│ 		x121'' <: x121_125'
//│ 		α124'' :> α124_126'
//│ | 2. C (x121'' -> (α124'',)) <! wrap120''    (0)
//│ | | NEW wrap120'' LB (2)
//│ | UNSTASHING... (out)
//│ mixin Wrap
//│   this: this117' 
//│   super: super118' 
//│   |		super118' <: {wrap: wrap122_123'}
//│   |		wrap122_123' <: (x121_125' -> α124_126')
//│ ⬤ Typed as: ‹∀ 1. wrap120''#›
//│  where: 
//│ 		wrap120''# := (x121'' -> (α124'',))
//│ 		x121'' <: x121_125'
//│ 		α124'' :> α124_126'
//│   fun wrap: ‹∀ 1. wrap120''#› where 
//│   |		wrap120''# := (x121'' -> (α124'',))
//│   |		x121'' <: x121_125'
//│   |		α124'' :> α124_126'
//│   [pretty-printed] wrap: anything -> (nothing,)



:d
module WrapBase1: WrapBase, Wrap
//│ 0. Typing TypingUnit(List(namespace WrapBase1(): WrapBase, Wrap {}))
//│ Completing namespace WrapBase1(): WrapBase, Wrap {}
//│ | List()
//│ | 
//│ | List(WrapBase, Wrap)
//│ | 1. Inheriting from WrapBase
//│ | | 2. FRESHEN ‹∀ 1. wrap110''#› || 0 .. 1024  0 true
//│ | | => ‹∀ 1. wrap110''#›
//│ | | CONSTRAIN {} <! super108'
//│ | |   where 
//│ | | 1. C {} <! super108'    (0)
//│ | | | NEW super108' LB (0)
//│ | | CONSTRAIN this134' <! this107'
//│ | |   where 
//│ | | 1. C this134' <! this107'    (0)
//│ | | | NEW this134' UB (1)
//│ | 1. Inheriting from Wrap
//│ | | 2. FRESHEN ‹∀ 1. wrap120''#› || 0 .. 1024  1 false
//│ | | | 3. FRESHEN wrap120''# || 1 .. 1024  2 false
//│ | | | | 3. FRESHEN (x121'' -> (α124'',)) || 1 .. 1024  2 false
//│ | | | | | 3. FRESHEN (x121'',) || 1 .. 1024  2 false
//│ | | | | | | 3. FRESHEN x121'' || 1 .. 1024  2 false
//│ | | | | | | | 3. FRESHEN x121_125' || 1 .. 1024  1 true
//│ | | | | | | | => x121_125'
//│ | | | | | | => x121_138'''
//│ | | | | | => (x121_138''',)
//│ | | | | | 3. FRESHEN (α124'',) || 1 .. 1024  2 false
//│ | | | | | | 3. FRESHEN α124'' || 1 .. 1024  2 false
//│ | | | | | | | 3. FRESHEN α124_126' || 1 .. 1024  1 true
//│ | | | | | | | => α124_126'
//│ | | | | | | => α124_139'''
//│ | | | | | => (α124_139''',)
//│ | | | | => (x121_138''' -> (α124_139''',))
//│ | | | => wrap120_137'''#
//│ | | | 2. FRESHEN ‹∀ 2. wrap120_137'''#› || 0 .. 1024  1 false
//│ | | | | 2. FRESHEN wrap120_137'''# || 0 .. 2  3 false
//│ | | | | | 2. FRESHEN (x121_138''' -> (α124_139''',)) || 0 .. 2  3 false
//│ | | | | | | 2. FRESHEN (x121_138''',) || 0 .. 2  3 false
//│ | | | | | | | 2. FRESHEN x121_138''' || 0 .. 2  3 false
//│ | | | | | | | | 2. FRESHEN x121_125' || 0 .. 2  1 false
//│ | | | | | | | | => x121_142''
//│ | | | | | | | => x121_141'''
//│ | | | | | | => (x121_141''',)
//│ | | | | | | 2. FRESHEN (α124_139''',) || 0 .. 2  3 false
//│ | | | | | | | 2. FRESHEN α124_139''' || 0 .. 2  3 false
//│ | | | | | | | | 2. FRESHEN α124_126' || 0 .. 2  1 false
//│ | | | | | | | | => α124_144''
//│ | | | | | | | => α124_143'''
//│ | | | | | | => (α124_143''',)
//│ | | | | | => (x121_141''' -> (α124_143''',))
//│ | | | | => wrap120_140'''#
//│ | | | => ‹∀ 2. wrap120_140'''#›
//│ | | => ‹∀ 2. wrap120_140'''#›
//│ | | CONSTRAIN {wrap: ‹∀ 1. wrap110''#›} <! super118'
//│ | |   where 
//│ 		wrap110''# := (α111'' -> α111'')
//│ 		super118' <: {wrap: wrap122_123'}
//│ 		wrap122_123' <: (x121_125' -> α124_126')
//│ | | 1. C {wrap: ‹∀ 1. wrap110''#›} <! super118'    (0)
//│ | | | NEW super118' LB (0)
//│ | | | 1. C {wrap: ‹∀ 1. wrap110''#›} <! {wrap: wrap122_123'}    (2)
//│ | | | | 1. C ‹∀ 1. wrap110''#› <! wrap122_123'    (2)
//│ | | | | | NEW wrap122_123' LB (0)
//│ | | | | | 1. C ‹∀ 1. wrap110''#› <! (x121_125' -> α124_126')    (4)
//│ | | | | | | could be distribbed: Set(α111'')
//│ | | | | | | cannot be distribbed: Set(α111'')
//│ | | | | | | INST [1]   ‹∀ 1. wrap110''#›
//│ | | | | | |   where  
//│ 		wrap110''# := (α111'' -> α111'')
//│ | | | | | | 1. FRESHEN wrap110''# || 1 .. 1024  2 false
//│ | | | | | | | 1. FRESHEN (α111'' -> α111'') || 1 .. 1024  2 false
//│ | | | | | | | | 1. FRESHEN (α111'',) || 1 .. 1024  2 false
//│ | | | | | | | | | 1. FRESHEN α111'' || 1 .. 1024  2 false
//│ | | | | | | | | | => α111_146'
//│ | | | | | | | | => (α111_146',)
//│ | | | | | | | | 1. FRESHEN α111'' || 1 .. 1024  2 false
//│ | | | | | | | | | 1. FRESHEN α111'' || 1 .. 1024  2 false
//│ | | | | | | | | | => α111_146'
//│ | | | | | | | | => α111_146'
//│ | | | | | | | => (α111_146' -> α111_146')
//│ | | | | | | => wrap110_145'#
//│ | | | | | | TO [1] ~>  wrap110_145'#
//│ | | | | | |   where  
//│ 		wrap110_145'# := (α111_146' -> α111_146')
//│ | | | | | | 1. C wrap110_145'# <! (x121_125' -> α124_126')    (6)
//│ | | | | | | | 1. C (α111_146' -> α111_146') <! (x121_125' -> α124_126')    (9)
//│ | | | | | | | | 1. C (x121_125',) <! (α111_146',)    (6)
//│ | | | | | | | | | 1. C x121_125' <! α111_146'    (7)
//│ | | | | | | | | | | NEW x121_125' UB (1)
//│ | | | | | | | | 1. C α111_146' <! α124_126'    (6)
//│ | | | | | | | | | 1. C α111_146' <! α124_126'    (6)
//│ | | | | | | | | | | NEW α111_146' UB (1)
//│ | | CONSTRAIN this134' <! this117'
//│ | |   where 
//│ 		this134' <: this107'
//│ | | 1. C this134' <! this117'    (0)
//│ | | | NEW this134' UB (1)
//│ | CONSTRAIN {wrap: (‹∀ 1. wrap110''#› & ‹∀ 2. wrap120_140'''#›)} <! this134'
//│ |   where 
//│ 		wrap110''# := (α111'' -> α111'')
//│ 		this134' <: this117' & this107'
//│ 		wrap120_140'''# := (x121_141''' -> (α124_143''',))
//│ 		x121_141''' <: x121_142''
//│ 		α124_143''' :> α124_144''
//│ | 1. C {wrap: (‹∀ 1. wrap110''#› & ‹∀ 2. wrap120_140'''#›)} <! this134'    (0)
//│ | | wrong level: 2
//│ | | LHS bounds  
//│ 		wrap110''# := (α111'' -> α111'')
//│ 		wrap120_140'''# := (x121_141''' -> (α124_143''',))
//│ 		x121_141''' <: x121_142''
//│ 		α124_143''' :> α124_144''
//│ | | RECONSTRAINING TVs
//│ | | EXTR LHS  ~>  {wrap: (‹∀ 1. wrap110''#› & ‹∀ 2. wrap120_147'''#›)}  to 1
//│ | |  where 
//│ 		wrap110''# := (α111'' -> α111'')
//│ 		wrap120_147'''# := (x121_148''' -> (α124_150''',))
//│ 		x121_148''' <: x121_149'
//│ 		α124_150''' :> α124_151'
//│ | | 1. C {wrap: (‹∀ 1. wrap110''#› & ‹∀ 2. wrap120_147'''#›)} <! this134'    (2)
//│ | | | NEW this134' LB (1)
//│ | | | 1. C {wrap: (‹∀ 1. wrap110''#› & ‹∀ 2. wrap120_147'''#›)} <! this117'    (3)
//│ | | | | NEW this117' LB (1)
//│ | | | 1. C {wrap: (‹∀ 1. wrap110''#› & ‹∀ 2. wrap120_147'''#›)} <! this107'    (3)
//│ | | | | NEW this107' LB (1)
//│ | 1. Typing TypingUnit(List())
//│ | UNSTASHING... (out)
//│ CONSTRAIN WrapBase1<> <! this133'
//│   where 
//│ 0. C WrapBase1<> <! this133'    (0)
//│ | NEW this133' LB (0)
//│ class WrapBase1


WrapBase1
//│ Typed: WrapBase1

:d
WrapBase1.wrap
//│ 0. Typing TypingUnit(List((WrapBase1).wrap))
//│ | 0. Typing term (WrapBase1).wrap
//│ | | 0. Typing term WrapBase1
//│ | | 0. : WrapBase1<>
//│ | | CONSTRAIN WrapBase1<> <! {wrap: wrap152}
//│ | |   where 
//│ | | 0. C WrapBase1<> <! {wrap: wrap152}    (0)
//│ | | | TypedNuCls(0,namespace WrapBase1(): WrapBase, Wrap {},TypedTypingUnit(List(),None),List(),Map(wrap -> TypedNuFun(1,fun wrap = (x,) => '(' (super).wrap (x,), ')',‹∀ 2. wrap120_140'''#›)))
//│ | | | (>>,0,1)
//│ | | | 2. FRESHEN ‹∀ 2. wrap120_140'''#› || 1 .. 1024  2 false
//│ | | | | 2. FRESHEN wrap120_140'''# || 1 .. 2  3 false
//│ | | | | | 2. FRESHEN (x121_141''' -> (α124_143''',)) || 1 .. 2  3 false
//│ | | | | | | 2. FRESHEN (x121_141''',) || 1 .. 2  3 false
//│ | | | | | | | 2. FRESHEN x121_141''' || 1 .. 2  3 false
//│ | | | | | | | | 2. FRESHEN x121_142'' || 1 .. 2  2 false
//│ | | | | | | | | | New skolem: x121_142'' ~> ‘x155''
//│ | | | | | | | | | 2. FRESHEN x121_149' || 1 .. 2  1 true
//│ | | | | | | | | | => x121_149'
//│ | | | | | | | | | x121_156'' :> List((‘x155'' & x121_149'))
//│ | | | | | | | | | x121_156'' <: List(‘x155'')
//│ | | | | | | | | => x121_156''
//│ | | | | | | | => x121_154'''
//│ | | | | | | => (x121_154''',)
//│ | | | | | | 2. FRESHEN (α124_143''',) || 1 .. 2  3 false
//│ | | | | | | | 2. FRESHEN α124_143''' || 1 .. 2  3 false
//│ | | | | | | | | 2. FRESHEN α124_144'' || 1 .. 2  2 false
//│ | | | | | | | | | New skolem: α124_144'' ~> ‘_158''
//│ | | | | | | | | | α124_159'' :> List(‘_158'')
//│ | | | | | | | | | 2. FRESHEN α124_151' || 1 .. 2  1 true
//│ | | | | | | | | | => α124_151'
//│ | | | | | | | | | α124_159'' <: List((‘_158'' | α124_151'))
//│ | | | | | | | | => α124_159''
//│ | | | | | | | => α124_157'''
//│ | | | | | | => (α124_157''',)
//│ | | | | | => (x121_154''' -> (α124_157''',))
//│ | | | | => wrap120_153'''#
//│ | | | => ‹∀ 2. wrap120_153'''#›
//│ | | | TypedNuCls(0,namespace WrapBase1(): WrapBase, Wrap {},TypedTypingUnit(List(),None),List(),Map(wrap -> TypedNuFun(1,fun wrap = (x,) => '(' (super).wrap (x,), ')',‹∀ 2. wrap120_153'''#›)))
//│ | | | List(
//│ 		wrap120_153'''# := (x121_154''' -> (α124_157''',))
//│ 		x121_154''' <: x121_156''
//│ 		x121_156'' :> (‘x155'' & x121_149') <: ‘x155''
//│ 		α124_157''' :> α124_159''
//│ 		α124_159'' :> ‘_158'' <: (‘_158'' | α124_151'))
//│ | | | (wrap,Map(wrap -> TypedNuFun(1,fun wrap = (x,) => '(' (super).wrap (x,), ')',‹∀ 2. wrap120_153'''#›)))
//│ | | | 0. C ‹∀ 2. wrap120_153'''#› <! wrap152    (1)
//│ | | | | wrong level: 2
//│ | | | | LHS bounds  
//│ 		wrap120_153'''# := (x121_154''' -> (α124_157''',))
//│ 		x121_154''' <: x121_156''
//│ 		x121_156'' :> (‘x155'' & x121_149') <: ‘x155''
//│ 		α124_157''' :> α124_159''
//│ 		α124_159'' :> ‘_158'' <: (‘_158'' | α124_151')
//│ | | | | RECONSTRAINING TVs
//│ | | | | EXTR LHS  ~>  ‹∀ 2. wrap120_160'''#›  to 0
//│ | | | |  where 
//│ 		wrap120_160'''# := (x121_161''' -> (α124_163''',))
//│ 		x121_161''' <: x121_162
//│ 		x121_162 <: ⊥
//│ 		α124_163''' :> α124_164
//│ 		α124_164 :> ⊤
//│ | | | | 0. C ‹∀ 2. wrap120_160'''#› <! wrap152    (4)
//│ | | | | | NEW wrap152 LB (0)
//│ | 0. : wrap152
//│ ⬤ Typed as: ‹∀ 0. wrap152›
//│  where: 
//│ 		wrap152 :> ‹∀ 2. wrap120_160'''#›
//│ 		wrap120_160'''# := (x121_161''' -> (α124_163''',))
//│ 		x121_161''' <: x121_162
//│ 		x121_162 <: ⊥
//│ 		α124_163''' :> α124_164
//│ 		α124_164 :> ⊤
//│ Typed: nothing -> (anything,)

:d
WrapBase1.wrap
//│ 0. Typing TypingUnit(List((WrapBase1).wrap))
//│ | 0. Typing term (WrapBase1).wrap
//│ | | 0. Typing term WrapBase1
//│ | | 0. : WrapBase1<>
//│ | | CONSTRAIN WrapBase1<> <! {wrap: wrap171}
//│ | |   where 
//│ | | 0. C WrapBase1<> <! {wrap: wrap171}    (0)
//│ | | | TypedNuCls(0,namespace WrapBase1(): WrapBase, Wrap {},TypedTypingUnit(List(),None),List(),Map(wrap -> TypedNuFun(1,fun wrap = (x,) => '(' (super).wrap (x,), ')',‹∀ 2. wrap120_140'''#›)))
//│ | | | (>>,0,1)
//│ | | | 2. FRESHEN ‹∀ 2. wrap120_140'''#› || 1 .. 1024  2 false
//│ | | | | 2. FRESHEN wrap120_140'''# || 1 .. 2  3 false
//│ | | | | | 2. FRESHEN (x121_141''' -> (α124_143''',)) || 1 .. 2  3 false
//│ | | | | | | 2. FRESHEN (x121_141''',) || 1 .. 2  3 false
//│ | | | | | | | 2. FRESHEN x121_141''' || 1 .. 2  3 false
//│ | | | | | | | | 2. FRESHEN x121_142'' || 1 .. 2  2 false
//│ | | | | | | | | | New skolem: x121_142'' ~> ‘x174''
//│ | | | | | | | | | 2. FRESHEN x121_149' || 1 .. 2  1 true
//│ | | | | | | | | | => x121_149'
//│ | | | | | | | | | x121_175'' :> List((‘x174'' & x121_149'))
//│ | | | | | | | | | x121_175'' <: List(‘x174'')
//│ | | | | | | | | => x121_175''
//│ | | | | | | | => x121_173'''
//│ | | | | | | => (x121_173''',)
//│ | | | | | | 2. FRESHEN (α124_143''',) || 1 .. 2  3 false
//│ | | | | | | | 2. FRESHEN α124_143''' || 1 .. 2  3 false
//│ | | | | | | | | 2. FRESHEN α124_144'' || 1 .. 2  2 false
//│ | | | | | | | | | New skolem: α124_144'' ~> ‘_177''
//│ | | | | | | | | | α124_178'' :> List(‘_177'')
//│ | | | | | | | | | 2. FRESHEN α124_151' || 1 .. 2  1 true
//│ | | | | | | | | | => α124_151'
//│ | | | | | | | | | α124_178'' <: List((‘_177'' | α124_151'))
//│ | | | | | | | | => α124_178''
//│ | | | | | | | => α124_176'''
//│ | | | | | | => (α124_176''',)
//│ | | | | | => (x121_173''' -> (α124_176''',))
//│ | | | | => wrap120_172'''#
//│ | | | => ‹∀ 2. wrap120_172'''#›
//│ | | | TypedNuCls(0,namespace WrapBase1(): WrapBase, Wrap {},TypedTypingUnit(List(),None),List(),Map(wrap -> TypedNuFun(1,fun wrap = (x,) => '(' (super).wrap (x,), ')',‹∀ 2. wrap120_172'''#›)))
//│ | | | List(
//│ 		wrap120_172'''# := (x121_173''' -> (α124_176''',))
//│ 		x121_173''' <: x121_175''
//│ 		x121_175'' :> (‘x174'' & x121_149') <: ‘x174''
//│ 		α124_176''' :> α124_178''
//│ 		α124_178'' :> ‘_177'' <: (‘_177'' | α124_151'))
//│ | | | (wrap,Map(wrap -> TypedNuFun(1,fun wrap = (x,) => '(' (super).wrap (x,), ')',‹∀ 2. wrap120_172'''#›)))
//│ | | | 0. C ‹∀ 2. wrap120_172'''#› <! wrap171    (1)
//│ | | | | wrong level: 2
//│ | | | | LHS bounds  
//│ 		wrap120_172'''# := (x121_173''' -> (α124_176''',))
//│ 		x121_173''' <: x121_175''
//│ 		x121_175'' :> (‘x174'' & x121_149') <: ‘x174''
//│ 		α124_176''' :> α124_178''
//│ 		α124_178'' :> ‘_177'' <: (‘_177'' | α124_151')
//│ | | | | RECONSTRAINING TVs
//│ | | | | EXTR LHS  ~>  ‹∀ 2. wrap120_179'''#›  to 0
//│ | | | |  where 
//│ 		wrap120_179'''# := (x121_180''' -> (α124_182''',))
//│ 		x121_180''' <: x121_181
//│ 		x121_181 <: ⊥
//│ 		α124_182''' :> α124_183
//│ 		α124_183 :> ⊤
//│ | | | | 0. C ‹∀ 2. wrap120_179'''#› <! wrap171    (4)
//│ | | | | | NEW wrap171 LB (0)
//│ | 0. : wrap171
//│ ⬤ Typed as: ‹∀ 0. wrap171›
//│  where: 
//│ 		wrap171 :> ‹∀ 2. wrap120_179'''#›
//│ 		wrap120_179'''# := (x121_180''' -> (α124_182''',))
//│ 		x121_180''' <: x121_181
//│ 		x121_181 <: ⊥
//│ 		α124_182''' :> α124_183
//│ 		α124_183 :> ⊤
//│ Typed: nothing -> (anything,)

WrapBase1.wrap(1)
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.533: 	WrapBase1.wrap(1)
//│ ║         	^^^^^^^^^^^^^^^^^
//│ ╟── integer literal of type `1` does not match type `nothing`
//│ ║  l.533: 	WrapBase1.wrap(1)
//│ ╙──       	               ^
//│ Typed: (anything,) | error

// FIXME
WrapBase1.wrap("ok")
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.543: 	WrapBase1.wrap("ok")
//│ ║         	^^^^^^^^^^^^^^^^^^^^
//│ ╟── string literal of type `"ok"` does not match type `nothing`
//│ ║  l.543: 	WrapBase1.wrap("ok")
//│ ╙──       	               ^^^^
//│ Typed: (anything,) | error


module WrapBase2: WrapBase, Wrap, Wrap
//│ class WrapBase2

// FIXME
WrapBase2.wrap
//│ Typed: 'a -> ('a,)


