:NewParser
:NewDefs
:NoJS


class Foo()
123
//│ class Foo
//│ Typed: 123

Foo
//│ Typed: () -> Foo

fun fooo(x) =
  class C(y, z)
  C(0, x)
//│ fun fooo: ‹∀ 0. fooo26'#› where 
//│ |		fooo26'# := (α27' -> α35')
//│ |		α35' :> C<>
//│ [pretty-printed] fooo: anything -> C



module Test0_1 {
  fun a = Test0_2.b
}
module Test0_2 {
  fun b = 123
}
//│ class Test0_1
//│   fun a: ‹∀ 1. a44''#› where 
//│   |		a44''# := b49''
//│   |		b48''# := 123<int,number>
//│   |		b49'' :> ‹∀ 1. b48''#› <: a44''#
//│   [pretty-printed] a: 123
//│ class Test0_2
//│   fun b: ‹∀ 1. b48''#› where 
//│   |		b48''# := 123<int,number>
//│   [pretty-printed] b: 123

Test0_1.a
//│ Typed: 123


module Test1_1 {
  fun a = Test1_2.b
}
module Test1_2 {
  fun b = Test1_1.a
}
//│ class Test1_1
//│   fun a: ‹∀ 1. a66''#› where 
//│   |		a66''# := b73''
//│   |		b70''# := a71''
//│   |		a71'' :> a71_72 <: b70''#
//│   |		b73'' :> ‹∀ 1. b70''#› <: a66''#
//│   [pretty-printed] a: nothing
//│ class Test1_2
//│   fun b: ‹∀ 1. b70''#› where 
//│   |		b70''# := a71''
//│   |		a71'' :> a71_72 <: b70''#
//│   [pretty-printed] b: nothing

Test1_1.a
//│ Typed: nothing


// TODO check TV hygiene
module Test2_1 {
  fun t2 = Test2_2
  fun a = Test2_2.b
  fun d = Test2_2.e
  fun n = 456
}
module Test2_2 {
  fun b = 123
  fun c = Test2_1.a
  fun e = Test2_1.n
}
//│ class Test2_1
//│   fun t2: ‹∀ 1. t299''#› where 
//│   |		t299''# := Test2_2<>
//│   [pretty-printed] t2: Test2_2
//│   fun a: ‹∀ 1. a112''#› where 
//│   |		b105''# := 123<int,number>
//│   |		a112''# := b113''
//│   |		b113'' :> ‹∀ 1. b105''#› <: a112''#
//│   [pretty-printed] a: 123
//│   fun d: ‹∀ 1. d117''#› where 
//│   |		e109''# := n110''
//│   |		n110'' :> n110_111 <: e109''#
//│   |		d117''# := e118''
//│   |		e118'' :> ‹∀ 1. e109''#› <: d117''#
//│   [pretty-printed] d: nothing
//│   fun n: ‹∀ 1. n122''#› where 
//│   |		n122''# := 456<int,number>
//│   [pretty-printed] n: 456
//│ class Test2_2
//│   fun b: ‹∀ 1. b105''#› where 
//│   |		b105''# := 123<int,number>
//│   [pretty-printed] b: 123
//│   fun c: ‹∀ 1. c106''#› where 
//│   |		c106''# := a107''
//│   |		a107'' :> a107_108 <: c106''#
//│   [pretty-printed] c: nothing
//│   fun e: ‹∀ 1. e109''#› where 
//│   |		e109''# := n110''
//│   |		n110'' :> n110_111 <: e109''#
//│   [pretty-printed] e: nothing

Test2_1.t2.b
//│ Typed: 123

Test2_1.a
//│ Typed: 123

// FIXME
Test2_1.d
//│ Typed: nothing

Test2_1.n
//│ Typed: 456

