:NewParser
:NewDefs
:NoJS


class Foo()
123
//│ class Foo
//│ Typed: 123

Foo
//│ Typed: () -> Foo

fun fooo(x) =
  class C(y, z)
  C(0, x)
//│ fun fooo: ‹∀ 0. fooo26'#› where 
//│ |		fooo26'# := (α27' -> α35')
//│ |		α27' <: z30_34'
//│ |		α35' :> C<>
//│ [pretty-printed] fooo: anything -> C



// TODO
// :d
namespace Test0_1 {
  fun a = Test0_2.b
}
namespace Test0_2 {
  fun a = 123
}
//│ ╔══[ERROR] namespace `Test0_2` does not contain member `b`
//│ ║  l.28: 	  fun a = Test0_2.b
//│ ╙──      	                 ^^
//│ class Test0_1
//│   fun a: ‹∀ 1. a45''#› where 
//│   |		a45''# := b50''
//│   |		b50'' :> error<> | error<> <: a45''#
//│   [pretty-printed] a: error
//│ class Test0_2
//│   fun a: ‹∀ 1. a49''#› where 
//│   |		a49''# := 123<int,number>
//│   [pretty-printed] a: 123

// TODO
// :d
namespace Test1_1 {
  fun a = Test1_2.b
}
namespace Test1_2 {
  fun a = Test1_1.a
}
//│ ╔══[ERROR] namespace `Test1_2` does not contain member `b`
//│ ║  l.49: 	  fun a = Test1_2.b
//│ ╙──      	                 ^^
//│ class Test1_1
//│   fun a: ‹∀ 1. a60''#› where 
//│   |		a60''# := b67''
//│   |		b67'' :> error<> | error<> <: a60''#
//│   [pretty-printed] a: error
//│ class Test1_2
//│   fun a: ‹∀ 1. a64''#› where 
//│   |		a64''# := a65''
//│   |		a65'' :> a65_66 <: a64''#
//│   [pretty-printed] a: nothing


// TODO
namespace Test2_1 {
  fun t2 = Test2_2
  fun a = Test2_2.b
  fun d = Test2_2.e
}
namespace Test2_2 {
  fun b = 123
  fun c = Test2_1.a
  fun e = Test2_1.d
}
//│ class Test2_1
//│   fun t2: ‹∀ 1. t281''#› where 
//│   |		t281''# := Test2_2<>
//│   [pretty-printed] t2: Test2_2
//│   fun a: ‹∀ 1. a94''#› where 
//│   |		b87''# := 123<int,number>
//│   |		a94''# := b95''
//│   |		b95'' :> ‹∀ 1. b87''#› <: a94''#
//│   [pretty-printed] a: 123
//│   fun d: ‹∀ 1. d99''#› where 
//│   |		e91''# := d92''
//│   |		d92'' :> d92_93 <: e91''#
//│   |		d99''# := e100''
//│   |		e100'' :> ‹∀ 1. e91''#› <: d99''#
//│   [pretty-printed] d: nothing
//│ class Test2_2
//│   fun b: ‹∀ 1. b87''#› where 
//│   |		b87''# := 123<int,number>
//│   [pretty-printed] b: 123
//│   fun c: ‹∀ 1. c88''#› where 
//│   |		c88''# := a89''
//│   |		a89'' :> a89_90 <: c88''#
//│   [pretty-printed] c: nothing
//│   fun e: ‹∀ 1. e91''#› where 
//│   |		e91''# := d92''
//│   |		d92'' :> d92_93 <: e91''#
//│   [pretty-printed] e: nothing


