:NewParser
:NewDefs
:NoJS



class Foo()
123
//│ 
//│ class Foo() {
//│ this: 'this
//│ }
//│ 123
//│   where
//│     'this :> Foo
//│ Typed: 123

Foo
//│ 
//│ () -> Foo
//│ Typed: () -> Foo

fun fooo(x) =
  class C(y, z)
  C(0, x)
//│ 
//│ fun fooo: 'a -> 'b
//│   where
//│     'b :> C
//│     'a <: 'z



fun foo = bar
fun bar = foo
//│ 
//│ fun foo: 'foo
//│ fun bar: 'foo
//│   where
//│     'foo <: 'bar

foo(bar)
//│ 
//│ 'a
//│ Typed: nothing


fun foo = {x: foo}
//│ 
//│ fun foo: {x: 'foo}
//│   where
//│     'foo :> {x: 'foo}


fun foo = {x: bar}
fun bar = {y: foo}
//│ 
//│ fun foo: {x: {y: 'foo}}
//│ fun bar: {y: 'foo}
//│   where
//│     'foo :> {x: {y: 'foo}}

// FIXME pretty-printing?
foo
//│ 
//│ {x: {y: 'foo}}
//│   where
//│     'foo :> {x: {y: 'foo}}
//│ Typed: 'foo
//│   where
//│     'foo :> {x: {y: 'foo}}

:ns
foo
//│ 
//│ {x: {y: 'foo}}
//│   where
//│     'foo :> {x: {y: 'foo}}
//│ Typed: forall 'foo. {x: {y: 'foo}}
//│   where
//│     'foo :> {x: {y: 'foo}}

foo.x
//│ 
//│ 'x
//│   where
//│     'x :> {y: 'foo}
//│     'foo :> {x: {y: 'foo}}
//│ Typed: 'x
//│   where
//│     'x :> {y: {x: 'x}}

foo.x.y
//│ 
//│ 'y
//│   where
//│     'y :> {x: {y: 'foo}}
//│     'foo :> {x: {y: 'foo}}
//│          <: 'y
//│ Typed: 'foo
//│   where
//│     'foo :> {x: {y: 'foo}}


fun foo(a) = {h: a, t: bar(a)}
fun bar(b) = foo(b)
//│ 
//│ fun foo: 'a -> {h: 'a, t: 'b}
//│ fun bar: 'c -> 'd
//│   where
//│     'd :> {h: 'a, t: 'b}
//│        <: 'b
//│     'b :> {h: 'a, t: 'b}
//│     'a <: 'c
//│     'c <: 'a

:ns
foo
//│ 
//│ 'a -> {h: 'a, t: 'b}
//│   where
//│     'b :> {h: 'a, t: 'b}
//│     'a <: 'c
//│     'c <: 'a
//│ Typed: forall 'a 'b 'c. 'a -> {h: 'a, t: 'c}
//│   where
//│     'c :> {h: 'a, t: 'c}
//│     'a <: 'b
//│     'b <: 'a


fun foo(a) = {h1: a, t1: bar(a)}
fun bar(b) = {h2: b, t2: foo(b)}
//│ 
//│ fun foo: 'a -> {h1: 'a, t1: 'b}
//│ fun bar: 'c -> {h2: 'c, t2: 'd}
//│   where
//│     'b :> {h2: 'c, t2: 'd}
//│     'd :> {h1: 'a, t1: 'b}
//│     'a <: 'c
//│     'c <: 'a



module Test0_1 {
  fun a = Test0_2.b
}
module Test0_2 {
  fun b = 123
}
//│ 
//│ namespace Test0_1() {
//│ this: 'this
//│ fun a: 'b
//│ }
//│ namespace Test0_2() {
//│ this: 'this0
//│ fun b: 123
//│ }
//│   where
//│     'this0 :> Test0_2
//│     'b :> 123
//│        <: 'a
//│     'a :> 123
//│     'this :> Test0_1

Test0_1.a
//│ 
//│ 'a
//│   where
//│     'a :> 123
//│ Typed: 123

class Test0_1 {
  fun a = Test0_2().b
}
class Test0_2() {
  fun b = 123
}
//│ 
//│ class Test0_1() {
//│ this: 'this
//│ fun a: 'b
//│ }
//│ class Test0_2() {
//│ this: 'this0
//│ fun b: 123
//│ }
//│   where
//│     'this0 :> Test0_2
//│     'b :> 123
//│        <: 'a
//│     'a :> 123
//│     'this :> Test0_1


:e // TODO
module Test1_1 {
  fun a = Test1_2.b
}
module Test1_2 {
  fun b = Test1_1.a
}
//│ ╔══[ERROR] Cyclic definition
//│ ║  l.198: 	module Test1_1 {
//│ ║         	^^^^^^^^^^^^^^^^
//│ ║  l.199: 	  fun a = Test1_2.b
//│ ║         	^^^^^^^^^^^^^^^^^^^
//│ ║  l.200: 	}
//│ ╙──       	^
//│ 
//│ namespace Test1_1() {
//│ this: 'this
//│ fun a: 'b
//│ }
//│ namespace Test1_2() {
//│ this: 'this0
//│ fun b: 'a
//│ }
//│   where
//│     'a :> error
//│        <: 'b0
//│     'b0 :> error
//│     'this0 :> Test1_2
//│     'b :> error
//│        <: 'a0
//│     'a0 :> error
//│     'this :> Test1_1

Test1_1.a
//│ 
//│ 'a
//│   where
//│     'a :> error
//│ Typed: error


:e // TODO
class Test1_1 {
  fun a = Test1_2().b
}
class Test1_2 {
  fun b = Test1_1().a
}
//│ ╔══[ERROR] Cyclic definition
//│ ║  l.239: 	class Test1_1 {
//│ ║         	^^^^^^^^^^^^^^^
//│ ║  l.240: 	  fun a = Test1_2().b
//│ ║         	^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.241: 	}
//│ ╙──       	^
//│ 
//│ class Test1_1() {
//│ this: 'this
//│ fun a: 'b
//│ }
//│ class Test1_2() {
//│ this: 'this0
//│ fun b: 'a
//│ }
//│   where
//│     'a :> error
//│        <: 'b0
//│     'b0 :> error
//│     'this0 :> Test1_2
//│     'b :> error
//│        <: 'a0
//│     'a0 :> error
//│     'this :> Test1_1


// TODO check TV hygiene
module Test2_1 {
  fun t2 = Test2_2
  fun a = Test2_2.b
  fun d = Test2_2.e
  fun n = 456
}
module Test2_2 {
  fun b = 123
  fun c = Test2_1.a
  fun e = Test2_1.n
}
//│ ╔══[ERROR] Cyclic definition
//│ ║  l.273: 	module Test2_1 {
//│ ║         	^^^^^^^^^^^^^^^^
//│ ║  l.274: 	  fun t2 = Test2_2
//│ ║         	^^^^^^^^^^^^^^^^^^
//│ ║  l.275: 	  fun a = Test2_2.b
//│ ║         	^^^^^^^^^^^^^^^^^^^
//│ ║  l.276: 	  fun d = Test2_2.e
//│ ║         	^^^^^^^^^^^^^^^^^^^
//│ ║  l.277: 	  fun n = 456
//│ ║         	^^^^^^^^^^^^^
//│ ║  l.278: 	}
//│ ╙──       	^
//│ ╔══[ERROR] Cyclic definition
//│ ║  l.273: 	module Test2_1 {
//│ ║         	^^^^^^^^^^^^^^^^
//│ ║  l.274: 	  fun t2 = Test2_2
//│ ║         	^^^^^^^^^^^^^^^^^^
//│ ║  l.275: 	  fun a = Test2_2.b
//│ ║         	^^^^^^^^^^^^^^^^^^^
//│ ║  l.276: 	  fun d = Test2_2.e
//│ ║         	^^^^^^^^^^^^^^^^^^^
//│ ║  l.277: 	  fun n = 456
//│ ║         	^^^^^^^^^^^^^
//│ ║  l.278: 	}
//│ ╙──       	^
//│ 
//│ namespace Test2_1() {
//│ this: 'this
//│ fun a: 'b
//│ fun d: 'e
//│ fun n: 456
//│ fun t2: Test2_2
//│ }
//│ namespace Test2_2() {
//│ this: 'this0
//│ fun b: 123
//│ fun c: 'a
//│ fun e: 'n
//│ }
//│   where
//│     'n :> error
//│        <: 'e0
//│     'e0 :> error
//│     'a :> error
//│        <: 'c
//│     'c :> error
//│     'this0 :> Test2_2
//│     'e :> error
//│        <: 'd
//│     'd :> error
//│     'b :> 123
//│        <: 'a0
//│     'a0 :> 123
//│     'this :> Test2_1

Test2_1.t2.b
//│ 
//│ 'b
//│   where
//│     'b :> 123
//│ Typed: 123

Test2_1.a
//│ 
//│ 'a
//│   where
//│     'a :> 123
//│ Typed: 123

// FIXME
Test2_1.d
//│ 
//│ 'd
//│   where
//│     'd :> error
//│ Typed: error

Test2_1.n
//│ 
//│ 'n
//│   where
//│     'n :> 456
//│ Typed: 456

