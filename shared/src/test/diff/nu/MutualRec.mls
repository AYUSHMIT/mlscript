:NewParser
:NewDefs
:NoJS



class Foo()
123
//│ class Foo
//│ Typed: 123

Foo
//│ Typed: () -> Foo

fun fooo(x) =
  class C(y, z)
  C(0, x)
//│ fun fooo: (α26' -> α34') where 
//│ |		α26' <: z29_36'
//│ |		α34' :> C<>
//│ [pretty-printed] fooo: anything -> C



fun foo = bar
fun bar = foo
//│ fun foo: foo40' where 
//│ |		foo40' <: bar41'
//│ [pretty-printed] foo: nothing
//│ fun bar: foo40' where 
//│ |		foo40' <: bar41'
//│ [pretty-printed] bar: nothing

foo(bar)
//│ Typed: nothing


fun foo = {x: foo}
//│ fun foo: {x: foo46'} where 
//│ |		foo46' :> {x: foo46'}
//│ [pretty-printed] foo: 'foo
//│ |  where
//│ |    'foo :> {x: 'foo}


fun foo = {x: bar}
fun bar = {y: foo}
//│ fun foo: {x: {y: foo50'}} where 
//│ |		foo50' :> {x: {y: foo50'}}
//│ [pretty-printed] foo: 'foo
//│ |  where
//│ |    'foo :> {x: {y: 'foo}}
//│ fun bar: {y: foo50'} where 
//│ |		foo50' :> {x: {y: foo50'}}
//│ [pretty-printed] bar: {y: 'foo}
//│ |  where
//│ |    'foo :> {x: {y: 'foo}}

// FIXME pretty-printing?
foo
//│ Typed: 'foo
//│   where
//│     'foo :> {x: {y: 'foo}}

:ns
foo
//│ Typed: forall 'foo. {x: {y: 'foo}}
//│   where
//│     'foo :> {x: {y: 'foo}}

foo.x
//│ Typed: 'x
//│   where
//│     'x :> {y: {x: 'x}}

foo.x.y
//│ Typed: 'foo
//│   where
//│     'foo :> {x: {y: 'foo}}


fun foo(a) = {h: a, t: bar(a)}
fun bar(b) = foo(b)
//│ fun foo: (α76' -> {h: α76', t: α79'}) where 
//│ |		α76' <: α77'
//│ |		α77' <: α76'
//│ |		α79' :> {h: α76', t: α79'}
//│ [pretty-printed] foo: 'a -> 'b
//│ |  where
//│ |    'b :> {h: 'a, t: 'b}
//│ fun bar: (α77' -> α78') where 
//│ |		α76' <: α77'
//│ |		α77' <: α76'
//│ |		α78' :> {h: α76', t: α79'} <: α79'
//│ |		α79' :> {h: α76', t: α79'}
//│ [pretty-printed] bar: 'a -> 'b
//│ |  where
//│ |    'b :> {h: 'a, t: 'b}

:ns
foo
//│ Typed: forall 'a 'b 'c. 'a -> {h: 'a, t: 'c}
//│   where
//│     'c :> {h: 'a, t: 'c}
//│     'a <: 'b
//│     'b <: 'a


fun foo(a) = {h1: a, t1: bar(a)}
fun bar(b) = {h2: b, t2: foo(b)}
//│ fun foo: (α97' -> {h1: α97', t1: α100'}) where 
//│ |		α97' <: α98'
//│ |		α98' <: α97'
//│ |		α99' :> {h1: α97', t1: α100'}
//│ |		α100' :> {h2: α98', t2: α99'}
//│ [pretty-printed] foo: 'a -> 'b
//│ |  where
//│ |    'b :> {h1: 'a, t1: {h2: 'a, t2: 'b}}
//│ fun bar: (α98' -> {h2: α98', t2: α99'}) where 
//│ |		α97' <: α98'
//│ |		α98' <: α97'
//│ |		α99' :> {h1: α97', t1: α100'}
//│ |		α100' :> {h2: α98', t2: α99'}
//│ [pretty-printed] bar: 'a -> 'b
//│ |  where
//│ |    'b :> {h2: 'a, t2: {h1: 'a, t1: 'b}}



module Test0_1 {
  fun a = Test0_2.b
}
module Test0_2 {
  fun b = 123
}
//│ class Test0_1
//│   fun a: b125'' where 
//│   |		a121'' :> 123<int,number>
//│   |		b125'' :> 123<int,number> <: a121''
//│   [pretty-printed] a: 123
//│ class Test0_2
//│   fun b: 123<int,number> where 
//│   [pretty-printed] b: 123

Test0_1.a
//│ Typed: 123

class Test0_1 {
  fun a = Test0_2().b
}
class Test0_2() {
  fun b = 123
}
//│ class Test0_1
//│   fun a: b143'' where 
//│   |		a137'' :> 123<int,number>
//│   |		b143'' :> 123<int,number> <: a137''
//│   [pretty-printed] a: 123
//│ class Test0_2
//│   fun b: 123<int,number> where 
//│   [pretty-printed] b: 123


:e // TODO
module Test1_1 {
  fun a = Test1_2.b
}
module Test1_2 {
  fun b = Test1_1.a
}
//│ ╔══[ERROR] Cyclic definition
//│ ║  l.165: 	module Test1_1 {
//│ ║         	^^^^^^^^^^^^^^^^
//│ ║  l.166: 	  fun a = Test1_2.b
//│ ║         	^^^^^^^^^^^^^^^^^^^
//│ ║  l.167: 	}
//│ ╙──       	^
//│ class Test1_1
//│   fun a: b155'' where 
//│   |		a150'' :> error<>
//│   |		b155'' :> error<> <: a150''
//│   [pretty-printed] a: error
//│ class Test1_2
//│   fun b: a154'' where 
//│   |		b153'' :> error<>
//│   |		a154'' :> error<> <: b153''
//│   [pretty-printed] b: error

Test1_1.a
//│ Typed: error


:e // TODO
class Test1_1 {
  fun a = Test1_2().b
}
class Test1_2 {
  fun b = Test1_1().a
}
//│ ╔══[ERROR] Cyclic definition
//│ ║  l.194: 	class Test1_1 {
//│ ║         	^^^^^^^^^^^^^^^
//│ ║  l.195: 	  fun a = Test1_2().b
//│ ║         	^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.196: 	}
//│ ╙──       	^
//│ class Test1_1
//│   fun a: b180'' where 
//│   |		a170'' :> error<>
//│   |		b180'' :> error<> <: a170''
//│   [pretty-printed] a: error
//│ class Test1_2
//│   fun b: a175'' where 
//│   |		b173'' :> error<>
//│   |		a175'' :> error<> <: b173''
//│   [pretty-printed] b: error


// TODO check TV hygiene
module Test2_1 {
  fun t2 = Test2_2
  fun a = Test2_2.b
  fun d = Test2_2.e
  fun n = 456
}
module Test2_2 {
  fun b = 123
  fun c = Test2_1.a
  fun e = Test2_1.n
}
//│ ╔══[ERROR] Cyclic definition
//│ ║  l.220: 	module Test2_1 {
//│ ║         	^^^^^^^^^^^^^^^^
//│ ║  l.221: 	  fun t2 = Test2_2
//│ ║         	^^^^^^^^^^^^^^^^^^
//│ ║  l.222: 	  fun a = Test2_2.b
//│ ║         	^^^^^^^^^^^^^^^^^^^
//│ ║  l.223: 	  fun d = Test2_2.e
//│ ║         	^^^^^^^^^^^^^^^^^^^
//│ ║  l.224: 	  fun n = 456
//│ ║         	^^^^^^^^^^^^^
//│ ║  l.225: 	}
//│ ╙──       	^
//│ ╔══[ERROR] Cyclic definition
//│ ║  l.220: 	module Test2_1 {
//│ ║         	^^^^^^^^^^^^^^^^
//│ ║  l.221: 	  fun t2 = Test2_2
//│ ║         	^^^^^^^^^^^^^^^^^^
//│ ║  l.222: 	  fun a = Test2_2.b
//│ ║         	^^^^^^^^^^^^^^^^^^^
//│ ║  l.223: 	  fun d = Test2_2.e
//│ ║         	^^^^^^^^^^^^^^^^^^^
//│ ║  l.224: 	  fun n = 456
//│ ║         	^^^^^^^^^^^^^
//│ ║  l.225: 	}
//│ ╙──       	^
//│ class Test2_1
//│   fun t2: Test2_2<> where 
//│   [pretty-printed] t2: Test2_2
//│   fun a: b201'' where 
//│   |		a191'' :> 123<int,number>
//│   |		b201'' :> 123<int,number> <: a191''
//│   [pretty-printed] a: 123
//│   fun d: e209'' where 
//│   |		d192'' :> error<>
//│   |		e209'' :> error<> <: d192''
//│   [pretty-printed] d: error
//│   fun n: 456<int,number> where 
//│   [pretty-printed] n: 456
//│ class Test2_2
//│   fun b: 123<int,number> where 
//│   [pretty-printed] b: 123
//│   fun c: a199'' where 
//│   |		c197'' :> error<>
//│   |		a199'' :> error<> <: c197''
//│   [pretty-printed] c: error
//│   fun e: n200'' where 
//│   |		e198'' :> error<>
//│   |		n200'' :> error<> <: e198''
//│   [pretty-printed] e: error

Test2_1.t2.b
//│ Typed: 123

Test2_1.a
//│ Typed: 123

// FIXME
Test2_1.d
//│ Typed: error

Test2_1.n
//│ Typed: 456

