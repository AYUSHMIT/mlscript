:NewDefs
:NoJS


let res = code"let x = code"1" in code"y => ${x} + 1""
//│ ╔══[ERROR] Nested quotation is not allowed.
//│ ║  l.5: 	let res = code"let x = code"1" in code"y => ${x} + 1""
//│ ╙──     	                       ^^^^^^^
//│ TEST CASE FAILURE: There was an unexpected type error
//│ ╔══[ERROR] Nested quotation is not allowed.
//│ ║  l.5: 	let res = code"let x = code"1" in code"y => ${x} + 1""
//│ ╙──     	                                  ^^^^^^^^^^^^^^^^^^^
//│ TEST CASE FAILURE: There was an unexpected type error
//│ let res: Code[error, nothing]

run(run(res))(0)
//│ nothing

let t = code"let x = code"2" in code"${x}""
//│ ╔══[ERROR] Nested quotation is not allowed.
//│ ║  l.19: 	let t = code"let x = code"2" in code"${x}""
//│ ╙──      	                     ^^^^^^^
//│ TEST CASE FAILURE: There was an unexpected type error
//│ ╔══[ERROR] Nested quotation is not allowed.
//│ ║  l.19: 	let t = code"let x = code"2" in code"${x}""
//│ ╙──      	                                ^^^^^^^^^^
//│ TEST CASE FAILURE: There was an unexpected type error
//│ let t: Code[error, nothing]
let res = run(t)
//│ let res: error
run(res)
//│ nothing

let res = code"let x = code"2" in let y = code"3" in x"
//│ ╔══[ERROR] Nested quotation is not allowed.
//│ ║  l.34: 	let res = code"let x = code"2" in let y = code"3" in x"
//│ ╙──      	                       ^^^^^^^
//│ TEST CASE FAILURE: There was an unexpected type error
//│ ╔══[ERROR] Nested quotation is not allowed.
//│ ║  l.34: 	let res = code"let x = code"2" in let y = code"3" in x"
//│ ╙──      	                                          ^^^^^^^
//│ TEST CASE FAILURE: There was an unexpected type error
//│ let res: Code[error, nothing]
run(res)
//│ error

let c = code"let y = code"2" in x => y"
//│ ╔══[ERROR] Nested quotation is not allowed.
//│ ║  l.47: 	let c = code"let y = code"2" in x => y"
//│ ╙──      	                     ^^^^^^^
//│ TEST CASE FAILURE: There was an unexpected type error
//│ let c: Code[anything -> error, nothing]

let res = run(c)(0)
//│ let res: error

let res = code"x => x"
//│ let res: Code[forall 'a. 'a -> 'a, nothing]
run(res)(0)
//│ 0

let y = code"1"
let res = code"""x => x + ${y}"""
//│ let y: Code[1, nothing]
//│ let res: Code[Int -> Int, nothing]

run(res)(3)
//│ Int

let x = code"1"
let res = code"""x => x + ${x}"""
//│ let x: Code[1, nothing]
//│ let res: Code[Int -> Int, nothing]

run(res)(0)
//│ Int

let x = code"2"
//│ let x: Code[2, nothing]

let res = code"""x => (let x = 1 in x + ${x})"""
//│ let res: Code[anything -> Int, nothing]

run(res)("happy")
//│ Int

let c2 = code"let x = code"1" in code"let x = code"2" in ${x}""
//│ ╔══[ERROR] Nested quotation is not allowed.
//│ ║  l.87: 	let c2 = code"let x = code"1" in code"let x = code"2" in ${x}""
//│ ╙──      	                      ^^^^^^^
//│ TEST CASE FAILURE: There was an unexpected type error
//│ ╔══[ERROR] Nested quotation is not allowed.
//│ ║  l.87: 	let c2 = code"let x = code"1" in code"let x = code"2" in ${x}""
//│ ╙──      	                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ TEST CASE FAILURE: There was an unexpected type error
//│ let c2: Code[error, nothing]
let res = run(c2)
//│ let res: error
run(res)
//│ nothing

let x = code"1"
let c3 = code"let x1 = code"100" in let x2 = code"200" in code"let y = 100 in ${x}""
//│ ╔══[ERROR] Nested quotation is not allowed.
//│ ║  l.103: 	let c3 = code"let x1 = code"100" in let x2 = code"200" in code"let y = 100 in ${x}""
//│ ╙──       	                       ^^^^^^^^^
//│ TEST CASE FAILURE: There was an unexpected type error
//│ ╔══[ERROR] Nested quotation is not allowed.
//│ ║  l.103: 	let c3 = code"let x1 = code"100" in let x2 = code"200" in code"let y = 100 in ${x}""
//│ ╙──       	                                             ^^^^^^^^^
//│ TEST CASE FAILURE: There was an unexpected type error
//│ ╔══[ERROR] Nested quotation is not allowed.
//│ ║  l.103: 	let c3 = code"let x1 = code"100" in let x2 = code"200" in code"let y = 100 in ${x}""
//│ ╙──       	                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^
//│ TEST CASE FAILURE: There was an unexpected type error
//│ let x: Code[1, nothing]
//│ let c3: Code[error, nothing]
let res = run(c3)
//│ let res: error
run(res)
//│ nothing


let res = code"x => ${code"x + 1"}"
//│ let res: Code[Int -> Int, nothing]

run(res)(1)
//│ Int


let res = code"x => ${ x }"
run(res)
run(code"x => ${ x }")
//│ let res: Code[forall 'a. 'a -> 'a, nothing]
//│ forall 'b. 'b -> 'b

f => code"x => ${ let tmp = f(x) in x }"
//│ forall 'a 'b. (Var[in 'a out 'a | 'b, in ??x out ??x0] -> anything) -> Code[forall 'c. ('b & 'c) -> ('a | 'c), nothing]

let res = code"x => code"${x}""
//│ ╔══[ERROR] Nested quotation is not allowed.
//│ ║  l.140: 	let res = code"x => code"${x}""
//│ ╙──       	                    ^^^^^^^^^^
//│ TEST CASE FAILURE: There was an unexpected type error
//│ let res: Code[anything -> error, nothing]
run(res)(code"1")
//│ error

code"code"code"x => ${x}"""
//│ ╔══[ERROR] Nested quotation is not allowed.
//│ ║  l.149: 	code"code"code"x => ${x}"""
//│ ╙──       	     ^^^^^^^^^^^^^^^^^^^^^
//│ TEST CASE FAILURE: There was an unexpected type error
//│ Code[error, nothing]

code"x => ${code"${code"${code"x"}"}"}"
//│ Code[forall 'a. 'a -> 'a, nothing]

fun f(cde) = code"x => ${code"${code"${code"x + ${cde}"}"}"}"
run(f(Const(114)))(514)
//│ fun f: forall 'a. Code[Int, 'a] -> Code[Int -> Int, 'a]
//│ Int

fun f(x) = code"${run(x)} + 1"
//│ fun f: forall 'a. Code[Code[Int, 'a], nothing] -> Code[Int, 'a]

code"x => ${code"code"code"${x}"""}"
//│ ╔══[ERROR] Nested quotation is not allowed.
//│ ║  l.167: 	code"x => ${code"code"code"${x}"""}"
//│ ╙──       	                 ^^^^^^^^^^^^^^^^
//│ TEST CASE FAILURE: There was an unexpected type error
//│ Code[anything -> error, nothing]

:e
code"xxx => ${code"code"code"${xxx}"""}"
//│ ╔══[ERROR] Nested quotation is not allowed.
//│ ║  l.175: 	code"xxx => ${code"code"code"${xxx}"""}"
//│ ╙──       	                   ^^^^^^^^^^^^^^^^^^
//│ Code[anything -> error, nothing]
