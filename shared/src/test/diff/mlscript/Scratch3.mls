
:GeneralizeCurriedFunctions

// def foo f x = f x


// def s n = fun f -> fun x -> f (n f x)



def z f x = x
//│ z: anything -> (forall 'a. 'a -> 'a)
//│  = [Function: z]

def s n = fun f -> fun x -> f (n f x)
//│ s: 'a -> (forall 'b. 'b -> (forall 'b, 'c, 'd, 'e. ('c -> 'e
//│   where
//│     'a <: 'b -> 'c -> 'd
//│     'b <: 'd -> 'e)))
//│  = [Function: s]

n1 = s z
//│ n1: 'a -> (forall 'a, 'b, 'c, 'd. ('b -> 'd
//│   where
//│     'e <: 'a -> 'b -> 'c
//│     'a <: 'c -> 'd))
//│   = [Function (anonymous)]

// n2 = s (s z)

// n3 = s (s (s z))

def wrap: 'a -> {x: 'a}
wrap x = { x }
//│ wrap: 'a -> {x: 'a}
//│     = <missing implementation>
//│ 'a -> {x: 'a}
//│   <:  wrap:
//│ 'a -> {x: 'a}
//│     = [Function: wrap]

:d
n1w = n1 wrap
//│ 1. Typing term (n1 (wrap,))   None
//│ | 1. Typing term n1   None
//│ | 1. : ‹∀ 0. α49'›
//│ | 1. Typing term (wrap,)   None
//│ | | 1. Typing term wrap   None
//│ | | 1. : ‹∀ 0. ('a68' -> {x: 'a68'})›
//│ | 1. : (‹∀ 0. ('a68' -> {x: 'a68'})›,)
//│ | CONSTRAIN ‹∀ 0. α49'› <! (‹∀ 0. ('a68' -> {x: 'a68'})› -> α80')
//│ |   where 
//│ 		α30'''' <: ((α29'''',) -> α31'''')
//│ 		α49' :> ‹∀ 2. (α28''' -> ‹∀ 3. {(α29'''' -> α32'''') where: α27'' <: ((α28''',) -> α30''''), α28''' <: ((α31'''',) -> α32'''')}›)›
//│ | 1. C ‹∀ 0. α49'› <! (‹∀ 0. ('a68' -> {x: 'a68'})› -> α80')    (0)
//│ | | INST [0]   ‹∀ 0. α49'›
//│ | |   where  
//│ 		α30'''' <: ((α29'''',) -> α31'''')
//│ 		α49' :> ‹∀ 2. (α28''' -> ‹∀ 3. {(α29'''' -> α32'''') where: α27'' <: ((α28''',) -> α30''''), α28''' <: ((α31'''',) -> α32'''')}›)›
//│ | | TO [1] ~>  α81'
//│ | |   where  
//│ 		α30'''' <: ((α29'''',) -> α31'''')
//│ 		α81' :> ‹∀ 2. (α28''' -> ‹∀ 3. {(α29'''' -> α32'''') where: α27'' <: ((α28''',) -> α30''''), α28''' <: ((α31'''',) -> α32'''')}›)›
//│ | | 1. C α81' <! (‹∀ 0. ('a68' -> {x: 'a68'})› -> α80')    (1)
//│ | | | 1. C ‹∀ 2. (α28''' -> ‹∀ 3. {(α29'''' -> α32'''') where: α27'' <: ((α28''',) -> α30''''), α28''' <: ((α31'''',) -> α32'''')}›)› <! (‹∀ 0. ('a68' -> {x: 'a68'})› -> α80')    (2)
//│ | | | | 1. C ‹∀ 2. (α28''' -> ‹∀ 3. {(α29'''' -> α32'''') where: α27'' <: ((α28''',) -> α30''''), α28''' <: ((α31'''',) -> α32'''')}›)› <! (‹∀ 0. ('a68' -> {x: 'a68'})› -> α80')    (2)
//│ | | | | | 1. C ‹∀ 2. (α28''' -> ‹∀ 3. {(α29'''' -> α32'''') where: α27'' <: ((α28''',) -> α30''''), α28''' <: ((α31'''',) -> α32'''')}›)› <! (‹∀ 0. ('a68' -> {x: 'a68'})› -> α80')    (2)
//│ | | | | | | INST [2]   ‹∀ 2. (α28''' -> ‹∀ 3. {(α29'''' -> α32'''') where: α27'' <: ((α28''',) -> α30''''), α28''' <: ((α31'''',) -> α32'''')}›)›
//│ | | | | | |   where  
//│ 		α30'''' <: ((α29'''',) -> α31'''')
//│ | | | | | | TO [1] ~>  (α82' -> ‹∀ 3. {(α84'''' -> α86'''') where: α27'' <: ((α82',) -> α83''''), α82' <: ((α85'''',) -> α86'''')}›)
//│ | | | | | |   where  
//│ 		α83'''' <: ((α84'''',) -> α85'''')
//│ | | | | | | 1. C (α82' -> ‹∀ 3. {(α84'''' -> α86'''') where: α27'' <: ((α82',) -> α83''''), α82' <: ((α85'''',) -> α86'''')}›) <! (‹∀ 0. ('a68' -> {x: 'a68'})› -> α80')    (3)
//│ | | | | | | | 1. C (‹∀ 0. ('a68' -> {x: 'a68'})›,) <! (α82',)    (4)
//│ | | | | | | | | 1. C ‹∀ 0. ('a68' -> {x: 'a68'})› <! α82'    (5)
//│ | | | | | | | 1. C ‹∀ 3. {(α84'''' -> α86'''') where: α27'' <: ((α82',) -> α83''''), α82' <: ((α85'''',) -> α86'''')}› <! α80'    (6)
//│ 1. : α80'
//│ ⬤ Typed as: ‹∀ 0. α80'›
//│  where: 
//│ 		α80' :> ‹∀ 3. {(α84'''' -> α86'''') where: α27'' <: ((α82',) -> α83''''), α82' <: ((α85'''',) -> α86'''')}›
//│ 		α82' :> ‹∀ 0. ('a68' -> {x: 'a68'})›
//│ 		α83'''' <: ((α84'''',) -> α85'''')
//│ n1w: 'a -> 'b
//│   where
//│     'c <: 'd -> 'a -> 'e
//│     'd <: 'e -> 'b
//│    = [Function (anonymous)]

:d
n1w 0
//│ 0. Typing term (n1w (0,))   None
//│ | 0. Typing term n1w   None
//│ | 0. : ‹∀ 0. α80'›
//│ | 0. Typing term (0,)   None
//│ | | 0. Typing term 0   None
//│ | | 0. : 0<int,number>
//│ | 0. : (0<int,number>,)
//│ | CONSTRAIN ‹∀ 0. α80'› <! (0<int,number> -> α104)
//│ |   where 
//│ 		α80' :> ‹∀ 3. {(α84'''' -> α86'''') where: α27'' <: ((α82',) -> α83''''), α82' <: ((α85'''',) -> α86'''')}›
//│ 		α82' :> ‹∀ 0. ('a68' -> {x: 'a68'})›
//│ 		α83'''' <: ((α84'''',) -> α85'''')
//│ | 0. C ‹∀ 0. α80'› <! (0<int,number> -> α104)    (0)
//│ | | INST [0]   ‹∀ 0. α80'›
//│ | |   where  
//│ 		α80' :> ‹∀ 3. {(α84'''' -> α86'''') where: α27'' <: ((α82',) -> α83''''), α82' <: ((α85'''',) -> α86'''')}›
//│ 		α82' :> ‹∀ 0. ('a68' -> {x: 'a68'})›
//│ 		α83'''' <: ((α84'''',) -> α85'''')
//│ | | TO [0] ~>  α105
//│ | |   where  
//│ 		α105 :> ‹∀ 3. {(α109'''' -> α111'''') where: α106 <: ((α107,) -> α108''''), α107 <: ((α110'''',) -> α111'''')}›
//│ 		α107 :> ‹∀ 0. ('a68' -> {x: 'a68'})›
//│ 		α108'''' <: ((α109'''',) -> α110'''')
//│ | | 0. C α105 <! (0<int,number> -> α104)    (1)
//│ | | | 0. C ‹∀ 3. {(α109'''' -> α111'''') where: α106 <: ((α107,) -> α108''''), α107 <: ((α110'''',) -> α111'''')}› <! (0<int,number> -> α104)    (2)
//│ | | | | INST [3]   ‹∀ 3. {(α109'''' -> α111'''') where: α106 <: ((α107,) -> α108''''), α107 <: ((α110'''',) -> α111'''')}›
//│ | | | |   where  
//│ 		α107 :> ‹∀ 0. ('a68' -> {x: 'a68'})›
//│ 		α108'''' <: ((α109'''',) -> α110'''')
//│ | | | | TO [0] ~>  {(α113 -> α115) where: α106 <: ((α107,) -> α112), α107 <: ((α114,) -> α115)}
//│ | | | |   where  
//│ 		α107 :> ‹∀ 0. ('a68' -> {x: 'a68'})›
//│ 		α112 <: ((α113,) -> α114)
//│ | | | | 0. C {(α113 -> α115) where: α106 <: ((α107,) -> α112), α107 <: ((α114,) -> α115)} <! (0<int,number> -> α104)    (3)
//│ | | | | | 0. C α106 <! ((α107,) -> α112)    (4)
//│ | | | | | 0. C α107 <! ((α114,) -> α115)    (5)
//│ | | | | | | 0. C ‹∀ 0. ('a68' -> {x: 'a68'})› <! ((α114,) -> α115)    (6)
//│ | | | | | | | INST [0]   ‹∀ 0. ('a68' -> {x: 'a68'})›
//│ | | | | | | |   where  
//│ | | | | | | | TO [0] ~>  ('a116 -> {x: 'a116})
//│ | | | | | | |   where  
//│ | | | | | | | 0. C ('a116 -> {x: 'a116}) <! ((α114,) -> α115)    (7)
//│ | | | | | | | | 0. C (α114,) <! ('a116,)    (8)
//│ | | | | | | | | | 0. C (α114,) <! ('a116,)    (8)
//│ | | | | | | | | | | 0. C α114 <! 'a116    (9)
//│ | | | | | | | | | | | 0. C α114 <! 'a116    (9)
//│ | | | | | | | | 0. C {x: 'a116} <! α115    (10)
//│ | | | | | 0. C (α113 -> α115) <! (0<int,number> -> α104)    (11)
//│ | | | | | | 0. C (0<int,number>,) <! (α113,)    (12)
//│ | | | | | | | 0. C 0<int,number> <! α113    (13)
//│ | | | | | | 0. C α115 <! α104    (14)
//│ | | | | | | | 0. C {x: 'a116} <! α104    (15)
//│ 0. : α104
//│ ⬤ Typed as: ‹∀ 0. α104›
//│  where: 
//│ 		α104 :> {x: 'a116}
//│ res: {x: nothing}
//│    = { x: 0 }

n1 wrap 0
//│ res: {x: nothing}
//│    = { x: 0 }

n2 wrap 0
//│ ╔══[ERROR] identifier not found: n2
//│ ║  l.155: 	n2 wrap 0
//│ ╙──       	^^
//│ res: error
//│ Code generation encountered an error:
//│   unresolved symbol n2

n3 wrap 0
//│ ╔══[ERROR] identifier not found: n3
//│ ║  l.163: 	n3 wrap 0
//│ ╙──       	^^
//│ res: error
//│ Code generation encountered an error:
//│   unresolved symbol n3


