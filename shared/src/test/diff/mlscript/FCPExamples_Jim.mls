
:GeneralizeCurriedFunctions
:NoRecursiveTypes


// TODO also try stuff from his intersection type systems


// ============ A Polar Type System (System P) ============

// λf. f (λx. x)
fun f -> f (fun x -> x)
//│ res: ((forall 'a. 'a -> 'a) -> 'b & 'b) -> (forall 'b, 'c. ('c
//│   where
//│     'b <: (forall 'a. 'a -> 'a) -> 'c))
//│    = [Function: res]

// λy. y y
fun y -> y y
//│ res: ('a -> anything & 'a) -> (forall 'a, 'b. ('b
//│   where
//│     'a <: 'a -> 'b))
//│    = [Function: res]

// Typeable in P; not in ML nor I2:
// (λf. f (λx. x)) (λy. y y)
(fun f -> f (fun x -> x)) (fun y -> y y)
//│ res: 'a
//│   where
//│     'b <: (forall 'c. 'c -> 'c) -> 'a
//│    = [Function (anonymous)]


