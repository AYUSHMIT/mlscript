
:GeneralizeCurriedFunctions

test1 f =
  (f 0, f true)
//│ test1: (true -> 'a & 0 -> 'a & 'a) -> (forall 'a, 'b, 'c. (('b, 'c,)
//│   where
//│     'a <: 0 -> 'b & true -> 'c))
//│      = [Function: test1]

test1 (fun value -> { value })
//│ res: ('a, 'b,)
//│   where
//│     'c <: 0 -> 'a & true -> 'b
//│    = [ undefined, undefined ]

// :ns
// :d
test2 f =
  let r x = f x
  in (r 0, r true)
//│ test2: ((0 | true) -> 'a & 'a) -> (forall 'a, 'b. ('b
//│   where
//│     'a <: 0 -> 'b), forall 'a, 'c. ('c
//│   where
//│     'a <: true -> 'c),)
//│      = [Function: test2]

test2 (fun value -> { value })
//│ res: (forall 'a. ('a
//│   where
//│     'b <: 0 -> 'a), forall 'c. ('c
//│   where
//│     'b <: true -> 'c),)
//│    = [ undefined, undefined ]


type ChurchInt = forall 'N. ('N -> 'N) -> ('N -> 'N)
//│ Defined type alias ChurchInt

// :ns
def s n = fun f -> fun x -> f (n f x)
//│ s: (nothing -> nothing -> 'a & 'a) -> (forall 'b, 'c. (('c -> 'a & 'b) -> (forall 'd, 'e. ('e -> (forall 'a, 'b, 'e, 'f, 'g. ('g
//│   where
//│     'b <: 'f -> 'g
//│     'a <: 'b -> 'e -> 'f))
//│   where
//│     'b <: 'd -> 'a
//│     'a <: 'b -> 'e -> 'd))
//│   where
//│     'a <: 'b -> nothing -> 'c))
//│  = [Function: s]

// :ns
def s' (n: ChurchInt) = fun f -> fun x -> f (n f x)
//│ s': ChurchInt -> (forall 'a, 'b. (('b -> anything & 'a) -> (forall 'c, 'd. ('c -> (forall 'e, 'a, 'c, 'f, 'g. ('g
//│   where
//│     'e <: 'a -> 'c -> 'f
//│     'a <: 'f -> 'g))
//│   where
//│     'e <: 'a -> 'c -> 'd
//│     'a <: 'd -> anything))
//│   where
//│     'e <: 'a -> nothing -> 'b))
//│   = [Function: s]

def succ: ChurchInt -> ChurchInt
//│ succ: ChurchInt -> ChurchInt
//│     = <missing implementation>

// :ns
// :e // * Needs distrib (see below) // works with quantif extrus
succ = s
//│ (nothing -> nothing -> 'a & 'a) -> (forall 'b, 'c. (('c -> 'a & 'b) -> (forall 'd, 'e. ('e -> (forall 'a, 'b, 'e, 'f, 'g. ('g
//│   where
//│     'b <: 'f -> 'g
//│     'a <: 'b -> 'e -> 'f))
//│   where
//│     'b <: 'd -> 'a
//│     'a <: 'b -> 'e -> 'd))
//│   where
//│     'a <: 'b -> nothing -> 'c))
//│   <:  succ:
//│ ChurchInt -> ChurchInt
//│     = [Function: s]

def succD: forall 'M. ChurchInt -> ('M -> 'M) -> ('M -> 'M)
//│ succD: ChurchInt -> ('M -> 'M) -> 'M -> 'M
//│      = <missing implementation>

succD = s
//│ (nothing -> nothing -> 'a & 'a) -> (forall 'b, 'c. (('c -> 'a & 'b) -> (forall 'd, 'e. ('e -> (forall 'a, 'b, 'e, 'f, 'g. ('g
//│   where
//│     'b <: 'f -> 'g
//│     'a <: 'b -> 'e -> 'f))
//│   where
//│     'b <: 'd -> 'a
//│     'a <: 'b -> 'e -> 'd))
//│   where
//│     'a <: 'b -> nothing -> 'c))
//│   <:  succD:
//│ ChurchInt -> ('M -> 'M) -> 'M -> 'M
//│      = [Function: s]


def z f x = x
//│ z: anything -> (forall 'a. 'a -> 'a)
//│  = [Function: z]

def zero: ChurchInt
//│ zero: ChurchInt
//│     = <missing implementation>

def zero = z
//│ anything -> (forall 'a. 'a -> 'a)
//│   <:  zero:
//│ ChurchInt
//│     = [Function: z]


wrap x = { x }
//│ wrap: 'a -> {x: 'a}
//│     = [Function: wrap]

n1 = s z
//│ n1: ('a -> anything & 'b) -> (forall 'c, 'd. ('d -> (forall 'e, 'b, 'd, 'f, 'g. ('g
//│   where
//│     'b <: 'f -> 'g
//│     'e <: 'b -> 'd -> 'f))
//│   where
//│     'b <: 'c -> anything
//│     'e <: 'b -> 'd -> 'c))
//│   where
//│     'e <: 'b -> nothing -> 'a
//│   = [Function (anonymous)]

n1 wrap 0
//│ res: 'a
//│   where
//│     'b <: 'c -> 'a
//│     'd <: 'b -> 0 -> 'c
//│    = { x: 0 }

n2 = s (s z)
//│ n2: ('a -> anything & 'b) -> (forall 'c, 'd. ('d -> (forall 'e, 'b, 'd, 'f, 'g. ('g
//│   where
//│     'b <: 'f -> 'g
//│     'e <: 'b -> 'd -> 'f))
//│   where
//│     'b <: 'c -> anything
//│     'e <: 'b -> 'd -> 'c))
//│   where
//│     'e <: 'b -> nothing -> 'a
//│   = [Function (anonymous)]

n2 wrap 0
//│ res: 'a
//│   where
//│     'b <: 'c -> 'a
//│     'd <: 'b -> 0 -> 'c
//│    = { x: { x: 0 } }

n3 = s (s (s z))
//│ n3: ('a -> anything & 'b) -> (forall 'c, 'd. ('d -> (forall 'e, 'b, 'd, 'f, 'g. ('g
//│   where
//│     'b <: 'f -> 'g
//│     'e <: 'b -> 'd -> 'f))
//│   where
//│     'b <: 'c -> anything
//│     'e <: 'b -> 'd -> 'c))
//│   where
//│     'e <: 'b -> nothing -> 'a
//│   = [Function (anonymous)]




// :ns
// :d
// rec def to_ch_simpl n =
//   if n == 0 then zero
//   else to_ch_simpl n
// rec def to_ch_simpl n =
//   to_ch_simpl n

// :d
// to_ch_simpl

// :ns
rec def to_ch n =
  if n == 0 then zero
  else succ (to_ch (n - 1))
//│ to_ch: int -> ChurchInt
//│      = [Function: to_ch]

def to_ch_s_mix n =
  if n == 0 then z
  else s (to_ch (n - 1))
//│ to_ch_s_mix: int -> (forall 'a, 'b. (('b -> anything & 'a) -> (forall 'a, 'c, 'd, 'e. (('e & 'd) -> (forall 'f, 'a, 'd, 'e, 'g, 'h. ('h | 'e
//│   where
//│     'a <: 'g -> 'h
//│     'f <: 'a -> 'd -> 'g))
//│   where
//│     'a <: 'c -> anything
//│     'f <: 'a -> 'd -> 'c))
//│   where
//│     'f <: 'a -> nothing -> 'b))
//│            = [Function: to_ch_s_mix]

rec def to_ch_s n =
  if n == 0 then z
  else s (to_ch_s (n - 1))
//│ ╔══[ERROR] Subtyping constraint of the form `?a -> ?b <: ?to_ch_s` exceeded recursion depth limit (300)
//│ ║  l.210: 	rec def to_ch_s n =
//│ ║         	                ^^^
//│ ║  l.211: 	  if n == 0 then z
//│ ║         	^^^^^^^^^^^^^^^^^^
//│ ║  l.212: 	  else s (to_ch_s (n - 1))
//│ ║         	^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── while constraining:  ‹∀ 2. ‹∀ 3. (α112_1085'''' -> ‹∀ 4. {‹∀ 5. (α113_1093^6 -> ‹∀ 6. {α116_1095^7 where: α112_1085'''' <: ((α115_1094^7,) -> α116_1095^7), α111_1079' <: ((α112_1085'''',) -> α114_1096^7)}›)› where: α112_1085'''' <: ((α115_1090^6,) -> α116_1091^6), α111_1079' <: ((α112_1085'''',) -> α114_1092^6)}›)››  <!<  ((α112_1274',) -> α114_1286')
//│ ╟── while constraining:  α111_1079'  <!<  ((α112_1274',) -> α114_1286')
//│ ╟── while constraining:  {‹∀ 5. (α113_1280^6 -> ‹∀ 6. {α116_1282^7 where: α112_1274' <: ((α115_1281^7,) -> α116_1282^7), α111_1079' <: ((α112_1274',) -> α114_1283^7)}›)› where: α112_1274' <: ((α115_1284',) -> α116_1285'), α111_1079' <: ((α112_1274',) -> α114_1286')}  <!<  ((α113_1273',) -> α115_1270')
//│ ╟── while constraining:  ‹∀ 4. {‹∀ 5. (α113_1280^6 -> ‹∀ 6. {α116_1282^7 where: α112_1274' <: ((α115_1281^7,) -> α116_1282^7), α111_1079' <: ((α112_1274',) -> α114_1283^7)}›)› where: α112_1274' <: ((α115_1277^6,) -> α116_1278^6), α111_1079' <: ((α112_1274',) -> α114_1279^6)}›  <!<  ((α113_1273',) -> α115_1270')
//│ ╟── while constraining:  ‹∀ 4. {‹∀ 5. (α113_1280^6 -> ‹∀ 6. {α116_1282^7 where: α112_1274' <: ((α115_1281^7,) -> α116_1282^7), α111_1079' <: ((α112_1274',) -> α114_1283^7)}›)› where: α112_1274' <: ((α115_1277^6,) -> α116_1278^6), α111_1079' <: ((α112_1274',) -> α114_1279^6)}›  <!<  α114_1272'
//│ ╟── while constraining:  (α112_1274' -> ‹∀ 4. {‹∀ 5. (α113_1280^6 -> ‹∀ 6. {α116_1282^7 where: α112_1274' <: ((α115_1281^7,) -> α116_1282^7), α111_1079' <: ((α112_1274',) -> α114_1283^7)}›)› where: α112_1274' <: ((α115_1277^6,) -> α116_1278^6), α111_1079' <: ((α112_1274',) -> α114_1279^6)}›)  <!<  ((α112_1260',) -> α114_1272')
//│ ╟── while constraining:  ‹∀ 3. (α112_1085'''' -> ‹∀ 4. {‹∀ 5. (α113_1093^6 -> ‹∀ 6. {α116_1095^7 where: α112_1085'''' <: ((α115_1094^7,) -> α116_1095^7), α111_1079' <: ((α112_1085'''',) -> α114_1096^7)}›)› where: α112_1085'''' <: ((α115_1090^6,) -> α116_1091^6), α111_1079' <: ((α112_1085'''',) -> α114_1092^6)}›)›  <!<  ((α112_1260',) -> α114_1272')
//│ ╟── while constraining:  ‹∀ 2. ‹∀ 3. (α112_1085'''' -> ‹∀ 4. {‹∀ 5. (α113_1093^6 -> ‹∀ 6. {α116_1095^7 where: α112_1085'''' <: ((α115_1094^7,) -> α116_1095^7), α111_1079' <: ((α112_1085'''',) -> α114_1096^7)}›)› where: α112_1085'''' <: ((α115_1090^6,) -> α116_1091^6), α111_1079' <: ((α112_1085'''',) -> α114_1092^6)}›)››  <!<  ((α112_1260',) -> α114_1272')
//│ ╟── while constraining:  α111_1079'  <!<  ((α112_1260',) -> α114_1272')
//│ ╟── while constraining:  {‹∀ 5. (α113_1266^6 -> ‹∀ 6. {α116_1268^7 where: α112_1260' <: ((α115_1267^7,) -> α116_1268^7), α111_1079' <: ((α112_1260',) -> α114_1269^7)}›)› where: α112_1260' <: ((α115_1270',) -> α116_1271'), α111_1079' <: ((α112_1260',) -> α114_1272')}  <!<  ((α113_1259',) -> α115_1256')
//│ ╟── while constraining:  ‹∀ 4. {‹∀ 5. (α113_1266^6 -> ‹∀ 6. {α116_1268^7 where: α112_1260' <: ((α115_1267^7,) -> α116_1268^7), α111_1079' <: ((α112_1260',) -> α114_1269^7)}›)› where: α112_1260' <: ((α115_1263^6,) -> α116_1264^6), α111_1079' <: ((α112_1260',) -> α114_1265^6)}›  <!<  ((α113_1259',) -> α115_1256')
//│ ╟── while constraining:  ‹∀ 4. {‹∀ 5. (α113_1266^6 -> ‹∀ 6. {α116_1268^7 where: α112_1260' <: ((α115_1267^7,) -> α116_1268^7), α111_1079' <: ((α112_1260',) -> α114_1269^7)}›)› where: α112_1260' <: ((α115_1263^6,) -> α116_1264^6), α111_1079' <: ((α112_1260',) -> α114_1265^6)}›  <!<  α114_1258'
//│ ╟── while constraining:  (α112_1260' -> ‹∀ 4. {‹∀ 5. (α113_1266^6 -> ‹∀ 6. {α116_1268^7 where: α112_1260' <: ((α115_1267^7,) -> α116_1268^7), α111_1079' <: ((α112_1260',) -> α114_1269^7)}›)› where: α112_1260' <: ((α115_1263^6,) -> α116_1264^6), α111_1079' <: ((α112_1260',) -> α114_1265^6)}›)  <!<  ((α112_1246',) -> α114_1258')
//│ ╟── while constraining:  ‹∀ 3. (α112_1085'''' -> ‹∀ 4. {‹∀ 5. (α113_1093^6 -> ‹∀ 6. {α116_1095^7 where: α112_1085'''' <: ((α115_1094^7,) -> α116_1095^7), α111_1079' <: ((α112_1085'''',) -> α114_1096^7)}›)› where: α112_1085'''' <: ((α115_1090^6,) -> α116_1091^6), α111_1079' <: ((α112_1085'''',) -> α114_1092^6)}›)›  <!<  ((α112_1246',) -> α114_1258')
//│ ╟── while constraining:  ‹∀ 2. ‹∀ 3. (α112_1085'''' -> ‹∀ 4. {‹∀ 5. (α113_1093^6 -> ‹∀ 6. {α116_1095^7 where: α112_1085'''' <: ((α115_1094^7,) -> α116_1095^7), α111_1079' <: ((α112_1085'''',) -> α114_1096^7)}›)› where: α112_1085'''' <: ((α115_1090^6,) -> α116_1091^6), α111_1079' <: ((α112_1085'''',) -> α114_1092^6)}›)››  <!<  ((α112_1246',) -> α114_1258')
//│ ╟── ......
//│ ╟── ......
//│ ╟── while constraining:  (α112_1120' -> ‹∀ 4. {‹∀ 5. (α113_1126^6 -> ‹∀ 6. {α116_1128^7 where: α112_1120' <: ((α115_1127^7,) -> α116_1128^7), α111_1079' <: ((α112_1120',) -> α114_1129^7)}›)› where: α112_1120' <: ((α115_1123^6,) -> α116_1124^6), α111_1079' <: ((α112_1120',) -> α114_1125^6)}›)  <!<  ((α112_1106',) -> α114_1118')
//│ ╟── while constraining:  ‹∀ 3. (α112_1085'''' -> ‹∀ 4. {‹∀ 5. (α113_1093^6 -> ‹∀ 6. {α116_1095^7 where: α112_1085'''' <: ((α115_1094^7,) -> α116_1095^7), α111_1079' <: ((α112_1085'''',) -> α114_1096^7)}›)› where: α112_1085'''' <: ((α115_1090^6,) -> α116_1091^6), α111_1079' <: ((α112_1085'''',) -> α114_1092^6)}›)›  <!<  ((α112_1106',) -> α114_1118')
//│ ╟── while constraining:  ‹∀ 2. ‹∀ 3. (α112_1085'''' -> ‹∀ 4. {‹∀ 5. (α113_1093^6 -> ‹∀ 6. {α116_1095^7 where: α112_1085'''' <: ((α115_1094^7,) -> α116_1095^7), α111_1079' <: ((α112_1085'''',) -> α114_1096^7)}›)› where: α112_1085'''' <: ((α115_1090^6,) -> α116_1091^6), α111_1079' <: ((α112_1085'''',) -> α114_1092^6)}›)››  <!<  ((α112_1106',) -> α114_1118')
//│ ╟── while constraining:  α111_1079'  <!<  ((α112_1106',) -> α114_1118')
//│ ╟── while constraining:  {‹∀ 5. (α113_1112^6 -> ‹∀ 6. {α116_1114^7 where: α112_1106' <: ((α115_1113^7,) -> α116_1114^7), α111_1079' <: ((α112_1106',) -> α114_1115^7)}›)› where: α112_1106' <: ((α115_1116',) -> α116_1117'), α111_1079' <: ((α112_1106',) -> α114_1118')}  <!<  ((α1100',) -> α1101')
//│ ╟── while constraining:  ‹∀ 4. {‹∀ 5. (α113_1112^6 -> ‹∀ 6. {α116_1114^7 where: α112_1106' <: ((α115_1113^7,) -> α116_1114^7), α111_1079' <: ((α112_1106',) -> α114_1115^7)}›)› where: α112_1106' <: ((α115_1109^6,) -> α116_1110^6), α111_1079' <: ((α112_1106',) -> α114_1111^6)}›  <!<  ((α1100',) -> α1101')
//│ ╟── while constraining:  ‹∀ 4. {‹∀ 5. (α113_1112^6 -> ‹∀ 6. {α116_1114^7 where: α112_1106' <: ((α115_1113^7,) -> α116_1114^7), α111_1079' <: ((α112_1106',) -> α114_1115^7)}›)› where: α112_1106' <: ((α115_1109^6,) -> α116_1110^6), α111_1079' <: ((α112_1106',) -> α114_1111^6)}›  <!<  α1099'
//│ ╟── while constraining:  (α112_1106' -> ‹∀ 4. {‹∀ 5. (α113_1112^6 -> ‹∀ 6. {α116_1114^7 where: α112_1106' <: ((α115_1113^7,) -> α116_1114^7), α111_1079' <: ((α112_1106',) -> α114_1115^7)}›)› where: α112_1106' <: ((α115_1109^6,) -> α116_1110^6), α111_1079' <: ((α112_1106',) -> α114_1111^6)}›)  <!<  ((α1098',) -> α1099')
//│ ╟── while constraining:  ‹∀ 3. (α112_1085'''' -> ‹∀ 4. {‹∀ 5. (α113_1093^6 -> ‹∀ 6. {α116_1095^7 where: α112_1085'''' <: ((α115_1094^7,) -> α116_1095^7), α111_1079' <: ((α112_1085'''',) -> α114_1096^7)}›)› where: α112_1085'''' <: ((α115_1090^6,) -> α116_1091^6), α111_1079' <: ((α112_1085'''',) -> α114_1092^6)}›)›  <!<  ((α1098',) -> α1099')
//│ ╟── while constraining:  ‹∀ 2. ‹∀ 3. (α112_1085'''' -> ‹∀ 4. {‹∀ 5. (α113_1093^6 -> ‹∀ 6. {α116_1095^7 where: α112_1085'''' <: ((α115_1094^7,) -> α116_1095^7), α111_1079' <: ((α112_1085'''',) -> α114_1096^7)}›)› where: α112_1085'''' <: ((α115_1090^6,) -> α116_1091^6), α111_1079' <: ((α112_1085'''',) -> α114_1092^6)}›)››  <!<  ((α1098',) -> α1099')
//│ ╟── while constraining:  ‹∀ 2. ‹∀ 3. (α112_1085'''' -> ‹∀ 4. {‹∀ 5. (α113_1093^6 -> ‹∀ 6. {α116_1095^7 where: α112_1085'''' <: ((α115_1094^7,) -> α116_1095^7), α111_1079' <: ((α112_1085'''',) -> α114_1096^7)}›)› where: α112_1085'''' <: ((α115_1090^6,) -> α116_1091^6), α111_1079' <: ((α112_1085'''',) -> α114_1092^6)}›)››  <!<  α111_1079'
//│ ╟── while constraining:  ‹∀ 2. ‹∀ 3. (α112_1085'''' -> ‹∀ 4. {‹∀ 5. (α113_1093^6 -> ‹∀ 6. {α116_1095^7 where: α112_1085'''' <: ((α115_1094^7,) -> α116_1095^7), α111_1079' <: ((α112_1085'''',) -> α114_1096^7)}›)› where: α112_1085'''' <: ((α115_1090^6,) -> α116_1091^6), α111_1079' <: ((α112_1085'''',) -> α114_1092^6)}›)››  <!<  α1077'
//│ ╟── while constraining:  α1097'  <!<  α1077'
//│ ╟── while constraining:  (α1069' -> α1097')  <!<  ((α1076',) -> α1077')
//│ ╙── while constraining:  (α1069' -> α1097')  <!<  to_ch_s1068'
//│ to_ch_s: int -> (forall 'a. (nothing -> anything & 'a) -> (forall 'a, 'b, 'c, 'd. (('d & 'c) -> (forall 'a, 'e, 'c, 'd, 'f, 'g. ('g | 'd
//│   where
//│     'a <: 'f -> 'g
//│     'e <: 'a -> 'c -> 'f))
//│   where
//│     'a <: 'b -> anything
//│     'e <: 'a -> 'c -> 'b)))
//│        = [Function: to_ch_s]

// rec def to_ch n =
//   (if n == 0 then zero
//   else succ (to_ch (n - 1) : ChurchInt)): ChurchInt

def to_church: int -> ChurchInt
//│ to_church: int -> ChurchInt
//│          = <missing implementation>

def to_church n =
  if n == 0 then zero
  else succ (to_church (n - 1))
//│ int -> ChurchInt
//│   <:  to_church:
//│ int -> ChurchInt
//│          = <no result>
//│            to_church is not implemented

to_church = to_ch
//│ int -> ChurchInt
//│   <:  to_church:
//│ int -> ChurchInt
//│          = [Function: to_ch]

// :s
// :ns
// :e // * Needs distrib (see below)
// :e // FIXME? succeeds with genLamBodies
to_church = to_ch_s_mix
//│ int -> (forall 'a, 'b. (('b -> anything & 'a) -> (forall 'a, 'c, 'd, 'e. (('e & 'd) -> (forall 'f, 'a, 'd, 'e, 'g, 'h. ('h | 'e
//│   where
//│     'a <: 'g -> 'h
//│     'f <: 'a -> 'd -> 'g))
//│   where
//│     'a <: 'c -> anything
//│     'f <: 'a -> 'd -> 'c))
//│   where
//│     'f <: 'a -> nothing -> 'b))
//│   <:  to_church:
//│ int -> ChurchInt
//│          = [Function: to_ch_s_mix]

:e // * Needs distrib (see below)
to_church = to_ch_s
//│ int -> (forall 'a. (nothing -> anything & 'a) -> (forall 'a, 'b, 'c, 'd. (('d & 'c) -> (forall 'a, 'e, 'c, 'd, 'f, 'g. ('g | 'd
//│   where
//│     'a <: 'f -> 'g
//│     'e <: 'a -> 'c -> 'f))
//│   where
//│     'a <: 'b -> anything
//│     'e <: 'a -> 'c -> 'b)))
//│   <:  to_church:
//│ int -> ChurchInt
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?a, ?b, ?c, ?d, ?e, ?f, ?g, ?h, ?i, ?j, ?k, ?l, ?m, ?n, ?o, ?p, ?q, ?r, ?s, ?t, ?u, ?v, ?w, ?x, ?y, ?z, ?a1, ?b1, ?c1, ?d1, ?e1, ?f1, ?g1, ?h1, ?i1, ?j1, ?k1, ?l1, ?m1, ?n1, ?o1, ?p1, ?q1, ?r1, ?s1, ?t1, ?u1, ?v1, ?w1, ?x1, ?y1, ?z1, ?a2, ?b2, ?c2, ?d2, ?e2, ?f2, ?g2, ?h2, ?i2, ?j2, ?k2, ?l2, ?m2, ?n2, ?o2, ?p2, ?q2, ?r2, ?s2, ?t2, ?u2, ?v2, ?w2, ?x2, ?y2, ?z2, ?a3, ?b3, ?c3, ?d3, ?e3, ?f3, ?g3, ?h3, ?i3, ?j3, ?k3, ?l3, ?m3, ?n3, ?o3, ?p3, ?q3, ?r3, ?s3, ?t3, ?u3, ?v3, ?w3, ?x3, ?y3, ?z3, ?a4, ?b4, ?c4, ?to_ch_s, ?d4, ?e4, ?f4, ?g4, ?h4, ?i4, ?j4, ?k4, ?l4, ?m4, ?n4, ?o4, ?p4, ?q4, ?r4, ?s4, ?t4, ?u4, ?v4, ?w4, ?x4, ?y4, ?z4, ?a5, ?b5, ?c5, ?d5, ?e5, ?f5, ?g5, ?h5, ?i5, ?j5, ?k5, ?l5, ?m5, ?n5, ?o5, ?p5, ?q5, ?r5, ?s5, ?t5, ?u5, ?v5, ?w5, ?x5, ?y5, ?z5, ?a6, ?b6, ?c6. ?to_ch_s <: int -> ChurchInt` exceeded recursion depth limit (300)
//│ ║  l.303: 	to_church = to_ch_s
//│ ║         	^^^^^^^^^^^^^^^^^^^
//│ ╟── while constraining:  ('N1975'' -> 'N1976'')  <!<  ((α2218',) -> α2219')
//│ ╟── while constraining:  α1974'  <!<  ((α2218',) -> α2219')
//│ ╟── while constraining:  α1995'  <!<  ((α2218',) -> α2219')
//│ ╟── while constraining:  α2020'  <!<  ((α2218',) -> α2219')
//│ ╟── while constraining:  α2045'  <!<  ((α2218',) -> α2219')
//│ ╟── while constraining:  α2070'  <!<  ((α2218',) -> α2219')
//│ ╟── while constraining:  α2095'  <!<  ((α2218',) -> α2219')
//│ ╟── while constraining:  α2120'  <!<  ((α2218',) -> α2219')
//│ ╟── while constraining:  α2145'  <!<  ((α2218',) -> α2219')
//│ ╟── while constraining:  α2170'  <!<  ((α2218',) -> α2219')
//│ ╟── while constraining:  α2195'  <!<  ((α2218',) -> α2219')
//│ ╟── while constraining:  α2195'  <!<  ((α115_2209'',) -> α116_2210'')
//│ ╟── while constraining:  α2195'  <!<  α112_2208''
//│ ╟── while constraining:  (α2195',)  <!<  (α112_2208'',)
//│ ╟── while constraining:  (α112_2208'' -> ‹∀ 4. {‹∀ 5. (α113_2214^6 -> ‹∀ 6. {α116_2216^7 where: α112_2208'' <: ((α115_2215^7,) -> α116_2216^7), α111_1819' <: ((α112_2208'',) -> α114_2217^7)}›)› where: α112_2208'' <: ((α115_2211^6,) -> α116_2212^6), α111_1819' <: ((α112_2208'',) -> α114_2213^6)}›)  <!<  ((α2195',) -> α2205')
//│ ╟── ......
//│ ╟── ......
//│ ╟── while constraining:  α111_1819'  <!<  ((α1974',) -> α1977')
//│ ╟── while constraining:  α111_1819'  <!<  ((α112_1958'',) -> α114_1972'')
//│ ╟── while constraining:  {‹∀ 5. (α113_1964^6 -> ‹∀ 6. {α116_1966^7 where: α112_1958'' <: ((α115_1965^7,) -> α116_1966^7), α111_1819' <: ((α112_1958'',) -> α114_1967^7)}›)› where: α112_1958'' <: ((α115_1970'',) -> α116_1971''), α111_1819' <: ((α112_1958'',) -> α114_1972'')}  <!<  (‘N'' -> ‘N'')
//│ ╟── while constraining:  ‹∀ 4. {‹∀ 5. (α113_1964^6 -> ‹∀ 6. {α116_1966^7 where: α112_1958'' <: ((α115_1965^7,) -> α116_1966^7), α111_1819' <: ((α112_1958'',) -> α114_1967^7)}›)› where: α112_1958'' <: ((α115_1961^6,) -> α116_1962^6), α111_1819' <: ((α112_1958'',) -> α114_1963^6)}›  <!<  (‘N'' -> ‘N'')
//│ ╟── while constraining:  (α112_1958'' -> ‹∀ 4. {‹∀ 5. (α113_1964^6 -> ‹∀ 6. {α116_1966^7 where: α112_1958'' <: ((α115_1965^7,) -> α116_1966^7), α111_1819' <: ((α112_1958'',) -> α114_1967^7)}›)› where: α112_1958'' <: ((α115_1961^6,) -> α116_1962^6), α111_1819' <: ((α112_1958'',) -> α114_1963^6)}›)  <!<  ((‘N'' -> ‘N'') -> (‘N'' -> ‘N''))
//│ ╟── while constraining:  ‹∀ 3. (α112_1748'''' -> ‹∀ 4. {‹∀ 5. (α113_1823^6 -> ‹∀ 6. {α116_1825^7 where: α112_1748'''' <: ((α115_1824^7,) -> α116_1825^7), α111_1819' <: ((α112_1748'''',) -> α114_1826^7)}›)› where: α112_1748'''' <: ((α115_1820^6,) -> α116_1821^6), α111_1819' <: ((α112_1748'''',) -> α114_1822^6)}›)›  <!<  ((‘N'' -> ‘N'') -> (‘N'' -> ‘N''))
//│ ╟── while constraining:  ‹∀ 2. ‹∀ 3. (α112_1748'''' -> ‹∀ 4. {‹∀ 5. (α113_1823^6 -> ‹∀ 6. {α116_1825^7 where: α112_1748'''' <: ((α115_1824^7,) -> α116_1825^7), α111_1819' <: ((α112_1748'''',) -> α114_1826^7)}›)› where: α112_1748'''' <: ((α115_1820^6,) -> α116_1821^6), α111_1819' <: ((α112_1748'''',) -> α114_1822^6)}›)››  <!<  ((‘N'' -> ‘N'') -> (‘N'' -> ‘N''))
//│ ╟── while constraining:  ‹∀ 2. ‹∀ 3. (α112_1748'''' -> ‹∀ 4. {‹∀ 5. (α113_1823^6 -> ‹∀ 6. {α116_1825^7 where: α112_1748'''' <: ((α115_1824^7,) -> α116_1825^7), α111_1819' <: ((α112_1748'''',) -> α114_1826^7)}›)› where: α112_1748'''' <: ((α115_1820^6,) -> α116_1821^6), α111_1819' <: ((α112_1748'''',) -> α114_1822^6)}›)››  <!<  ‹∀ 0. (('N109' -> 'N109') -> ('N109' -> 'N109'))›
//│ ╟── while constraining:  ‹∀ 2. ‹∀ 3. (α112_1748'''' -> ‹∀ 4. {‹∀ 5. (α113_1823^6 -> ‹∀ 6. {α116_1825^7 where: α112_1748'''' <: ((α115_1824^7,) -> α116_1825^7), α111_1819' <: ((α112_1748'''',) -> α114_1826^7)}›)› where: α112_1748'''' <: ((α115_1820^6,) -> α116_1821^6), α111_1819' <: ((α112_1748'''',) -> α114_1822^6)}›)››  <!<  ChurchInt
//│ ╟── while constraining:  α1097_1747'  <!<  ChurchInt
//│ ╟── while constraining:  (α1069_1746' -> α1097_1747')  <!<  (Int -> ChurchInt)
//│ ╟── while constraining:  to_ch_s1068_1745'  <!<  (Int -> ChurchInt)
//│ ╟── while constraining:  ‹∀ 0. to_ch_s1068'›  <!<  (Int -> ChurchInt)
//│ ╟── while constraining:  ‹∀ 0. ‹∀ 0. to_ch_s1068'››  <!<  (Int -> ChurchInt)
//│ ╙── while constraining:  ‹∀ 0. ‹∀ 0. to_ch_s1068'››  <!<  ‹∀ 0. (Int -> ChurchInt)›
//│          = [Function: to_ch_s]

rec def to_ch_mix n =
  if n == 0 then zero
  else s (to_ch (n - 1))
//│ to_ch_mix: int -> (forall 'a, 'b. ('N -> 'N & 'N -> anything & 'a) -> (forall 'c, 'd. ('d -> (forall 'a, 'b, 'd, 'e, 'f. ('f
//│   where
//│     'a <: 'e -> 'f
//│     'b <: 'a -> 'd -> 'e))
//│   where
//│     'a <: 'c -> anything
//│     'b <: 'a -> 'd -> 'c)) | ChurchInt)
//│          = [Function: to_ch_mix]

:e // * Needs distrib (see below)
to_church = to_ch_mix
//│ int -> (forall 'a, 'b. ('N -> 'N & 'N -> anything & 'a) -> (forall 'c, 'd. ('d -> (forall 'a, 'b, 'd, 'e, 'f. ('f
//│   where
//│     'a <: 'e -> 'f
//│     'b <: 'a -> 'd -> 'e))
//│   where
//│     'a <: 'c -> anything
//│     'b <: 'a -> 'd -> 'c)) | ChurchInt)
//│   <:  to_church:
//│ int -> ChurchInt
//│ ╔══[ERROR] Type mismatch in def definition:
//│ ║  l.363: 	to_church = to_ch_mix
//│ ║         	^^^^^^^^^^^^^^^^^^^^^
//│ ╟── type `‘N2444` is not an instance of type `'N`
//│ ║  l.38: 	type ChurchInt = forall 'N. ('N -> 'N) -> ('N -> 'N)
//│ ║        	                        ^^
//│ ╟── Note: constraint arises from quantified type variable:
//│ ║  l.38: 	type ChurchInt = forall 'N. ('N -> 'N) -> ('N -> 'N)
//│ ╙──      	                        ^^
//│          = [Function: to_ch_mix]


// rec def to_ch n =
//   if n == 0 then zero
//   else succD (to_ch (n - 1))

// rec def to_ch n =
//   succD (to_ch (n - 1))

:e // * Needs to distribute back (in the other direction) here:
rec def to_ch n =
  succD (to_ch n)
//│ ╔══[ERROR] Type mismatch in binding of lambda expression:
//│ ║  l.393: 	rec def to_ch n =
//│ ║         	              ^^^
//│ ║  l.394: 	  succD (to_ch n)
//│ ║         	^^^^^^^^^^^^^^^^^
//│ ╟── type `‘N2488` is not an instance of type `'N`
//│ ║  l.38: 	type ChurchInt = forall 'N. ('N -> 'N) -> ('N -> 'N)
//│ ║        	                        ^^
//│ ╟── Note: constraint arises from quantified type variable:
//│ ║  l.38: 	type ChurchInt = forall 'N. ('N -> 'N) -> ('N -> 'N)
//│ ║        	                        ^^
//│ ╟── from quantified type variable:
//│ ║  l.87: 	def succD: forall 'M. ChurchInt -> ('M -> 'M) -> ('M -> 'M)
//│ ╙──      	                  ^^
//│ to_ch: anything -> (('M | ‘N2488) -> 'M) -> 'M -> ('M | ‘N2488)
//│      = [Function: to_ch1]


// * With distributivity:
:DistributeForalls

succ = s
//│ (nothing -> nothing -> 'a & 'a) -> (forall 'b, 'c. (('c -> 'a & 'b) -> (forall 'd, 'e. ('e -> (forall 'a, 'b, 'e, 'f, 'g. ('g
//│   where
//│     'b <: 'f -> 'g
//│     'a <: 'b -> 'e -> 'f))
//│   where
//│     'b <: 'd -> 'a
//│     'a <: 'b -> 'e -> 'd))
//│   where
//│     'a <: 'b -> nothing -> 'c))
//│   <:  succ:
//│ ChurchInt -> ChurchInt
//│     = [Function: s]

succ = s'
//│ ChurchInt -> (forall 'a, 'b. (('b -> anything & 'a) -> (forall 'c, 'd. ('c -> (forall 'e, 'a, 'c, 'f, 'g. ('g
//│   where
//│     'e <: 'a -> 'c -> 'f
//│     'a <: 'f -> 'g))
//│   where
//│     'e <: 'a -> 'c -> 'd
//│     'a <: 'd -> anything))
//│   where
//│     'e <: 'a -> nothing -> 'b))
//│   <:  succ:
//│ ChurchInt -> ChurchInt
//│     = [Function: s]

to_church = to_ch_s_mix
//│ int -> (forall 'a, 'b. (('b -> anything & 'a) -> (forall 'a, 'c, 'd, 'e. (('e & 'd) -> (forall 'f, 'a, 'd, 'e, 'g, 'h. ('h | 'e
//│   where
//│     'a <: 'g -> 'h
//│     'f <: 'a -> 'd -> 'g))
//│   where
//│     'a <: 'c -> anything
//│     'f <: 'a -> 'd -> 'c))
//│   where
//│     'f <: 'a -> nothing -> 'b))
//│   <:  to_church:
//│ int -> ChurchInt
//│          = [Function: to_ch_s_mix]

to_church = to_ch_s
//│ int -> (forall 'a. (nothing -> anything & 'a) -> (forall 'a, 'b, 'c, 'd. (('d & 'c) -> (forall 'a, 'e, 'c, 'd, 'f, 'g. ('g | 'd
//│   where
//│     'a <: 'f -> 'g
//│     'e <: 'a -> 'c -> 'f))
//│   where
//│     'a <: 'b -> anything
//│     'e <: 'a -> 'c -> 'b)))
//│   <:  to_church:
//│ int -> ChurchInt
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?a, ?b, ?c, ?d, ?e, ?f, ?g, ?h, ?i, ?j, ?k, ?l, ?m, ?n, ?o, ?p, ?q, ?r, ?s, ?t, ?u, ?v, ?w, ?x, ?y, ?z, ?a1, ?b1, ?c1, ?d1, ?e1, ?f1, ?g1, ?h1, ?i1, ?j1, ?k1, ?l1, ?m1, ?n1, ?o1, ?p1, ?q1, ?r1, ?s1, ?t1, ?u1, ?v1, ?w1, ?x1, ?y1, ?z1, ?a2, ?b2, ?c2, ?d2, ?e2, ?f2, ?g2, ?h2, ?i2, ?j2, ?k2, ?l2, ?m2, ?n2, ?o2, ?p2, ?q2, ?r2, ?s2, ?t2, ?u2, ?v2, ?w2, ?x2, ?y2, ?z2, ?a3, ?b3, ?c3, ?d3, ?e3, ?f3, ?g3, ?h3, ?i3, ?j3, ?k3, ?l3, ?m3, ?n3, ?o3, ?p3, ?q3, ?r3, ?s3, ?t3, ?u3, ?v3, ?w3, ?x3, ?y3, ?z3, ?a4, ?b4, ?c4, ?to_ch_s, ?d4, ?e4, ?f4, ?g4, ?h4, ?i4, ?j4, ?k4, ?l4, ?m4, ?n4, ?o4, ?p4, ?q4, ?r4, ?s4, ?t4, ?u4, ?v4, ?w4, ?x4, ?y4, ?z4, ?a5, ?b5, ?c5, ?d5, ?e5, ?f5, ?g5, ?h5, ?i5, ?j5, ?k5, ?l5, ?m5, ?n5, ?o5, ?p5, ?q5, ?r5, ?s5, ?t5, ?u5, ?v5, ?w5, ?x5, ?y5, ?z5, ?a6, ?b6, ?c6. ?to_ch_s <: int -> ChurchInt` exceeded recursion depth limit (300)
//│ ║  l.458: 	to_church = to_ch_s
//│ ║         	^^^^^^^^^^^^^^^^^^^
//│ ╟── while constraining:  (‘N'' -> ‘N'')  <!<  α112_3186''
//│ ╟── while constraining:  α112_3172''  <!<  α112_3186''
//│ ╟── while constraining:  (α112_3172'',)  <!<  (α112_3186'',)
//│ ╟── while constraining:  (α112_3186'' -> ‹∀ 4. {‹∀ 5. (α113_3192^6 -> ‹∀ 6. {α116_3194^7 where: α112_3186'' <: ((α115_3193^7,) -> α116_3194^7), α111_2893'' <: ((α112_3186'',) -> α114_3195^7)}›)› where: α112_3186'' <: ((α115_3189^6,) -> α116_3190^6), α111_2893'' <: ((α112_3186'',) -> α114_3191^6)}›)  <!<  ((α112_3172'',) -> α114_3184'')
//│ ╟── while constraining:  ‹∀ 3. (α112_2822'''' -> ‹∀ 4. {‹∀ 5. (α113_2897^6 -> ‹∀ 6. {α116_2899^7 where: α112_2822'''' <: ((α115_2898^7,) -> α116_2899^7), α111_2893'' <: ((α112_2822'''',) -> α114_2900^7)}›)› where: α112_2822'''' <: ((α115_2894^6,) -> α116_2895^6), α111_2893'' <: ((α112_2822'''',) -> α114_2896^6)}›)›  <!<  ((α112_3172'',) -> α114_3184'')
//│ ╟── while constraining:  ‹∀ 2. ‹∀ 3. (α112_2822'''' -> ‹∀ 4. {‹∀ 5. (α113_2897^6 -> ‹∀ 6. {α116_2899^7 where: α112_2822'''' <: ((α115_2898^7,) -> α116_2899^7), α111_2893'' <: ((α112_2822'''',) -> α114_2900^7)}›)› where: α112_2822'''' <: ((α115_2894^6,) -> α116_2895^6), α111_2893'' <: ((α112_2822'''',) -> α114_2896^6)}›)››  <!<  ((α112_3172'',) -> α114_3184'')
//│ ╟── while constraining:  α111_2893''  <!<  ((α112_3172'',) -> α114_3184'')
//│ ╟── while constraining:  {‹∀ 5. (α113_3178^6 -> ‹∀ 6. {α116_3180^7 where: α112_3172'' <: ((α115_3179^7,) -> α116_3180^7), α111_2893'' <: ((α112_3172'',) -> α114_3181^7)}›)› where: α112_3172'' <: ((α115_3182'',) -> α116_3183''), α111_2893'' <: ((α112_3172'',) -> α114_3184'')}  <!<  ((α113_3171'',) -> α115_3168'')
//│ ╟── while constraining:  ‹∀ 4. {‹∀ 5. (α113_3178^6 -> ‹∀ 6. {α116_3180^7 where: α112_3172'' <: ((α115_3179^7,) -> α116_3180^7), α111_2893'' <: ((α112_3172'',) -> α114_3181^7)}›)› where: α112_3172'' <: ((α115_3175^6,) -> α116_3176^6), α111_2893'' <: ((α112_3172'',) -> α114_3177^6)}›  <!<  ((α113_3171'',) -> α115_3168'')
//│ ╟── while constraining:  ‹∀ 4. {‹∀ 5. (α113_3178^6 -> ‹∀ 6. {α116_3180^7 where: α112_3172'' <: ((α115_3179^7,) -> α116_3180^7), α111_2893'' <: ((α112_3172'',) -> α114_3181^7)}›)› where: α112_3172'' <: ((α115_3175^6,) -> α116_3176^6), α111_2893'' <: ((α112_3172'',) -> α114_3177^6)}›  <!<  α114_3170''
//│ ╟── while constraining:  (α112_3172'' -> ‹∀ 4. {‹∀ 5. (α113_3178^6 -> ‹∀ 6. {α116_3180^7 where: α112_3172'' <: ((α115_3179^7,) -> α116_3180^7), α111_2893'' <: ((α112_3172'',) -> α114_3181^7)}›)› where: α112_3172'' <: ((α115_3175^6,) -> α116_3176^6), α111_2893'' <: ((α112_3172'',) -> α114_3177^6)}›)  <!<  ((α112_3158'',) -> α114_3170'')
//│ ╟── while constraining:  ‹∀ 3. (α112_2822'''' -> ‹∀ 4. {‹∀ 5. (α113_2897^6 -> ‹∀ 6. {α116_2899^7 where: α112_2822'''' <: ((α115_2898^7,) -> α116_2899^7), α111_2893'' <: ((α112_2822'''',) -> α114_2900^7)}›)› where: α112_2822'''' <: ((α115_2894^6,) -> α116_2895^6), α111_2893'' <: ((α112_2822'''',) -> α114_2896^6)}›)›  <!<  ((α112_3158'',) -> α114_3170'')
//│ ╟── while constraining:  ‹∀ 2. ‹∀ 3. (α112_2822'''' -> ‹∀ 4. {‹∀ 5. (α113_2897^6 -> ‹∀ 6. {α116_2899^7 where: α112_2822'''' <: ((α115_2898^7,) -> α116_2899^7), α111_2893'' <: ((α112_2822'''',) -> α114_2900^7)}›)› where: α112_2822'''' <: ((α115_2894^6,) -> α116_2895^6), α111_2893'' <: ((α112_2822'''',) -> α114_2896^6)}›)››  <!<  ((α112_3158'',) -> α114_3170'')
//│ ╟── while constraining:  α111_2893''  <!<  ((α112_3158'',) -> α114_3170'')
//│ ╟── while constraining:  {‹∀ 5. (α113_3164^6 -> ‹∀ 6. {α116_3166^7 where: α112_3158'' <: ((α115_3165^7,) -> α116_3166^7), α111_2893'' <: ((α112_3158'',) -> α114_3167^7)}›)› where: α112_3158'' <: ((α115_3168'',) -> α116_3169''), α111_2893'' <: ((α112_3158'',) -> α114_3170'')}  <!<  ((α113_3157'',) -> α115_3154'')
//│ ╟── ......
//│ ╟── ......
//│ ╟── while constraining:  ‹∀ 2. ‹∀ 3. (α112_2822'''' -> ‹∀ 4. {‹∀ 5. (α113_2897^6 -> ‹∀ 6. {α116_2899^7 where: α112_2822'''' <: ((α115_2898^7,) -> α116_2899^7), α111_2893'' <: ((α112_2822'''',) -> α114_2900^7)}›)› where: α112_2822'''' <: ((α115_2894^6,) -> α116_2895^6), α111_2893'' <: ((α112_2822'''',) -> α114_2896^6)}›)››  <!<  ((α112_3032'',) -> α114_3044'')
//│ ╟── while constraining:  α111_2893''  <!<  ((α112_3032'',) -> α114_3044'')
//│ ╟── while constraining:  {‹∀ 5. (α113_3038^6 -> ‹∀ 6. {α116_3040^7 where: α112_3032'' <: ((α115_3039^7,) -> α116_3040^7), α111_2893'' <: ((α112_3032'',) -> α114_3041^7)}›)› where: α112_3032'' <: ((α115_3042'',) -> α116_3043''), α111_2893'' <: ((α112_3032'',) -> α114_3044'')}  <!<  (‘N'' -> ‘N'')
//│ ╟── while constraining:  ‹∀ 4. {‹∀ 5. (α113_3038^6 -> ‹∀ 6. {α116_3040^7 where: α112_3032'' <: ((α115_3039^7,) -> α116_3040^7), α111_2893'' <: ((α112_3032'',) -> α114_3041^7)}›)› where: α112_3032'' <: ((α115_3035^6,) -> α116_3036^6), α111_2893'' <: ((α112_3032'',) -> α114_3037^6)}›  <!<  (‘N'' -> ‘N'')
//│ ╟── while constraining:  (α112_3032'' -> ‹∀ 4. {‹∀ 5. (α113_3038^6 -> ‹∀ 6. {α116_3040^7 where: α112_3032'' <: ((α115_3039^7,) -> α116_3040^7), α111_2893'' <: ((α112_3032'',) -> α114_3041^7)}›)› where: α112_3032'' <: ((α115_3035^6,) -> α116_3036^6), α111_2893'' <: ((α112_3032'',) -> α114_3037^6)}›)  <!<  ((‘N'' -> ‘N'') -> (‘N'' -> ‘N''))
//│ ╟── while constraining:  ‹∀ 3. (α112_2822'''' -> ‹∀ 4. {‹∀ 5. (α113_2897^6 -> ‹∀ 6. {α116_2899^7 where: α112_2822'''' <: ((α115_2898^7,) -> α116_2899^7), α111_2893'' <: ((α112_2822'''',) -> α114_2900^7)}›)› where: α112_2822'''' <: ((α115_2894^6,) -> α116_2895^6), α111_2893'' <: ((α112_2822'''',) -> α114_2896^6)}›)›  <!<  ((‘N'' -> ‘N'') -> (‘N'' -> ‘N''))
//│ ╟── while constraining:  ‹∀ 2. ‹∀ 3. (α112_2822'''' -> ‹∀ 4. {‹∀ 5. (α113_2897^6 -> ‹∀ 6. {α116_2899^7 where: α112_2822'''' <: ((α115_2898^7,) -> α116_2899^7), α111_2893'' <: ((α112_2822'''',) -> α114_2900^7)}›)› where: α112_2822'''' <: ((α115_2894^6,) -> α116_2895^6), α111_2893'' <: ((α112_2822'''',) -> α114_2896^6)}›)››  <!<  ((‘N'' -> ‘N'') -> (‘N'' -> ‘N''))
//│ ╟── while constraining:  α1097_2821''  <!<  ((‘N'' -> ‘N'') -> (‘N'' -> ‘N''))
//│ ╟── while constraining:  (α1069_2820'' -> α1097_2821'')  <!<  (Int -> ((‘N'' -> ‘N'') -> (‘N'' -> ‘N'')))
//│ ╟── while constraining:  to_ch_s1068_2819''  <!<  (Int -> ((‘N'' -> ‘N'') -> (‘N'' -> ‘N'')))
//│ ╟── while constraining:  ‹∀ 0. to_ch_s1068'›  <!<  (Int -> ((‘N'' -> ‘N'') -> (‘N'' -> ‘N'')))
//│ ╟── while constraining:  ‹∀ 0. to_ch_s1068'›  <!<  ‹∀ 0. (Int -> (('N109' -> 'N109') -> ('N109' -> 'N109')))›
//│ ╟── while constraining:  ‹∀ 0. to_ch_s1068'›  <!<  (Int -> ChurchInt)
//│ ╟── while constraining:  ‹∀ 0. ‹∀ 0. to_ch_s1068'››  <!<  (Int -> ChurchInt)
//│ ╙── while constraining:  ‹∀ 0. ‹∀ 0. to_ch_s1068'››  <!<  ‹∀ 0. (Int -> ChurchInt)›
//│          = [Function: to_ch_s]

to_church = to_ch_mix
//│ int -> (forall 'a, 'b. ('N -> 'N & 'N -> anything & 'a) -> (forall 'c, 'd. ('d -> (forall 'a, 'b, 'd, 'e, 'f. ('f
//│   where
//│     'a <: 'e -> 'f
//│     'b <: 'a -> 'd -> 'e))
//│   where
//│     'a <: 'c -> anything
//│     'b <: 'a -> 'd -> 'c)) | ChurchInt)
//│   <:  to_church:
//│ int -> ChurchInt
//│          = [Function: to_ch_mix]

rec def to_ch n =
  succD (to_ch n)
//│ to_ch: anything -> (forall 'M. ('M -> 'M) -> 'M -> 'M)
//│      = [Function: to_ch2]


