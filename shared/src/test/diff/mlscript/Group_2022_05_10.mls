
def f x = (x 1, x "ok")
//│ f: ("ok" -> 'a & 1 -> 'b) -> ('b, 'a,)
//│  = [Function: f]

f (fun x -> (x, x))
//│ res: ((1, 1,), ("ok", "ok",),)
//│    = [ [ 1, 1 ], [ 'ok', 'ok' ] ]

(fun id -> id id 0) (fun x -> x)
//│ res: 0
//│    = 0

fun id -> id id 0
//│ res: ('a -> 0 -> 'b & 'a) -> 'b
//│    = [Function: res]

fun x -> x
//│ res: 'a -> 'a
//│    = [Function: res]

// forall 'a. 'a -> 'a  <:  'a1 -> 0 -> 'b1 & 'a1
// i.e.
//    forall 'a. 'a -> 'a  <:  'a1 -> 0 -> 'b1
//    forall 'a. 'a -> 'a  <:  'a1
// i.e.
//    'a2 -> 'a2  <:  'a1 -> 0 -> 'b1
//    'a3 -> 'a3  <:  'a1


def g x = x (fun x -> x)
//│ g: ((forall 'a. 'a -> 'a) -> 'b) -> 'b
//│  = [Function: g]


def g x y = x (fun x -> y x)
//│ ╔══[ERROR] Cyclic-looking constraint while typing application
//│ ║  l.36: 	def g x y = x (fun x -> y x)
//│ ║        	                        ^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  α76'  <:  ((α79',) -> α80')    TypeVariable  FunctionType
//│ ╙──  ... looks like:  α76'  <:  ((α77'',) -> α78'')
//│ g: ((anything -> error) -> 'a) -> anything -> 'a
//│  = [Function: g1]


self x = x x
//│ self: ('a -> 'b & 'a) -> 'b
//│     = [Function: self]

:e
self self
//│ ╔══[ERROR] Cyclic-looking constraint while typing application
//│ ║  l.52: 	self self
//│ ║        	^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ∀ 0. (α91' -> α92')  <:  α102    PolymorphicType  TypeVariable
//│ ╙──  ... looks like:  ∀ 0. (α91' -> α92')  <:  α91'
//│ res: error
//│ Runtime error:
//│   RangeError: Maximum call stack size exceeded

