:NoJS

// TODO investigate why this makes many tests fail:
:GeneralizeCurriedFunctions
:NoRecursiveTypes


// ------------ Dummy classes to represent the types in the examples ------------

class List[a]
  method Get: a
//│ Defined class List[+a]
//│ Declared List.Get: List['a] -> 'a

// Used to represent `::`
def cons: 'a -> List['a] -> List['a]
//│ cons: 'a -> List['a] -> List['a]

// Used to represent `[]`
def nil: List['a]
//│ nil: List[nothing]

def concat: string -> List[string] -> string
//│ concat: string -> List[string] -> string


// ------------ Examples ------------


// (* s  starts a sequence, cps style *)
def s k = k () nil
//│ s: (() -> List[nothing] -> 'a & 'a) -> (forall 'a, 'b. ('b
//│   where
//│     'a <: () -> List[nothing] -> 'b))

def insert v () acu k = k () (cons v acu)
//│ insert: 'b -> () -> (forall 'c, 'd. (List['c] & 'd) -> (forall 'c. (() -> List[nothing] -> 'c & 'c) -> (forall 'b, 'c, 'd, 'a, 'e. ('e
//│   where
//│     'b <: 'a
//│     'd <: List['a]
//│     'c <: () -> List['a] -> 'e))))

// (* x  inserts "x" in the acu *)
def x () = insert "x" ()
//│ x: () -> (forall 'b, 'c. (List['b] & 'c) -> (forall 'b. (() -> List[nothing] -> 'b & 'b) -> (forall 'b, 'c, 'd, 'a, 'e. ('e
//│   where
//│     'd <: 'a
//│     'c <: List['a]
//│     'b <: () -> List['a] -> 'e))))

// (* We call x a 'token', in the sequence. *)

// (* e  ends the sequence. It builds a token that can be inserted in another sequence or that can be printed. *)
def e () acu = insert (concat "," acu)
//│ e: () -> List[string] -> () -> (forall 'b, 'c. (List['b] & 'c) -> (forall 'b. (() -> List[nothing] -> 'b & 'b) -> (forall 'b, 'c, 'd, 'a, 'e. ('e
//│   where
//│     'd <: 'a
//│     'c <: List['a]
//│     'b <: () -> List['a] -> 'e))))


// (* Prints a token *)
def print t = t () nil (fun () -> fun r -> log (concat "," r))
//│ print: (() -> List[nothing] -> (() -> List[string] -> unit) -> 'a & 'a) -> (forall 'a, 'b. ('b
//│   where
//│     'a <: () -> List[nothing] -> (() -> List[string] -> unit) -> 'b))

// Added by me:
s x x (s x x e)
//│ /!!!\ Uncaught error: java.util.NoSuchElementException: key not found: List
//│ 	at: scala.collection.immutable.BitmapIndexedMapNode.apply(HashMap.scala:631)
//│ 	at: scala.collection.immutable.HashMap.apply(HashMap.scala:132)
//│ 	at: mlscript.TyperDatatypes$TypeRef.expandWith(TyperDatatypes.scala:334)
//│ 	at: mlscript.TyperDatatypes$TypeRef.expand(TyperDatatypes.scala:332)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$65(ConstraintSolver.scala:675)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$65$adapted(ConstraintSolver.scala:432)
//│ 	at: mlscript.utils.package$GenHelper$.$bar$greater$extension(package.scala:101)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$62(ConstraintSolver.scala:432)
//│ 	at: scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:30)


def test8  = (s x x (s x x e) x (s x x x e) e)
//│ /!!!\ Uncaught error: java.util.NoSuchElementException: key not found: List
//│ 	at: scala.collection.immutable.BitmapIndexedMapNode.apply(HashMap.scala:631)
//│ 	at: scala.collection.immutable.HashMap.apply(HashMap.scala:132)
//│ 	at: mlscript.TyperDatatypes$TypeRef.expandWith(TyperDatatypes.scala:334)
//│ 	at: mlscript.TyperDatatypes$TypeRef.expand(TyperDatatypes.scala:332)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$65(ConstraintSolver.scala:675)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$65$adapted(ConstraintSolver.scala:432)
//│ 	at: mlscript.utils.package$GenHelper$.$bar$greater$extension(package.scala:101)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$62(ConstraintSolver.scala:432)
//│ 	at: scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:30)

print test8
//│ ╔══[ERROR] identifier not found: test8
//│ ║  l.96: 	print test8
//│ ╙──      	      ^^^^^
//│ res: 'a
//│   where
//│     'b <: () -> List[nothing] -> (() -> List[string] -> unit) -> 'a


def test14 = (s x x x x x x x x x x x x x x e)
//│ /!!!\ Uncaught error: java.util.NoSuchElementException: key not found: List
//│ 	at: scala.collection.immutable.BitmapIndexedMapNode.apply(HashMap.scala:631)
//│ 	at: scala.collection.immutable.HashMap.apply(HashMap.scala:132)
//│ 	at: mlscript.TyperDatatypes$TypeRef.expandWith(TyperDatatypes.scala:334)
//│ 	at: mlscript.TyperDatatypes$TypeRef.expand(TyperDatatypes.scala:332)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$65(ConstraintSolver.scala:675)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$65$adapted(ConstraintSolver.scala:432)
//│ 	at: mlscript.utils.package$GenHelper$.$bar$greater$extension(package.scala:101)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$62(ConstraintSolver.scala:432)
//│ 	at: scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:30)

def test16 = (s x x x x x x x x x x x x x x x x e)
//│ /!!!\ Uncaught error: java.util.NoSuchElementException: key not found: List
//│ 	at: scala.collection.immutable.BitmapIndexedMapNode.apply(HashMap.scala:631)
//│ 	at: scala.collection.immutable.HashMap.apply(HashMap.scala:132)
//│ 	at: mlscript.TyperDatatypes$TypeRef.expandWith(TyperDatatypes.scala:334)
//│ 	at: mlscript.TyperDatatypes$TypeRef.expand(TyperDatatypes.scala:332)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$65(ConstraintSolver.scala:675)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$65$adapted(ConstraintSolver.scala:432)
//│ 	at: mlscript.utils.package$GenHelper$.$bar$greater$extension(package.scala:101)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$62(ConstraintSolver.scala:432)
//│ 	at: scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:30)

// (* This is too much for the type-checker. *)
def test18 = (s x x x x x x x x x x x x x x x x x x e)
//│ /!!!\ Uncaught error: java.util.NoSuchElementException: key not found: List
//│ 	at: scala.collection.immutable.BitmapIndexedMapNode.apply(HashMap.scala:631)
//│ 	at: scala.collection.immutable.HashMap.apply(HashMap.scala:132)
//│ 	at: mlscript.TyperDatatypes$TypeRef.expandWith(TyperDatatypes.scala:334)
//│ 	at: mlscript.TyperDatatypes$TypeRef.expand(TyperDatatypes.scala:332)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$65(ConstraintSolver.scala:675)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$65$adapted(ConstraintSolver.scala:432)
//│ 	at: mlscript.utils.package$GenHelper$.$bar$greater$extension(package.scala:101)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$62(ConstraintSolver.scala:432)
//│ 	at: scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:30)


// (* A function that receives a token *)
def f t = (s x x t x x e)
//│ /!!!\ Uncaught error: java.util.NoSuchElementException: key not found: List
//│ 	at: scala.collection.immutable.BitmapIndexedMapNode.apply(HashMap.scala:631)
//│ 	at: scala.collection.immutable.HashMap.apply(HashMap.scala:132)
//│ 	at: mlscript.TyperDatatypes$TypeRef.expandWith(TyperDatatypes.scala:334)
//│ 	at: mlscript.TyperDatatypes$TypeRef.expand(TyperDatatypes.scala:332)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$65(ConstraintSolver.scala:675)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$65$adapted(ConstraintSolver.scala:432)
//│ 	at: mlscript.utils.package$GenHelper$.$bar$greater$extension(package.scala:101)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$62(ConstraintSolver.scala:432)
//│ 	at: scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:30)

// (* If the token is used twice, we must reveive two arguments *)
def g t1 t2 = (s x x t1 x (s x t2 x e) e)
//│ /!!!\ Uncaught error: java.util.NoSuchElementException: key not found: List
//│ 	at: scala.collection.immutable.BitmapIndexedMapNode.apply(HashMap.scala:631)
//│ 	at: scala.collection.immutable.HashMap.apply(HashMap.scala:132)
//│ 	at: mlscript.TyperDatatypes$TypeRef.expandWith(TyperDatatypes.scala:334)
//│ 	at: mlscript.TyperDatatypes$TypeRef.expand(TyperDatatypes.scala:332)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$65(ConstraintSolver.scala:675)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$65$adapted(ConstraintSolver.scala:432)
//│ 	at: mlscript.utils.package$GenHelper$.$bar$greater$extension(package.scala:101)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$62(ConstraintSolver.scala:432)
//│ 	at: scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:30)

// (* This does not type. It requires first-class polymorphism. *)
def h t = g t t
//│ ╔══[ERROR] identifier not found: g
//│ ║  l.175: 	def h t = g t t
//│ ╙──       	          ^
//│ h: anything -> error

