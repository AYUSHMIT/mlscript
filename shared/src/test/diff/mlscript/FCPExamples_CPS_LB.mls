:NoJS

// TODO investigate why this makes many tests fail:
:GeneralizeCurriedFunctions
:NoRecursiveTypes


// ------------ Dummy classes to represent the types in the examples ------------

class List[a]
  method Get: a
//│ Defined class List[+a]
//│ Declared List.Get: List['a] -> 'a

// Used to represent `::`
def cons: 'a -> List['a] -> List['a]
//│ cons: 'a -> List['a] -> List['a]

// Used to represent `[]`
def nil: List['a]
//│ nil: List[nothing]

def concat: string -> List[string] -> string
//│ concat: string -> List[string] -> string


// ------------ Examples ------------


// (* s  starts a sequence, cps style *)
def s k = k () nil
//│ s: (() -> List[nothing] -> 'a) -> 'a

def insert v () acu k = k () (cons v acu)
//│ insert: 'b -> (forall 'b, 'c. (() -> (forall 'b, 'c. ((List['c] & 'c) -> (forall 'b, 'c, 'a, 'd. ((() -> List['a] -> 'd) -> 'd
//│   where
//│     'b <: 'a
//│     'c <: List['a]))
//│   where
//│     'b <: 'c))
//│   where
//│     'b <: 'c))

// (* x  inserts "x" in the acu *)
def x () = insert "x" ()
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrainImpl$65(ConstraintSolver.scala:479)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrainImpl$65$adapted(ConstraintSolver.scala:449)
//│ 	at: mlscript.utils.package$GenHelper$.$bar$greater$extension(package.scala:101)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrainImpl$62(ConstraintSolver.scala:449)
//│ 	at: scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:30)
//│ 	at: mlscript.ConstraintSolver.recImpl$1(ConstraintSolver.scala:408)
//│ 	at: mlscript.ConstraintSolver.rec$1(ConstraintSolver.scala:391)
//│ 	at: mlscript.ConstraintSolver.constrainImpl(ConstraintSolver.scala:901)

// (* We call x a 'token', in the sequence. *)

// (* e  ends the sequence. It builds a token that can be inserted in another sequence or that can be printed. *)
def e () acu = insert (concat "," acu)
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrainImpl$65(ConstraintSolver.scala:479)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrainImpl$65$adapted(ConstraintSolver.scala:449)
//│ 	at: mlscript.utils.package$GenHelper$.$bar$greater$extension(package.scala:101)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrainImpl$62(ConstraintSolver.scala:449)
//│ 	at: scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:30)
//│ 	at: mlscript.ConstraintSolver.recImpl$1(ConstraintSolver.scala:408)
//│ 	at: mlscript.ConstraintSolver.rec$1(ConstraintSolver.scala:391)
//│ 	at: mlscript.ConstraintSolver.constrainImpl(ConstraintSolver.scala:901)


// (* Prints a token *)
def print t = t () nil (fun () -> fun r -> log (concat "," r))
//│ print: (() -> List[nothing] -> (() -> List[string] -> unit) -> 'a) -> 'a

// Added by me:
// :e // FIXME? refreshing-extr
s x x (s x x e)
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.73: 	s x x (s x x e)
//│ ╙──      	  ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.73: 	s x x (s x x e)
//│ ╙──      	    ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.73: 	s x x (s x x e)
//│ ╙──      	         ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.73: 	s x x (s x x e)
//│ ╙──      	           ^
//│ ╔══[ERROR] identifier not found: e
//│ ║  l.73: 	s x x (s x x e)
//│ ╙──      	             ^
//│ res: error


// :e // FIXME? refreshing-extr
def test8  = (s x x (s x x e) x (s x x x e) e)
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.81: 	def test8  = (s x x (s x x e) x (s x x x e) e)
//│ ╙──      	                ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.81: 	def test8  = (s x x (s x x e) x (s x x x e) e)
//│ ╙──      	                  ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.81: 	def test8  = (s x x (s x x e) x (s x x x e) e)
//│ ╙──      	                       ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.81: 	def test8  = (s x x (s x x e) x (s x x x e) e)
//│ ╙──      	                         ^
//│ ╔══[ERROR] identifier not found: e
//│ ║  l.81: 	def test8  = (s x x (s x x e) x (s x x x e) e)
//│ ╙──      	                           ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.81: 	def test8  = (s x x (s x x e) x (s x x x e) e)
//│ ╙──      	                              ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.81: 	def test8  = (s x x (s x x e) x (s x x x e) e)
//│ ╙──      	                                   ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.81: 	def test8  = (s x x (s x x e) x (s x x x e) e)
//│ ╙──      	                                     ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.81: 	def test8  = (s x x (s x x e) x (s x x x e) e)
//│ ╙──      	                                       ^
//│ ╔══[ERROR] identifier not found: e
//│ ║  l.81: 	def test8  = (s x x (s x x e) x (s x x x e) e)
//│ ╙──      	                                         ^
//│ ╔══[ERROR] identifier not found: e
//│ ║  l.81: 	def test8  = (s x x (s x x e) x (s x x x e) e)
//│ ╙──      	                                            ^
//│ test8: error

print test8
//│ res: error


:e // FIXME? refreshing-extr
def test14 = (s x x x x x x x x x x x x x x e)
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.95: 	def test14 = (s x x x x x x x x x x x x x x e)
//│ ╙──      	                ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.95: 	def test14 = (s x x x x x x x x x x x x x x e)
//│ ╙──      	                  ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.95: 	def test14 = (s x x x x x x x x x x x x x x e)
//│ ╙──      	                    ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.95: 	def test14 = (s x x x x x x x x x x x x x x e)
//│ ╙──      	                      ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.95: 	def test14 = (s x x x x x x x x x x x x x x e)
//│ ╙──      	                        ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.95: 	def test14 = (s x x x x x x x x x x x x x x e)
//│ ╙──      	                          ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.95: 	def test14 = (s x x x x x x x x x x x x x x e)
//│ ╙──      	                            ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.95: 	def test14 = (s x x x x x x x x x x x x x x e)
//│ ╙──      	                              ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.95: 	def test14 = (s x x x x x x x x x x x x x x e)
//│ ╙──      	                                ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.95: 	def test14 = (s x x x x x x x x x x x x x x e)
//│ ╙──      	                                  ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.95: 	def test14 = (s x x x x x x x x x x x x x x e)
//│ ╙──      	                                    ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.95: 	def test14 = (s x x x x x x x x x x x x x x e)
//│ ╙──      	                                      ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.95: 	def test14 = (s x x x x x x x x x x x x x x e)
//│ ╙──      	                                        ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.95: 	def test14 = (s x x x x x x x x x x x x x x e)
//│ ╙──      	                                          ^
//│ ╔══[ERROR] identifier not found: e
//│ ║  l.95: 	def test14 = (s x x x x x x x x x x x x x x e)
//│ ╙──      	                                            ^
//│ test14: error

:e // FIXME? refreshing-extr
def test16 = (s x x x x x x x x x x x x x x x x e)
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.154: 	def test16 = (s x x x x x x x x x x x x x x x x e)
//│ ╙──       	                ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.154: 	def test16 = (s x x x x x x x x x x x x x x x x e)
//│ ╙──       	                  ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.154: 	def test16 = (s x x x x x x x x x x x x x x x x e)
//│ ╙──       	                    ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.154: 	def test16 = (s x x x x x x x x x x x x x x x x e)
//│ ╙──       	                      ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.154: 	def test16 = (s x x x x x x x x x x x x x x x x e)
//│ ╙──       	                        ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.154: 	def test16 = (s x x x x x x x x x x x x x x x x e)
//│ ╙──       	                          ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.154: 	def test16 = (s x x x x x x x x x x x x x x x x e)
//│ ╙──       	                            ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.154: 	def test16 = (s x x x x x x x x x x x x x x x x e)
//│ ╙──       	                              ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.154: 	def test16 = (s x x x x x x x x x x x x x x x x e)
//│ ╙──       	                                ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.154: 	def test16 = (s x x x x x x x x x x x x x x x x e)
//│ ╙──       	                                  ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.154: 	def test16 = (s x x x x x x x x x x x x x x x x e)
//│ ╙──       	                                    ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.154: 	def test16 = (s x x x x x x x x x x x x x x x x e)
//│ ╙──       	                                      ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.154: 	def test16 = (s x x x x x x x x x x x x x x x x e)
//│ ╙──       	                                        ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.154: 	def test16 = (s x x x x x x x x x x x x x x x x e)
//│ ╙──       	                                          ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.154: 	def test16 = (s x x x x x x x x x x x x x x x x e)
//│ ╙──       	                                            ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.154: 	def test16 = (s x x x x x x x x x x x x x x x x e)
//│ ╙──       	                                              ^
//│ ╔══[ERROR] identifier not found: e
//│ ║  l.154: 	def test16 = (s x x x x x x x x x x x x x x x x e)
//│ ╙──       	                                                ^
//│ test16: error

// (* This is too much for the type-checker. *)
:e // FIXME? refreshing-extr
def test18 = (s x x x x x x x x x x x x x x x x x x e)
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.214: 	def test18 = (s x x x x x x x x x x x x x x x x x x e)
//│ ╙──       	                ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.214: 	def test18 = (s x x x x x x x x x x x x x x x x x x e)
//│ ╙──       	                  ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.214: 	def test18 = (s x x x x x x x x x x x x x x x x x x e)
//│ ╙──       	                    ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.214: 	def test18 = (s x x x x x x x x x x x x x x x x x x e)
//│ ╙──       	                      ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.214: 	def test18 = (s x x x x x x x x x x x x x x x x x x e)
//│ ╙──       	                        ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.214: 	def test18 = (s x x x x x x x x x x x x x x x x x x e)
//│ ╙──       	                          ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.214: 	def test18 = (s x x x x x x x x x x x x x x x x x x e)
//│ ╙──       	                            ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.214: 	def test18 = (s x x x x x x x x x x x x x x x x x x e)
//│ ╙──       	                              ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.214: 	def test18 = (s x x x x x x x x x x x x x x x x x x e)
//│ ╙──       	                                ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.214: 	def test18 = (s x x x x x x x x x x x x x x x x x x e)
//│ ╙──       	                                  ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.214: 	def test18 = (s x x x x x x x x x x x x x x x x x x e)
//│ ╙──       	                                    ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.214: 	def test18 = (s x x x x x x x x x x x x x x x x x x e)
//│ ╙──       	                                      ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.214: 	def test18 = (s x x x x x x x x x x x x x x x x x x e)
//│ ╙──       	                                        ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.214: 	def test18 = (s x x x x x x x x x x x x x x x x x x e)
//│ ╙──       	                                          ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.214: 	def test18 = (s x x x x x x x x x x x x x x x x x x e)
//│ ╙──       	                                            ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.214: 	def test18 = (s x x x x x x x x x x x x x x x x x x e)
//│ ╙──       	                                              ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.214: 	def test18 = (s x x x x x x x x x x x x x x x x x x e)
//│ ╙──       	                                                ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.214: 	def test18 = (s x x x x x x x x x x x x x x x x x x e)
//│ ╙──       	                                                  ^
//│ ╔══[ERROR] identifier not found: e
//│ ║  l.214: 	def test18 = (s x x x x x x x x x x x x x x x x x x e)
//│ ╙──       	                                                    ^
//│ test18: error


// (* A function that receives a token *)
def f t = (s x x t x x e)
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.274: 	def f t = (s x x t x x e)
//│ ╙──       	             ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.274: 	def f t = (s x x t x x e)
//│ ╙──       	               ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.274: 	def f t = (s x x t x x e)
//│ ╙──       	                   ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.274: 	def f t = (s x x t x x e)
//│ ╙──       	                     ^
//│ ╔══[ERROR] identifier not found: e
//│ ║  l.274: 	def f t = (s x x t x x e)
//│ ╙──       	                       ^
//│ f: anything -> error

// (* If the token is used twice, we must reveive two arguments *)
def g t1 t2 = (s x x t1 x (s x t2 x e) e)
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.295: 	def g t1 t2 = (s x x t1 x (s x t2 x e) e)
//│ ╙──       	                 ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.295: 	def g t1 t2 = (s x x t1 x (s x t2 x e) e)
//│ ╙──       	                   ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.295: 	def g t1 t2 = (s x x t1 x (s x t2 x e) e)
//│ ╙──       	                        ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.295: 	def g t1 t2 = (s x x t1 x (s x t2 x e) e)
//│ ╙──       	                             ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.295: 	def g t1 t2 = (s x x t1 x (s x t2 x e) e)
//│ ╙──       	                                  ^
//│ ╔══[ERROR] identifier not found: e
//│ ║  l.295: 	def g t1 t2 = (s x x t1 x (s x t2 x e) e)
//│ ╙──       	                                    ^
//│ ╔══[ERROR] identifier not found: e
//│ ║  l.295: 	def g t1 t2 = (s x x t1 x (s x t2 x e) e)
//│ ╙──       	                                       ^
//│ g: anything -> anything -> error

// (* This does not type. It requires first-class polymorphism. *)
def h t = g t t
//│ h: anything -> error

