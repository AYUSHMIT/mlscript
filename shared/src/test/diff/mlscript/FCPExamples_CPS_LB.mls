:NoJS

// TODO investigate why this makes many tests fail:
:GeneralizeCurriedFunctions
:NoRecursiveTypes


// ------------ Dummy classes to represent the types in the examples ------------

class List[a]
  method Get: a
//│ Defined class List[+a]
//│ Declared List.Get: List['a] -> 'a

// Used to represent `::`
def cons: 'a -> List['a] -> List['a]
//│ cons: 'a -> List['a] -> List['a]

// Used to represent `[]`
def nil: List['a]
//│ nil: List[nothing]

def concat: string -> List[string] -> string
//│ concat: string -> List[string] -> string


// ------------ Examples ------------


// (* s  starts a sequence, cps style *)
def s k = k () nil
//│ s: (() -> List[nothing] -> 'a & 'a) -> (forall 'a, 'b. ('b
//│   where
//│     'a <: () -> List[nothing] -> 'b))

def insert v () acu k = k () (cons v acu)
//│ insert: 'b -> (forall 'b, 'c. (() -> (forall 'b, 'c, 'd. ((List['c] & 'd) -> (forall 'b, 'c, 'd. ((() -> List[nothing] -> 'c & 'c) -> (forall 'b, 'c, 'd, 'a, 'e. ('e
//│   where
//│     'b <: 'a
//│     'd <: List['a]
//│     'c <: () -> List['a] -> 'e))
//│   where
//│     'b <: 'c
//│     'd <: List['c]
//│     'b <: 'c
//│     'd <: List['c]))
//│   where
//│     'b <: 'c
//│     'b <: 'c))
//│   where
//│     'b <: 'c
//│     'b <: 'c))

// (* x  inserts "x" in the acu *)
def x () = insert "x" ()
//│ x: () -> (forall 'b, 'c, 'd. ((List['c] & 'd) -> (forall 'b, 'c, 'd. ((() -> List[nothing] -> 'c & 'c) -> (forall 'b, 'c, 'd, 'a, 'e. ('e
//│   where
//│     'b <: 'a
//│     'd <: List['a]
//│     'c <: () -> List['a] -> 'e))
//│   where
//│     'b <: 'c
//│     'd <: List['c]
//│     'b <: 'c
//│     'd <: List['c]))
//│   where
//│     'b <: 'c
//│     'b <: 'c))

// (* We call x a 'token', in the sequence. *)

// (* e  ends the sequence. It builds a token that can be inserted in another sequence or that can be printed. *)
def e () acu = insert (concat "," acu)
//│ e: () -> List[string] -> (forall 'b, 'c. (() -> (forall 'b, 'c, 'd. ((List['c] & 'd) -> (forall 'b, 'c, 'd. ((() -> List[nothing] -> 'c & 'c) -> (forall 'b, 'c, 'd, 'a, 'e. ('e
//│   where
//│     'b <: 'a
//│     'd <: List['a]
//│     'c <: () -> List['a] -> 'e))
//│   where
//│     'b <: 'c
//│     'd <: List['c]
//│     'b <: 'c
//│     'd <: List['c]))
//│   where
//│     'b <: 'c
//│     'b <: 'c))
//│   where
//│     'b <: 'c
//│     'b <: 'c))


// (* Prints a token *)
def print t = t () nil (fun () -> fun r -> log (concat "," r))
//│ print: (() -> List[nothing] -> (() -> List[string] -> unit) -> 'a & 'a) -> (forall 'a, 'b. ('b
//│   where
//│     'a <: () -> List[nothing] -> (() -> List[string] -> unit) -> 'b))

// Added by me:
:e // FIXME? refreshing-extr
s x x (s x x e)
//│ ╔══[ERROR] Subtyping constraint of the form `?a <: ?b -> ?c` took too many steps and ran out of fuel (5000)
//│ ║  l.100: 	s x x (s x x e)
//│ ║         	^^^^^^^^^^^^^^^
//│ ╟──  + List['a27_4124]
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                            ^^^^^^^^
//│ ╟──  + List['a27_4124]
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                            ^^^^^^^^
//│ ╟──  + List['a27_4124]
//│ ║  l.36: 	def insert v () acu k = k () (cons v acu)
//│ ║        	                              ^^^^^^^^^^
//│ ╟──  + α54_4123
//│ ║  l.36: 	def insert v () acu k = k () (cons v acu)
//│ ║        	                              ^^^^^^^^^^
//│ ╟──  - List['a27_5934]
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                ^^^^^^^^
//│ ╟──  - List['a27_5934]
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                ^^^^^^^^
//│ ╟──  - List['a27_5934]
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                ^^^^^^^^
//│ ╟──  - List['a27_5934]
//│ ╙──  - α49_5929
//│ res: error


:e // FIXME? refreshing-extr
def test8  = (s x x (s x x e) x (s x x x e) e)
//│ ╔══[ERROR] Subtyping constraint of the form `?a <: ?b -> ?c` took too many steps and ran out of fuel (5000)
//│ ║  l.131: 	def test8  = (s x x (s x x e) x (s x x x e) e)
//│ ║         	              ^^^^^^^^^^^^^^^
//│ ╟──  + List['a27_13098']
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                            ^^^^^^^^
//│ ╟──  + List['a27_13098']
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                            ^^^^^^^^
//│ ╟──  + List['a27_13098']
//│ ║  l.36: 	def insert v () acu k = k () (cons v acu)
//│ ║        	                              ^^^^^^^^^^
//│ ╟──  + α54_13097'
//│ ║  l.36: 	def insert v () acu k = k () (cons v acu)
//│ ║        	                              ^^^^^^^^^^
//│ ╟──  - List['a27_14908']
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                ^^^^^^^^
//│ ╟──  - List['a27_14908']
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                ^^^^^^^^
//│ ╟──  - List['a27_14908']
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                ^^^^^^^^
//│ ╟──  - List['a27_14908']
//│ ╙──  - α49_14903'
//│ ╔══[ERROR] Subtyping constraint of the form `?a <: (() -> (forall ?b. ?b -> (forall ?c. ?c))) -> ?d` took too many steps and ran out of fuel (5000)
//│ ║  l.131: 	def test8  = (s x x (s x x e) x (s x x x e) e)
//│ ║         	                                 ^^^^^^^^^
//│ ╟──  + "x"<string>
//│ ║  l.55: 	def x () = insert "x" ()
//│ ║        	                  ^^^
//│ ╟──  + "x"<string>
//│ ║  l.55: 	def x () = insert "x" ()
//│ ║        	                  ^^^
//│ ╟──  + "x"<string>
//│ ╟──  + "x"<string>
//│ ╟──  + "x"<string>
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                                 ^^
//│ ╟──  + "x"<string>
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                     ^^
//│ ╟──  + 'a27_23056'
//│ ╟──  + 'a27_23056'
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                                 ^^
//│ ╟──  - 'a27_23237'
//│ ╟──  - 'a27_23237'
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ╙──      	                     ^^
//│ test8: error

print test8
//│ res: 'a
//│   where
//│     'b <: () -> List[nothing] -> (() -> List[string] -> unit) -> 'a


:e // FIXME? refreshing-extr
def test14 = (s x x x x x x x x x x x x x x e)
//│ ╔══[ERROR] Subtyping constraint of the form `?a <: (() -> (forall ?b. ?b)) -> ?c` took too many steps and ran out of fuel (5000)
//│ ║  l.192: 	def test14 = (s x x x x x x x x x x x x x x e)
//│ ║         	              ^^^^^^^^^
//│ ╟──  + List['a27_31115']
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                            ^^^^^^^^
//│ ╟──  + List['a27_31115']
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                            ^^^^^^^^
//│ ╟──  + List['a27_31115']
//│ ║  l.36: 	def insert v () acu k = k () (cons v acu)
//│ ║        	                              ^^^^^^^^^^
//│ ╟──  + α54_31114'
//│ ║  l.36: 	def insert v () acu k = k () (cons v acu)
//│ ║        	                              ^^^^^^^^^^
//│ ╙──  - α49_32215'
//│ ╔══[ERROR] Subtyping constraint of the form `?a <: (() -> (forall ?b. ?b)) -> ?c` took too many steps and ran out of fuel (5000)
//│ ║  l.192: 	def test14 = (s x x x x x x x x x x x x x x e)
//│ ║         	              ^^^^^^^^^^^
//│ ╟──  + 'a27_36918'
//│ ╟──  + 'a27_36918'
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                                 ^^
//│ ╟──  - 'a27_37076'
//│ ╟──  - 'a27_37076'
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ╙──      	                     ^^
//│ ╔══[ERROR] Subtyping constraint of the form `?a <: (() -> (forall ?b. ?b)) -> ?c` took too many steps and ran out of fuel (5000)
//│ ║  l.192: 	def test14 = (s x x x x x x x x x x x x x x e)
//│ ║         	              ^^^^^^^^^^^^^
//│ ╟──  + "x"<string>
//│ ║  l.55: 	def x () = insert "x" ()
//│ ║        	                  ^^^
//│ ╟──  + "x"<string>
//│ ║  l.55: 	def x () = insert "x" ()
//│ ║        	                  ^^^
//│ ╟──  + "x"<string>
//│ ╟──  + "x"<string>
//│ ╟──  + "x"<string>
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                                 ^^
//│ ╟──  + "x"<string>
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                     ^^
//│ ╟──  + "x"<string>
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                                 ^^
//│ ╟──  + "x"<string>
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                     ^^
//│ ╟──  + "x"<string>
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                                 ^^
//│ ╟──  + "x"<string>
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                     ^^
//│ ╟──  + 'a27_39439'
//│ ╟──  + 'a27_39439'
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                                 ^^
//│ ╟──  - 'a27_39557'
//│ ╟──  - 'a27_39557'
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ╙──      	                     ^^
//│ test14: error

:e // FIXME? refreshing-extr
def test16 = (s x x x x x x x x x x x x x x x x e)
//│ ╔══[ERROR] Subtyping constraint of the form `?a <: (() -> (forall ?b. ?b)) -> ?c` took too many steps and ran out of fuel (5000)
//│ ║  l.260: 	def test16 = (s x x x x x x x x x x x x x x x x e)
//│ ║         	              ^^^^^^^^^
//│ ╟──  + List['a27_45784']
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                            ^^^^^^^^
//│ ╟──  + List['a27_45784']
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                            ^^^^^^^^
//│ ╟──  + List['a27_45784']
//│ ║  l.36: 	def insert v () acu k = k () (cons v acu)
//│ ║        	                              ^^^^^^^^^^
//│ ╟──  + α54_45783'
//│ ║  l.36: 	def insert v () acu k = k () (cons v acu)
//│ ║        	                              ^^^^^^^^^^
//│ ╙──  - α49_46884'
//│ ╔══[ERROR] Subtyping constraint of the form `?a <: (() -> (forall ?b. ?b)) -> ?c` took too many steps and ran out of fuel (5000)
//│ ║  l.260: 	def test16 = (s x x x x x x x x x x x x x x x x e)
//│ ║         	              ^^^^^^^^^^^
//│ ╟──  + 'a27_51587'
//│ ╟──  + 'a27_51587'
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                                 ^^
//│ ╟──  - 'a27_51745'
//│ ╟──  - 'a27_51745'
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ╙──      	                     ^^
//│ ╔══[ERROR] Subtyping constraint of the form `?a <: (() -> (forall ?b. ?b)) -> ?c` took too many steps and ran out of fuel (5000)
//│ ║  l.260: 	def test16 = (s x x x x x x x x x x x x x x x x e)
//│ ║         	              ^^^^^^^^^^^^^
//│ ╟──  + "x"<string>
//│ ║  l.55: 	def x () = insert "x" ()
//│ ║        	                  ^^^
//│ ╟──  + "x"<string>
//│ ║  l.55: 	def x () = insert "x" ()
//│ ║        	                  ^^^
//│ ╟──  + "x"<string>
//│ ╟──  + "x"<string>
//│ ╟──  + "x"<string>
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                                 ^^
//│ ╟──  + "x"<string>
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                     ^^
//│ ╟──  + "x"<string>
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                                 ^^
//│ ╟──  + "x"<string>
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                     ^^
//│ ╟──  + "x"<string>
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                                 ^^
//│ ╟──  + "x"<string>
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                     ^^
//│ ╟──  + 'a27_54108'
//│ ╟──  + 'a27_54108'
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                                 ^^
//│ ╟──  - 'a27_54226'
//│ ╟──  - 'a27_54226'
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ╙──      	                     ^^
//│ test16: error

// (* This is too much for the type-checker. *)
:e // FIXME? refreshing-extr
def test18 = (s x x x x x x x x x x x x x x x x x x e)
//│ ╔══[ERROR] Subtyping constraint of the form `?a <: (() -> (forall ?b. ?b)) -> ?c` took too many steps and ran out of fuel (5000)
//│ ║  l.329: 	def test18 = (s x x x x x x x x x x x x x x x x x x e)
//│ ║         	              ^^^^^^^^^
//│ ╟──  + List['a27_60455']
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                            ^^^^^^^^
//│ ╟──  + List['a27_60455']
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                            ^^^^^^^^
//│ ╟──  + List['a27_60455']
//│ ║  l.36: 	def insert v () acu k = k () (cons v acu)
//│ ║        	                              ^^^^^^^^^^
//│ ╟──  + α54_60454'
//│ ║  l.36: 	def insert v () acu k = k () (cons v acu)
//│ ║        	                              ^^^^^^^^^^
//│ ╙──  - α49_61555'
//│ ╔══[ERROR] Subtyping constraint of the form `?a <: (() -> (forall ?b. ?b)) -> ?c` took too many steps and ran out of fuel (5000)
//│ ║  l.329: 	def test18 = (s x x x x x x x x x x x x x x x x x x e)
//│ ║         	              ^^^^^^^^^^^
//│ ╟──  + 'a27_66258'
//│ ╟──  + 'a27_66258'
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                                 ^^
//│ ╟──  - 'a27_66416'
//│ ╟──  - 'a27_66416'
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ╙──      	                     ^^
//│ ╔══[ERROR] Subtyping constraint of the form `?a <: (() -> (forall ?b. ?b)) -> ?c` took too many steps and ran out of fuel (5000)
//│ ║  l.329: 	def test18 = (s x x x x x x x x x x x x x x x x x x e)
//│ ║         	              ^^^^^^^^^^^^^
//│ ╟──  + "x"<string>
//│ ║  l.55: 	def x () = insert "x" ()
//│ ║        	                  ^^^
//│ ╟──  + "x"<string>
//│ ║  l.55: 	def x () = insert "x" ()
//│ ║        	                  ^^^
//│ ╟──  + "x"<string>
//│ ╟──  + "x"<string>
//│ ╟──  + "x"<string>
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                                 ^^
//│ ╟──  + "x"<string>
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                     ^^
//│ ╟──  + "x"<string>
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                                 ^^
//│ ╟──  + "x"<string>
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                     ^^
//│ ╟──  + "x"<string>
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                                 ^^
//│ ╟──  + "x"<string>
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                     ^^
//│ ╟──  + 'a27_68779'
//│ ╟──  + 'a27_68779'
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ║        	                                 ^^
//│ ╟──  - 'a27_68897'
//│ ╟──  - 'a27_68897'
//│ ║  l.16: 	def cons: 'a -> List['a] -> List['a]
//│ ╙──      	                     ^^
//│ test18: error


// (* A function that receives a token *)
def f t = (s x x t x x e)
//│ f: (() -> List[nothing] -> 'b & () -> List["x"] -> (() -> (forall 'b, 'c, 'd. ((List['b] & 'd) -> (forall 'b, 'c, 'd, 'e. ((() -> List[nothing] -> 'b & 'e) -> (forall 'c, 'd, 'e, 'a, 'f. ('f
//│   where
//│     'c <: 'a
//│     'd <: List['a]
//│     'e <: () -> List['a] -> 'f))
//│   where
//│     'c <: 'b
//│     'd <: List['b]
//│     'c <: 'b
//│     'd <: List['b]))
//│   where
//│     'c <: 'b
//│     'c <: 'b))) -> (() -> (forall 'b, 'c, 'd. ((List['b] & 'd) -> (forall 'b, 'c, 'd, 'e. ((() -> List[nothing] -> 'b & 'e) -> (forall 'c, 'd, 'e, 'a, 'f. ('f
//│   where
//│     'c <: 'a
//│     'd <: List['a]
//│     'e <: () -> List['a] -> 'f))
//│   where
//│     'c <: 'b
//│     'd <: List['b]
//│     'c <: 'b
//│     'd <: List['b]))
//│   where
//│     'c <: 'b
//│     'c <: 'b))) -> (() -> List[string] -> (forall 'b, 'g. (() -> (forall 'b, 'g, 'h. ((List['b] & 'h) -> (forall 'b, 'g, 'h. ((() -> List[nothing] -> 'b & 'b) -> (forall 'b, 'g, 'h, 'a0, 'i. ('i
//│   where
//│     'g <: 'a0
//│     'h <: List['a0]
//│     'b <: () -> List['a0] -> 'i))
//│   where
//│     'g <: 'b
//│     'h <: List['b]
//│     'g <: 'b
//│     'h <: List['b]))
//│   where
//│     'g <: 'b
//│     'g <: 'b))
//│   where
//│     'g <: 'b
//│     'g <: 'b))) -> 'b & 'j) -> (forall 'b, 'j. ('k
//│   where
//│     'j <: () -> List[nothing] -> 'b & () -> List["x"] -> (() -> (forall 'b, 'c, 'd. ((List['b] & 'd) -> (forall 'b, 'c, 'd, 'e. ((() -> List[nothing] -> 'b & 'e) -> (forall 'c, 'd, 'e, 'a, 'f. ('f
//│   where
//│     'c <: 'a
//│     'd <: List['a]
//│     'e <: () -> List['a] -> 'f))
//│   where
//│     'c <: 'b
//│     'd <: List['b]
//│     'c <: 'b
//│     'd <: List['b]))
//│   where
//│     'c <: 'b
//│     'c <: 'b))) -> (() -> (forall 'b, 'c, 'd. ((List['b] & 'd) -> (forall 'b, 'c, 'd, 'e. ((() -> List[nothing] -> 'b & 'e) -> (forall 'c, 'd, 'e, 'a, 'f. ('f
//│   where
//│     'c <: 'a
//│     'd <: List['a]
//│     'e <: () -> List['a] -> 'f))
//│   where
//│     'c <: 'b
//│     'd <: List['b]
//│     'c <: 'b
//│     'd <: List['b]))
//│   where
//│     'c <: 'b
//│     'c <: 'b))) -> (() -> List[string] -> (forall 'b, 'g. (() -> (forall 'b, 'g, 'h. ((List['b] & 'h) -> (forall 'b, 'g, 'h. ((() -> List[nothing] -> 'b & 'b) -> (forall 'b, 'g, 'h, 'a0, 'i. ('i
//│   where
//│     'g <: 'a0
//│     'h <: List['a0]
//│     'b <: () -> List['a0] -> 'i))
//│   where
//│     'g <: 'b
//│     'h <: List['b]
//│     'g <: 'b
//│     'h <: List['b]))
//│   where
//│     'g <: 'b
//│     'g <: 'b))
//│   where
//│     'g <: 'b
//│     'g <: 'b))) -> 'k))

// (* If the token is used twice, we must reveive two arguments *)
def g t1 t2 = (s x x t1 x (s x t2 x e) e)
//│ g: (() -> List[nothing] -> 'b & () -> List["x"] -> (() -> (forall 'b, 'c, 'd. ((List['b] & 'd) -> (forall 'b, 'c, 'd, 'e. ((() -> List[nothing] -> 'b & 'e) -> (forall 'c, 'd, 'e, 'a, 'f. ('f
//│   where
//│     'c <: 'a
//│     'd <: List['a]
//│     'e <: () -> List['a] -> 'f))
//│   where
//│     'c <: 'b
//│     'd <: List['b]
//│     'c <: 'b
//│     'd <: List['b]))
//│   where
//│     'c <: 'b
//│     'c <: 'b))) -> nothing -> (() -> List[string] -> (forall 'b, 'g. (() -> (forall 'b, 'g, 'h. ((List['b] & 'h) -> (forall 'b, 'g, 'h, 'i. ((() -> List[nothing] -> 'b & 'i) -> (forall 'g, 'h, 'i, 'a0, 'j. ('j
//│   where
//│     'g <: 'a0
//│     'h <: List['a0]
//│     'i <: () -> List['a0] -> 'j))
//│   where
//│     'g <: 'b
//│     'h <: List['b]
//│     'g <: 'b
//│     'h <: List['b]))
//│   where
//│     'g <: 'b
//│     'g <: 'b))
//│   where
//│     'g <: 'b
//│     'g <: 'b))) -> 'b & 'k) -> (forall 'b, 'k. ((() -> List[nothing] -> 'b & () -> List["x"] -> (() -> (forall 'b, 'c, 'd. ((List['b] & 'd) -> (forall 'b, 'c, 'd, 'e. ((() -> List[nothing] -> 'b & 'e) -> (forall 'c, 'd, 'e, 'a, 'f. ('f
//│   where
//│     'c <: 'a
//│     'd <: List['a]
//│     'e <: () -> List['a] -> 'f))
//│   where
//│     'c <: 'b
//│     'd <: List['b]
//│     'c <: 'b
//│     'd <: List['b]))
//│   where
//│     'c <: 'b
//│     'c <: 'b))) -> (() -> List[string] -> (forall 'b, 'g. (() -> (forall 'b, 'g, 'h. ((List['b] & 'h) -> (forall 'b, 'g, 'h, 'i. ((() -> List[nothing] -> 'b & 'i) -> (forall 'g, 'h, 'i, 'a0, 'j. ('j
//│   where
//│     'g <: 'a0
//│     'h <: List['a0]
//│     'i <: () -> List['a0] -> 'j))
//│   where
//│     'g <: 'b
//│     'h <: List['b]
//│     'g <: 'b
//│     'h <: List['b]))
//│   where
//│     'g <: 'b
//│     'g <: 'b))
//│   where
//│     'g <: 'b
//│     'g <: 'b))) -> 'b & 'l) -> (forall 'k, 'l, 'm, 'n. ('o
//│   where
//│     'm :> forall 'b, 'p, 'q, 'r. ((() -> List[nothing] -> 'b & 'r) -> (forall 'p, 'q, 'r, 'a1, 's. ('s
//│   where
//│     'p <: 'a1
//│     'q <: List['a1]
//│     'r <: () -> List['a1] -> 's))
//│   where
//│     'p <: 'b
//│     'q <: List['b]
//│     'p <: 'b
//│     'q <: List['b])
//│     'n :> forall 'b, 't, 'u. ((() -> List[nothing] -> 'b & 'b) -> (forall 'b, 't, 'u, 'a2, 'v. ('v
//│   where
//│     't <: 'a2
//│     'u <: List['a2]
//│     'b <: () -> List['a2] -> 'v))
//│   where
//│     't <: 'b
//│     'u <: List['b]
//│     't <: 'b
//│     'u <: List['b])
//│     'l <: () -> List[nothing] -> 'b & () -> List["x"] -> (() -> (forall 'b, 'c, 'd. ((List['b] & 'd) -> (forall 'b, 'c, 'd, 'e. ((() -> List[nothing] -> 'b & 'e) -> (forall 'c, 'd, 'e, 'a, 'f. ('f
//│   where
//│     'c <: 'a
//│     'd <: List['a]
//│     'e <: () -> List['a] -> 'f))
//│   where
//│     'c <: 'b
//│     'd <: List['b]
//│     'c <: 'b
//│     'd <: List['b]))
//│   where
//│     'c <: 'b
//│     'c <: 'b))) -> (() -> List[string] -> (forall 'b, 'g. (() -> (forall 'b, 'g, 'h. ((List['b] & 'h) -> (forall 'b, 'g, 'h, 'i. ((() -> List[nothing] -> 'b & 'i) -> (forall 'g, 'h, 'i, 'a0, 'j. ('j
//│   where
//│     'g <: 'a0
//│     'h <: List['a0]
//│     'i <: () -> List['a0] -> 'j))
//│   where
//│     'g <: 'b
//│     'h <: List['b]
//│     'g <: 'b
//│     'h <: List['b]))
//│   where
//│     'g <: 'b
//│     'g <: 'b))
//│   where
//│     'g <: 'b
//│     'g <: 'b))) -> 'w
//│     'k <: () -> List[nothing] -> 'b & () -> List["x"] -> (() -> (forall 'b, 'c, 'd. ((List['b] & 'd) -> (forall 'b, 'c, 'd, 'e. ((() -> List[nothing] -> 'b & 'e) -> (forall 'c, 'd, 'e, 'a, 'f. ('f
//│   where
//│     'c <: 'a
//│     'd <: List['a]
//│     'e <: () -> List['a] -> 'f))
//│   where
//│     'c <: 'b
//│     'd <: List['b]
//│     'c <: 'b
//│     'd <: List['b]))
//│   where
//│     'c <: 'b
//│     'c <: 'b))) -> 'w -> (() -> List[string] -> (forall 'b, 'g. (() -> (forall 'b, 'g, 'h. ((List['b] & 'h) -> (forall 'b, 'g, 'h, 'i. ((() -> List[nothing] -> 'b & 'i) -> (forall 'g, 'h, 'i, 'a0, 'j. ('j
//│   where
//│     'g <: 'a0
//│     'h <: List['a0]
//│     'i <: () -> List['a0] -> 'j))
//│   where
//│     'g <: 'b
//│     'h <: List['b]
//│     'g <: 'b
//│     'h <: List['b]))
//│   where
//│     'g <: 'b
//│     'g <: 'b))
//│   where
//│     'g <: 'b
//│     'g <: 'b))) -> 'o))
//│   where
//│     'k <: () -> List[nothing] -> 'b & () -> List["x"] -> (() -> (forall 'b, 'c, 'd. ((List['b] & 'd) -> (forall 'b, 'c, 'd, 'e. ((() -> List[nothing] -> 'b & 'e) -> (forall 'c, 'd, 'e, 'a, 'f. ('f
//│   where
//│     'c <: 'a
//│     'd <: List['a]
//│     'e <: () -> List['a] -> 'f))
//│   where
//│     'c <: 'b
//│     'd <: List['b]
//│     'c <: 'b
//│     'd <: List['b]))
//│   where
//│     'c <: 'b
//│     'c <: 'b))) -> nothing -> (() -> List[string] -> (forall 'b, 'g. (() -> (forall 'b, 'g, 'h. ((List['b] & 'h) -> (forall 'b, 'g, 'h, 'i. ((() -> List[nothing] -> 'b & 'i) -> (forall 'g, 'h, 'i, 'a0, 'j. ('j
//│   where
//│     'g <: 'a0
//│     'h <: List['a0]
//│     'i <: () -> List['a0] -> 'j))
//│   where
//│     'g <: 'b
//│     'h <: List['b]
//│     'g <: 'b
//│     'h <: List['b]))
//│   where
//│     'g <: 'b
//│     'g <: 'b))
//│   where
//│     'g <: 'b
//│     'g <: 'b))) -> 'b
//│     'k <: () -> List[nothing] -> 'b & () -> List["x"] -> (() -> (forall 'b, 'c, 'd. ((List['b] & 'd) -> (forall 'b, 'c, 'd, 'e. ((() -> List[nothing] -> 'b & 'e) -> (forall 'c, 'd, 'e, 'a, 'f. ('f
//│   where
//│     'c <: 'a
//│     'd <: List['a]
//│     'e <: () -> List['a] -> 'f))
//│   where
//│     'c <: 'b
//│     'd <: List['b]
//│     'c <: 'b
//│     'd <: List['b]))
//│   where
//│     'c <: 'b
//│     'c <: 'b))) -> nothing -> (() -> List[string] -> (forall 'b, 'g. (() -> (forall 'b, 'g, 'h. ((List['b] & 'h) -> (forall 'b, 'g, 'h, 'i. ((() -> List[nothing] -> 'b & 'i) -> (forall 'g, 'h, 'i, 'a0, 'j. ('j
//│   where
//│     'g <: 'a0
//│     'h <: List['a0]
//│     'i <: () -> List['a0] -> 'j))
//│   where
//│     'g <: 'b
//│     'h <: List['b]
//│     'g <: 'b
//│     'h <: List['b]))
//│   where
//│     'g <: 'b
//│     'g <: 'b))
//│   where
//│     'g <: 'b
//│     'g <: 'b))) -> 'b))

// (* This does not type. It requires first-class polymorphism. *)
def h t = g t t
//│ h: nothing -> (forall 'b, 'c, 'd, 'e, 'f. ('g
//│   where
//│     'b :> forall 'h, 'i, 'j, 'k. ((() -> List[nothing] -> 'i & 'k) -> (forall 'h, 'j, 'k, 'a, 'l. ('l
//│   where
//│     'h <: 'a
//│     'j <: List['a]
//│     'k <: () -> List['a] -> 'l))
//│   where
//│     'h <: 'i
//│     'j <: List['i]
//│     'h <: 'i
//│     'j <: List['i])
//│     'c :> forall 'i, 'm, 'n. ((() -> List[nothing] -> 'i & 'i) -> (forall 'i, 'm, 'n, 'a0, 'o. ('o
//│   where
//│     'm <: 'a0
//│     'n <: List['a0]
//│     'i <: () -> List['a0] -> 'o))
//│   where
//│     'm <: 'i
//│     'n <: List['i]
//│     'm <: 'i
//│     'n <: List['i])
//│     'd <: () -> List[nothing] -> 'i & () -> List["x"] -> (() -> (forall 'i, 'p, 'q. ((List['i] & 'q) -> (forall 'i, 'p, 'q, 'r. ((() -> List[nothing] -> 'i & 'r) -> (forall 'p, 'q, 'r, 'a1, 's. ('s
//│   where
//│     'p <: 'a1
//│     'q <: List['a1]
//│     'r <: () -> List['a1] -> 's))
//│   where
//│     'p <: 'i
//│     'q <: List['i]
//│     'p <: 'i
//│     'q <: List['i]))
//│   where
//│     'p <: 'i
//│     'p <: 'i))) -> (() -> List[string] -> (forall 'i, 't. (() -> (forall 'i, 't, 'u. ((List['i] & 'u) -> (forall 'i, 't, 'u, 'v. ((() -> List[nothing] -> 'i & 'v) -> (forall 't, 'u, 'v, 'a2, 'w. ('w
//│   where
//│     't <: 'a2
//│     'u <: List['a2]
//│     'v <: () -> List['a2] -> 'w))
//│   where
//│     't <: 'i
//│     'u <: List['i]
//│     't <: 'i
//│     'u <: List['i]))
//│   where
//│     't <: 'i
//│     't <: 'i))
//│   where
//│     't <: 'i
//│     't <: 'i))) -> 'x
//│     'e <: () -> List[nothing] -> 'i & () -> List["x"] -> (() -> (forall 'i, 'p, 'q. ((List['i] & 'q) -> (forall 'i, 'p, 'q, 'r. ((() -> List[nothing] -> 'i & 'r) -> (forall 'p, 'q, 'r, 'a1, 's. ('s
//│   where
//│     'p <: 'a1
//│     'q <: List['a1]
//│     'r <: () -> List['a1] -> 's))
//│   where
//│     'p <: 'i
//│     'q <: List['i]
//│     'p <: 'i
//│     'q <: List['i]))
//│   where
//│     'p <: 'i
//│     'p <: 'i))) -> 'x -> (() -> List[string] -> (forall 'i, 't. (() -> (forall 'i, 't, 'u. ((List['i] & 'u) -> (forall 'i, 't, 'u, 'v. ((() -> List[nothing] -> 'i & 'v) -> (forall 't, 'u, 'v, 'a2, 'w. ('w
//│   where
//│     't <: 'a2
//│     'u <: List['a2]
//│     'v <: () -> List['a2] -> 'w))
//│   where
//│     't <: 'i
//│     'u <: List['i]
//│     't <: 'i
//│     'u <: List['i]))
//│   where
//│     't <: 'i
//│     't <: 'i))
//│   where
//│     't <: 'i
//│     't <: 'i))) -> 'g
//│     'f <: () -> List[nothing] -> 'i & () -> List["x"] -> (() -> (forall 'i, 'p, 'q. ((List['i] & 'q) -> (forall 'i, 'p, 'q, 'r. ((() -> List[nothing] -> 'i & 'r) -> (forall 'p, 'q, 'r, 'a1, 's. ('s
//│   where
//│     'p <: 'a1
//│     'q <: List['a1]
//│     'r <: () -> List['a1] -> 's))
//│   where
//│     'p <: 'i
//│     'q <: List['i]
//│     'p <: 'i
//│     'q <: List['i]))
//│   where
//│     'p <: 'i
//│     'p <: 'i))) -> nothing -> (() -> List[string] -> (forall 'i, 't. (() -> (forall 'i, 't, 'u. ((List['i] & 'u) -> (forall 'i, 't, 'u, 'v. ((() -> List[nothing] -> 'i & 'v) -> (forall 't, 'u, 'v, 'a2, 'w. ('w
//│   where
//│     't <: 'a2
//│     'u <: List['a2]
//│     'v <: () -> List['a2] -> 'w))
//│   where
//│     't <: 'i
//│     'u <: List['i]
//│     't <: 'i
//│     'u <: List['i]))
//│   where
//│     't <: 'i
//│     't <: 'i))
//│   where
//│     't <: 'i
//│     't <: 'i))) -> 'i & () -> List["x"] -> (() -> (forall 'i, 'p, 'q. ((List['i] & 'q) -> (forall 'i, 'p, 'q, 'r. ((() -> List[nothing] -> 'i & 'r) -> (forall 'p, 'q, 'r, 'a1, 's. ('s
//│   where
//│     'p <: 'a1
//│     'q <: List['a1]
//│     'r <: () -> List['a1] -> 's))
//│   where
//│     'p <: 'i
//│     'q <: List['i]
//│     'p <: 'i
//│     'q <: List['i]))
//│   where
//│     'p <: 'i
//│     'p <: 'i))) -> (() -> List[string] -> (forall 'i, 't. (() -> (forall 'i, 't, 'u. ((List['i] & 'u) -> (forall 'i, 't, 'u, 'v. ((() -> List[nothing] -> 'i & 'v) -> (forall 't, 'u, 'v, 'a2, 'w. ('w
//│   where
//│     't <: 'a2
//│     'u <: List['a2]
//│     'v <: () -> List['a2] -> 'w))
//│   where
//│     't <: 'i
//│     'u <: List['i]
//│     't <: 'i
//│     'u <: List['i]))
//│   where
//│     't <: 'i
//│     't <: 'i))
//│   where
//│     't <: 'i
//│     't <: 'i))) -> 'i & 'd))

