:GeneralizeCurriedFunctions

// type ChurchInt = forall 'N. ('N -> 'N) -> ('N -> 'N)

// :ArgGen

// :d
// :ns
// def s n = fun f -> fun x -> f (n f x)
def s n = fun f -> fun x -> (n f x)
// def s n = fun f -> n f
// def s n = n
//│ s: 'a -> (forall 'b. 'b -> (forall 'a, 'b, 'c, 'd, 'e. ('d -> 'e
//│   where
//│     'a <: 'b -> 'c
//│     'c <: 'd -> 'e)))
//│  = [Function: s]

def succ: (forall 'N. ('N -> 'N) -> ('N -> 'N)) -> (forall 'M. ('M -> 'M) -> ('M -> 'M))
//│ succ: (forall 'N. ('N -> 'N) -> 'N -> 'N) -> (forall 'M. ('M -> 'M) -> 'M -> 'M)
//│     = <missing implementation>

// :DistributeForalls

// :ns
:e // * Needs distrib (see below)
// :d
succ = s
//│ 'a -> (forall 'b. 'b -> (forall 'a, 'b, 'c, 'd, 'e. ('d -> 'e
//│   where
//│     'a <: 'b -> 'c
//│     'c <: 'd -> 'e)))
//│   <:  succ:
//│ (forall 'N. ('N -> 'N) -> 'N -> 'N) -> (forall 'M. ('M -> 'M) -> 'M -> 'M)
//│ ╔══[ERROR] Type mismatch in def definition:
//│ ║  l.28: 	succ = s
//│ ║        	^^^^^^^^
//│ ╟── type `‘M93` is not an instance of type `'M`
//│ ║  l.19: 	def succ: (forall 'N. ('N -> 'N) -> ('N -> 'N)) -> (forall 'M. ('M -> 'M) -> ('M -> 'M))
//│ ║        	                                                           ^^
//│ ╟── Note: constraint arises from quantified type variable:
//│ ║  l.19: 	def succ: (forall 'N. ('N -> 'N) -> ('N -> 'N)) -> (forall 'M. ('M -> 'M) -> ('M -> 'M))
//│ ╙──      	                                                           ^^
//│     = [Function: s]



// ==========================================================================


def s n = fun f -> n f
//│ s: 'a -> (forall 'a, 'b, 'c. ('b -> 'c
//│   where
//│     'a <: 'b -> 'c))
//│  = [Function: s1]

// def succ: (forall 'N. ('N -> 'N) -> ('N -> 'N)) -> (forall 'M. ('M -> 'M) -> ('M -> 'M))
def succ_min : (forall 'N. ('N -> 'N)) -> (forall 'M. ('M -> 'M))
//│ succ_min: (forall 'N. 'N -> 'N) -> (forall 'M. 'M -> 'M)
//│         = <missing implementation>

// :DistributeForalls

// :ns
:e // * Needs distrib (see below)
:d
succ_min = s
// succ n = s n
// s id : (forall 'M. ('M -> 'M))
//│ 1. Typing term s   None
//│ 1. : ‹∀ 0. ‹∀ 1. (α95'' -> ‹∀ 2. {(α96''' -> α97''') where: α95'' <: ((α96''',) -> α97''')}›)››
//│ ⬤ Typed as: ‹∀ 0. ‹∀ 0. ‹∀ 1. (α95'' -> ‹∀ 2. {(α96''' -> α97''') where: α95'' <: ((α96''',) -> α97''')}›)›››
//│  where: 
//│ ⬤ Typed as: ‹∀ 0. (‹∀ 1. ('N107'' -> 'N107'')› -> ‹∀ 1. ('M108'' -> 'M108'')›)›
//│  where: 
//│ 'a -> (forall 'a, 'b, 'c. ('b -> 'c
//│   where
//│     'a <: 'b -> 'c))
//│   <:  succ_min:
//│ (forall 'N. 'N -> 'N) -> (forall 'M. 'M -> 'M)
//│ CHECKING SUBSUMPTION...
//│ CONSTRAIN ‹∀ 0. ‹∀ 0. ‹∀ 1. (α95'' -> ‹∀ 2. {(α96''' -> α97''') where: α95'' <: ((α96''',) -> α97''')}›)››› <! ‹∀ 0. (‹∀ 1. ('N107'' -> 'N107'')› -> ‹∀ 1. ('M108'' -> 'M108'')›)›
//│   where 
//│ 0. C ‹∀ 0. ‹∀ 0. ‹∀ 1. (α95'' -> ‹∀ 2. {(α96''' -> α97''') where: α95'' <: ((α96''',) -> α97''')}›)››› <! ‹∀ 0. (‹∀ 1. ('N107'' -> 'N107'')› -> ‹∀ 1. ('M108'' -> 'M108'')›)›
//│ | BUMP TO LEVEL 1  -->  (‹∀ 1. ('N107'' -> 'N107'')› -> ‹∀ 1. ('M108'' -> 'M108'')›)
//│ | where 
//│ | 1. C ‹∀ 0. ‹∀ 0. ‹∀ 1. (α95'' -> ‹∀ 2. {(α96''' -> α97''') where: α95'' <: ((α96''',) -> α97''')}›)››› <! (‹∀ 1. ('N107'' -> 'N107'')› -> ‹∀ 1. ('M108'' -> 'M108'')›)
//│ | | 1. C ‹∀ 0. ‹∀ 1. (α95'' -> ‹∀ 2. {(α96''' -> α97''') where: α95'' <: ((α96''',) -> α97''')}›)›› <! (‹∀ 1. ('N107'' -> 'N107'')› -> ‹∀ 1. ('M108'' -> 'M108'')›)
//│ | | | 1. C ‹∀ 1. (α95'' -> ‹∀ 2. {(α96''' -> α97''') where: α95'' <: ((α96''',) -> α97''')}›)› <! (‹∀ 1. ('N107'' -> 'N107'')› -> ‹∀ 1. ('M108'' -> 'M108'')›)
//│ | | | | INST [1]   ‹∀ 1. (α95'' -> ‹∀ 2. {(α96''' -> α97''') where: α95'' <: ((α96''',) -> α97''')}›)›
//│ | | | |   where  
//│ | | | | TO [1] ~>  (α95_130' -> ‹∀ 2. {(α96_131''' -> α97_132''') where: α95_130' <: ((α96_131''',) -> α97_132''')}›)
//│ | | | |   where  
//│ | | | | 1. C (α95_130' -> ‹∀ 2. {(α96_131''' -> α97_132''') where: α95_130' <: ((α96_131''',) -> α97_132''')}›) <! (‹∀ 1. ('N107'' -> 'N107'')› -> ‹∀ 1. ('M108'' -> 'M108'')›)
//│ | | | | | 1. C (‹∀ 1. ('N107'' -> 'N107'')›,) <! (α95_130',)
//│ | | | | | | 1. C ‹∀ 1. ('N107'' -> 'N107'')› <! α95_130'
//│ | | | | | | | NEW α95_130' LB (0)
//│ | | | | | 1. C ‹∀ 2. {(α96_131''' -> α97_132''') where: α95_130' <: ((α96_131''',) -> α97_132''')}› <! ‹∀ 1. ('M108'' -> 'M108'')›
//│ | | | | | | BUMP TO LEVEL 2  -->  (‘M'' -> ‘M'')
//│ | | | | | | where 
//│ | | | | | | 2. C ‹∀ 2. {(α96_131''' -> α97_132''') where: α95_130' <: ((α96_131''',) -> α97_132''')}› <! (‘M'' -> ‘M'')
//│ | | | | | | | INST [2]   ‹∀ 2. {(α96_131''' -> α97_132''') where: α95_130' <: ((α96_131''',) -> α97_132''')}›
//│ | | | | | | |   where  
//│ 		α95_130' :> ‹∀ 1. ('N107'' -> 'N107'')›
//│ | | | | | | | TO [2] ~>  {(α96_133'' -> α97_134'') where: α95_130' <: ((α96_133'',) -> α97_134'')}
//│ | | | | | | |   where  
//│ 		α95_130' :> ‹∀ 1. ('N107'' -> 'N107'')›
//│ | | | | | | | 2. C {(α96_133'' -> α97_134'') where: α95_130' <: ((α96_133'',) -> α97_134'')} <! (‘M'' -> ‘M'')
//│ | | | | | | | | DISCHARGE CONSTRAINTS
//│ | | | | | | | | | 2. C α95_130' <! ((α96_133'',) -> α97_134'')
//│ | | | | | | | | | | EXTR RHS  ~>  ((α135',) -> α136')  to 1
//│ | | | | | | | | | |  where 
//│ | | | | | | | | | |    and 
//│ 		α96_133'' <: α135'
//│ 		α97_134'' :> α136'
//│ | | | | | | | | | | 2. C α95_130' <! ((α135',) -> α136')
//│ | | | | | | | | | | | NEW α95_130' UB (1)
//│ | | | | | | | | | | | 2. C ‹∀ 1. ('N107'' -> 'N107'')› <! ((α135',) -> α136')
//│ | | | | | | | | | | | | INST [1]   ‹∀ 1. ('N107'' -> 'N107'')›
//│ | | | | | | | | | | | |   where  
//│ | | | | | | | | | | | | TO [2] ~>  ('N107_137'' -> 'N107_137'')
//│ | | | | | | | | | | | |   where  
//│ | | | | | | | | | | | | 2. C ('N107_137'' -> 'N107_137'') <! ((α135',) -> α136')
//│ | | | | | | | | | | | | | 2. C (α135',) <! ('N107_137'',)
//│ | | | | | | | | | | | | | | 2. C (α135',) <! ('N107_137'',)
//│ | | | | | | | | | | | | | | | 2. C α135' <! 'N107_137''
//│ | | | | | | | | | | | | | | | | 2. C α135' <! 'N107_137''
//│ | | | | | | | | | | | | | | | | | NEW 'N107_137'' LB (1)
//│ | | | | | | | | | | | | | 2. C 'N107_137'' <! α136'
//│ | | | | | | | | | | | | | | NEW 'N107_137'' UB (1)
//│ | | | | | | | | | | | | | | 2. C α135' <! α136'
//│ | | | | | | | | | | | | | | | NEW α135' UB (1)
//│ | | | | | | | | 2. C (α96_133'' -> α97_134'') <! (‘M'' -> ‘M'')
//│ | | | | | | | | | 2. C (‘M'',) <! (α96_133'',)
//│ | | | | | | | | | | 2. C ‘M'' <! α96_133''
//│ | | | | | | | | | | | NEW α96_133'' LB (2)
//│ | | | | | | | | | | | 2. C ‘M'' <! α135'
//│ | | | | | | | | | | | | EXTR LHS  ~>  ‘M138'  to 1
//│ | | | | | | | | | | | |  where 
//│ | | | | | | | | | | | |    and 
//│ | | | | | | | | | | | | 2. C ‘M138' <! α135'
//│ | | | | | | | | | | | | | NEW α135' LB (1)
//│ | | | | | | | | | | | | | 2. C ‘M138' <! α136'
//│ | | | | | | | | | | | | | | NEW α136' LB (1)
//│ | | | | | | | | | 2. C α97_134'' <! ‘M''
//│ | | | | | | | | | | NEW α97_134'' UB (2)
//│ | | | | | | | | | | 2. C α136' <! ‘M''
//│ | | | | | | | | | | | EXTR RHS  ~>  ‹∀ 1. 'M139''›  to 1
//│ | | | | | | | | | | |  where 
//│ | | | | | | | | | | |    and 
//│ | | | | | | | | | | | 2. C α136' <! ‹∀ 1. 'M139''›
//│ | | | | | | | | | | | | NEW α136' UB (0)
//│ | | | | | | | | | | | | 2. C ‘M138' <! ‹∀ 1. 'M139''›
//│ | | | | | | | | | | | | | BUMP TO LEVEL 3  -->  ‘M'''
//│ | | | | | | | | | | | | | where 
//│ | | | | | | | | | | | | | 3. C ‘M138' <! ‘M'''
//│ | | | | | | | | | | | | | | CONSTRAINT FAILURE: ‘M138' <: ‘M'''
//│ | | | | | | | | | | | | | | allVarPols: 
//│ | | | | | | | | | | | | | | norm[+] ‘M138'
//│ | | | | | | | | | | | | | | | DNF: DNF(1024, {}∧‘M138')
//│ | | | | | | | | | | | | | | ~> ‘M138'
//│ ╔══[ERROR] Type mismatch in def definition:
//│ ║  l.67: 	succ_min = s
//│ ║        	^^^^^^^^^^^^
//│ ╟── type `‘M138` is not an instance of type `'M`
//│ ║  l.58: 	def succ_min : (forall 'N. ('N -> 'N)) -> (forall 'M. ('M -> 'M))
//│ ║        	                                                  ^^
//│ ╟── Note: constraint arises from quantified type variable:
//│ ║  l.58: 	def succ_min : (forall 'N. ('N -> 'N)) -> (forall 'M. ('M -> 'M))
//│ ╙──      	                                                  ^^
//│         = [Function: s1]



