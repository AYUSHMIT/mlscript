
:GeneralizeCurriedFunctions


def f n = n 0
//│ f: (0 -> 'a & 'b) -> 'a
//│  = [Function: f]

:e
f {}
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.10: 	f {}
//│ ║        	^^^^
//│ ╟── record literal of type `anything` is not a function
//│ ║  l.10: 	f {}
//│ ║        	  ^^
//│ ╟── Note: constraint arises from application:
//│ ║  l.5: 	def f n = n 0
//│ ║       	          ^^^
//│ ╟── from reference:
//│ ║  l.5: 	def f n = n 0
//│ ╙──     	          ^
//│ res: error
//│ Runtime error:
//│   TypeError: n is not a function

// :d
:e
f {} {}
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.29: 	f {} {}
//│ ║        	^^^^
//│ ╟── record literal of type `anything` is not a function
//│ ║  l.29: 	f {} {}
//│ ║        	  ^^
//│ ╟── Note: constraint arises from application:
//│ ║  l.5: 	def f n = n 0
//│ ║       	          ^^^
//│ ╟── from reference:
//│ ║  l.5: 	def f n = n 0
//│ ╙──     	          ^
//│ res: error
//│ Runtime error:
//│   TypeError: n is not a function


def f n m = n 0
//│ f: 'a -> (forall 'a, 'b, 'c. ('c -> 'b
//│   where
//│     'a <: 0 -> 'b))
//│  = [Function: f1]

// :e // Error delayed by inconsistent constrained types
f {}
//│ res: 'a -> 'b
//│   where
//│     anything <: 0 -> 'b
//│    = [Function (anonymous)]

:e
f {} {}
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.61: 	f {} {}
//│ ║        	^^^^^^^
//│ ╟── record literal of type `anything` is not a function
//│ ║  l.61: 	f {} {}
//│ ║        	  ^^
//│ ╟── Note: constraint arises from application:
//│ ║  l.47: 	def f n m = n 0
//│ ╙──      	            ^^^
//│ res: error
//│ Runtime error:
//│   TypeError: n is not a function



def test extr =
  let f n m = n 0
  in let _ = extr f
  in f 0
//│ test: ((forall 'a. 'a -> (forall 'a, 'b, 'c, 'd. ('d -> 'c
//│   where
//│     'a <: (0 | 'b) -> 'c))) -> 'e & 'f) -> (forall 'b, 'g, 'h, 'i. ('h -> 'g | 'i
//│   where
//│     0 | 'b <: (0 | 'b) -> 'g))
//│     = [Function: test]

:e
test 1
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.89: 	test 1
//│ ║        	^^^^^^
//│ ╟── integer literal of type `1` is not a function
//│ ║  l.89: 	test 1
//│ ║        	     ^
//│ ╟── Note: constraint arises from application:
//│ ║  l.79: 	  in let _ = extr f
//│ ╙──      	             ^^^^^^
//│ res: error
//│ Runtime error:
//│   TypeError: extr is not a function

// * Note: this extrudes a Constrainedtype referring to a higher-level variable (x)
def test extr x =
  let f n m = x (n 0)
  in let _ = extr f
  in f 0
//│ test: ((forall 'a. 'a -> (forall 'a, 'b, 'c, 'd, 'e, 'f. ('f -> 'd
//│   where
//│     'b <: 'c -> 'd
//│     'a <: (0 | 'e) -> 'c))) -> 'g & 'h) -> (forall 'i. ('b & 'i) -> (forall 'e, 'i, 'j, 'k, 'l, 'm. ('l -> 'k | 'm
//│   where
//│     'i <: 'j -> 'k
//│     0 | 'e <: (0 | 'e) -> 'j)))
//│     = [Function: test1]

:e
test 0
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.118: 	test 0
//│ ║         	^^^^^^
//│ ╟── integer literal of type `0` is not a function
//│ ║  l.118: 	test 0
//│ ║         	     ^
//│ ╟── Note: constraint arises from application:
//│ ║  l.106: 	  in let _ = extr f
//│ ╙──       	             ^^^^^^
//│ res: error
//│    = [Function (anonymous)]

def test extr x =
  let f n m = x (n 0)
  in f 0
//│ test: 'a -> (forall 'b. 'b -> (forall 'b, 'c, 'd, 'e, 'f, 'g. ('f -> 'd | 'g
//│   where
//│     'b <: 'c -> 'd
//│     0 | 'e <: (0 | 'e) -> 'c)))
//│     = [Function: test2]

// Error delayed by inconsistent constrained types
test 0 1
//│ res: 'a -> 'b
//│   where
//│     1 <: 'c -> 'b
//│     0 <: 0 -> 'c
//│    = [Function (anonymous)]

:e
test 0 1 2
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.149: 	test 0 1 2
//│ ║         	^^^^^^^^^^
//│ ╟── integer literal of type `1` is not a function
//│ ║  l.149: 	test 0 1 2
//│ ║         	       ^
//│ ╟── Note: constraint arises from application:
//│ ║  l.132: 	  let f n m = x (n 0)
//│ ╙──       	              ^^^^^^^
//│ res: error
//│ Runtime error:
//│   TypeError: n is not a function

def test extr x =
  let f n m = (n x 0)
  in f 0
//│ test: 'a -> (forall 'b. 'b -> (forall 'b, 'c, 'd, 'e, 'f, 'g. ('f -> 'd | 'g
//│   where
//│     0 | 'c <: 'b -> ((0 | 'c) -> 'd & 'e))))
//│     = [Function: test3]

// Error delayed by inconsistent constrained types
test 0 1
//│ res: 'a -> 'b
//│   where
//│     0 <: 1 -> (0 -> 'b & 'c)
//│    = [Function (anonymous)]

:e
test 0 1 2
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.179: 	test 0 1 2
//│ ║         	^^^^^^^^^^
//│ ╟── integer literal of type `0` is not a function
//│ ║  l.165: 	  in f 0
//│ ║         	       ^
//│ ╟── Note: constraint arises from application:
//│ ║  l.164: 	  let f n m = (n x 0)
//│ ╙──       	               ^^^
//│ res: error
//│ Runtime error:
//│   TypeError: n is not a function


