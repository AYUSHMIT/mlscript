:ShowRelativeLineNums
:NoJS

class MyArray[A]: { size: int; set: (int, A) -> (); get: int -> A }
//│ Defined class MyArray[=A]

dummy = MyArray {
    size = 0;
    set = fun (i, a) -> ();
    get = fun i -> error
  }
//│ dummy: MyArray['A] with {get: anything -> nothing, set: (anything, anything,) -> (), size: 0}

dummy: MyArray[int]
//│ res: MyArray[int]

def ty1A: MyArray[int]
def ty1B: MyArray[0 | 1]
//│ ty1A: MyArray[int]
//│ ty1B: MyArray[0 | 1]


def ty2A: MyArray['a]
//│ ty2A: MyArray['a]

:stats
ty2A = ty2A
//│ MyArray['a]
//│   <:  ty2A:
//│ MyArray['a]
//│ constrain calls  : 34
//│ annoying  calls  : 24
//│ subtyping calls  : 28

def ty2B: MyArray[MyArray['a]]
//│ ty2B: MyArray[MyArray['a]]

:stats
ty2B = ty2A
//│ MyArray['a]
//│   <:  ty2B:
//│ MyArray[MyArray['a]]
//│ constrain calls  : 30
//│ annoying  calls  : 24
//│ subtyping calls  : 27



def ty3A: MyArray['a] as 'a
//│ ty3A: 'a
//│   where
//│     'a := MyArray['a]

:e // FIXME (probably the issue reproduced in `ADRsRepro.mls`)
:stats
ty3A = ty3A
//│ 'a
//│   where
//│     'a := MyArray['a]
//│   <:  ty3A:
//│ 'a
//│   where
//│     'a := MyArray['a]
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ((int<TypeName(number)>, 'a108,) -> ())  <:  ((int<TypeName(number)>, 'a106,) -> ())    FunctionType  FunctionType
//│ ╙──  ... looks like:  ((int<TypeName(number)>, 'a95',) -> ())  <:  ((int<TypeName(number)>, 'a95',) -> ())
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a108]  <:  (‘a | MyArray['a105])    TypeRef  ComposedType
//│ ╙──  ... looks like:  MyArray['a95']  <:  (‘a | MyArray['a95'])
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ∀ 0. 'a95'  <:  MyArray['a108]    PolymorphicType  TypeRef
//│ ╙──  ... looks like:  ∀ 0. 'a95'  <:  MyArray['a95']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a106]  <:  {size: Int, set: ((Int, 'a106,) -> ()), get: (Int -> 'a106)}    TypeRef  RecordType
//│ ╙──  ... looks like:  MyArray['a95']  <:  {size: Int, set: ((Int, 'a95',) -> ()), get: (Int -> 'a95')}
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a106]  <:  MyArray['a108]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a95']  <:  MyArray['a95']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a106]  <:  {MyArray#A: mut 'a106..'a106}    TypeRef  RecordType
//│ ╙──  ... looks like:  MyArray['a95']  <:  {MyArray#A: mut 'a95'..'a95'}
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ((int<TypeName(number)>, 'a109,) -> ())  <:  ((int<TypeName(number)>, 'a106,) -> ())    FunctionType  FunctionType
//│ ╙──  ... looks like:  ((int<TypeName(number)>, 'a95',) -> ())  <:  ((int<TypeName(number)>, 'a95',) -> ())
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a109]  <:  MyArray['a108]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a95']  <:  MyArray['a95']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a109]  <:  (‘a | MyArray['a105])    TypeRef  ComposedType
//│ ╙──  ... looks like:  MyArray['a95']  <:  (‘a | MyArray['a95'])
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a109]  <:  MyArray['a106]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a95']  <:  MyArray['a95']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a108]  <:  {MyArray#A: mut 'a106..'a106}    TypeRef  RecordType
//│ ╙──  ... looks like:  MyArray['a95']  <:  {MyArray#A: mut 'a95'..'a95'}
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ∀ 0. 'a95'  <:  MyArray['a109]    PolymorphicType  TypeRef
//│ ╙──  ... looks like:  ∀ 0. 'a95'  <:  MyArray['a95']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ((int<TypeName(number)>, 'a105,) -> ())  <:  ((int<TypeName(number)>, 'a106,) -> ())    FunctionType  FunctionType
//│ ╙──  ... looks like:  ((int<TypeName(number)>, 'a95',) -> ())  <:  ((int<TypeName(number)>, 'a95',) -> ())
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ((int<TypeName(number)>, 'a105,) -> ())  <:  ((int<TypeName(number)>, 'a108,) -> ())    FunctionType  FunctionType
//│ ╙──  ... looks like:  ((int<TypeName(number)>, 'a95',) -> ())  <:  ((int<TypeName(number)>, 'a95',) -> ())
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a109]  <:  (‘a | MyArray['a105])    TypeRef  ComposedType
//│ ╙──  ... looks like:  MyArray['a95']  <:  (‘a | MyArray['a95'])
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a108]  <:  (‘a | MyArray['a105])    TypeRef  ComposedType
//│ ╙──  ... looks like:  MyArray['a95']  <:  (‘a | MyArray['a95'])
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ((int<TypeName(number)>, 'a105,) -> ())  <:  ((int<TypeName(number)>, 'a109,) -> ())    FunctionType  FunctionType
//│ ╙──  ... looks like:  ((int<TypeName(number)>, 'a95',) -> ())  <:  ((int<TypeName(number)>, 'a95',) -> ())
//│ constrain calls  : 520
//│ annoying  calls  : 128
//│ subtyping calls  : 697

def ty3B: MyArray[MyArray['a]] as 'a
//│ ty3B: 'a
//│   where
//│     'a := MyArray[MyArray['a]]

:e // FIXME (probably the issue reproduced in `ADRsRepro.mls`)
:stats
ty3B = ty3A
//│ 'a
//│   where
//│     'a := MyArray['a]
//│   <:  ty3B:
//│ 'a
//│   where
//│     'a := MyArray[MyArray['a]]
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a123]  <:  (‘a | MyArray[MyArray['a120]])    TypeRef  ComposedType
//│ ╙──  ... looks like:  MyArray['a95']  <:  (‘a | MyArray[MyArray['a110']])
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ∀ 0. 'a95'  <:  MyArray['a124]    PolymorphicType  TypeRef
//│ ╙──  ... looks like:  ∀ 0. 'a95'  <:  MyArray['a95']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a123]  <:  {size: Int, set: ((Int, 'a123,) -> ()), get: (Int -> 'a123)}    TypeRef  RecordType
//│ ╙──  ... looks like:  MyArray['a95']  <:  {size: Int, set: ((Int, 'a95',) -> ()), get: (Int -> 'a95')}
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a124]  <:  (‘a | MyArray[MyArray['a120]])    TypeRef  ComposedType
//│ ╙──  ... looks like:  MyArray['a95']  <:  (‘a | MyArray[MyArray['a110']])
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a124]  <:  {size: Int, set: ((Int, 'a120,) -> ()), get: (Int -> 'a120)}    TypeRef  RecordType
//│ ╙──  ... looks like:  MyArray['a95']  <:  {size: Int, set: ((Int, 'a110',) -> ()), get: (Int -> 'a110')}
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a124]  <:  MyArray['a123]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a95']  <:  MyArray['a95']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a125]  <:  {size: Int, set: ((Int, 'a120,) -> ()), get: (Int -> 'a120)}    TypeRef  RecordType
//│ ╙──  ... looks like:  MyArray['a95']  <:  {size: Int, set: ((Int, 'a110',) -> ()), get: (Int -> 'a110')}
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a124]  <:  {MyArray#A: mut 'a123..'a123}    TypeRef  RecordType
//│ ╙──  ... looks like:  MyArray['a95']  <:  {MyArray#A: mut 'a95'..'a95'}
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a124]  <:  MyArray['a125]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a95']  <:  MyArray['a95']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a123]  <:  {MyArray#A: mut 'a123..'a123}    TypeRef  RecordType
//│ ╙──  ... looks like:  MyArray['a95']  <:  {MyArray#A: mut 'a95'..'a95'}
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a123]  <:  MyArray['a125]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a95']  <:  MyArray['a95']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ∀ 0. 'a95'  <:  MyArray['a125]    PolymorphicType  TypeRef
//│ ╙──  ... looks like:  ∀ 0. 'a95'  <:  MyArray['a95']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a125]  <:  (‘a | MyArray[MyArray['a120]])    TypeRef  ComposedType
//│ ╙──  ... looks like:  MyArray['a95']  <:  (‘a | MyArray[MyArray['a110']])
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a125]  <:  {MyArray#A: mut 'a120..'a120}    TypeRef  RecordType
//│ ╙──  ... looks like:  MyArray['a95']  <:  {MyArray#A: mut 'a110'..'a110'}
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ∀ 0. 'a95'  <:  MyArray['a127]    PolymorphicType  TypeRef
//│ ╙──  ... looks like:  ∀ 0. 'a95'  <:  MyArray['a95']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a125]  <:  {size: Int, set: ((Int, 'a126,) -> ()), get: (Int -> 'a126)}    TypeRef  RecordType
//│ ╙──  ... looks like:  MyArray['a95']  <:  {size: Int, set: ((Int, 'a95',) -> ()), get: (Int -> 'a95')}
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a125]  <:  MyArray['a127]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a95']  <:  MyArray['a95']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a126]  <:  {size: Int, set: ((Int, 'a126,) -> ()), get: (Int -> 'a126)}    TypeRef  RecordType
//│ ╙──  ... looks like:  MyArray['a95']  <:  {size: Int, set: ((Int, 'a95',) -> ()), get: (Int -> 'a95')}
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a126]  <:  MyArray['a127]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a95']  <:  MyArray['a95']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a127]  <:  {MyArray#A: mut 'a120..'a120}    TypeRef  RecordType
//│ ╙──  ... looks like:  MyArray['a95']  <:  {MyArray#A: mut 'a110'..'a110'}
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a127]  <:  MyArray['a126]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a95']  <:  MyArray['a95']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a127]  <:  {MyArray#A: mut 'a126..'a126}    TypeRef  RecordType
//│ ╙──  ... looks like:  MyArray['a95']  <:  {MyArray#A: mut 'a95'..'a95'}
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a127]  <:  MyArray['a128]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a95']  <:  MyArray['a95']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a126]  <:  {MyArray#A: mut 'a126..'a126}    TypeRef  RecordType
//│ ╙──  ... looks like:  MyArray['a95']  <:  {MyArray#A: mut 'a95'..'a95'}
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a126]  <:  MyArray['a128]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a95']  <:  MyArray['a95']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ∀ 0. 'a95'  <:  MyArray['a128]    PolymorphicType  TypeRef
//│ ╙──  ... looks like:  ∀ 0. 'a95'  <:  MyArray['a95']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a125]  <:  {MyArray#A: mut 'a126..'a126}    TypeRef  RecordType
//│ ╙──  ... looks like:  MyArray['a95']  <:  {MyArray#A: mut 'a95'..'a95'}
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a125]  <:  MyArray['a128]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a95']  <:  MyArray['a95']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a128]  <:  MyArray['a127]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a95']  <:  MyArray['a95']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a128]  <:  {MyArray#A: mut 'a120..'a120}    TypeRef  RecordType
//│ ╙──  ... looks like:  MyArray['a95']  <:  {MyArray#A: mut 'a110'..'a110'}
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a128]  <:  MyArray['a126]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a95']  <:  MyArray['a95']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a128]  <:  (‘a | MyArray[MyArray['a120]])    TypeRef  ComposedType
//│ ╙──  ... looks like:  MyArray['a95']  <:  (‘a | MyArray[MyArray['a110']])
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a126]  <:  MyArray['a120]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a95']  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a126]  <:  MyArray['a120]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a95']  <:  MyArray['a110']
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?a. ?a <: ?a0` exceeded recursion depth limit (100)
//│ ║  l.+1: 	ty3B = ty3A
//│ ║        	^^^^^^^^^^^
//│ ╟── while constraining:  (int<TypeName(number)>, 'a120,)  <!<  (int<TypeName(number)>, 'a126,)
//│ ╟── while constraining:  ((int<TypeName(number)>, 'a126,) -> ())  <!<  ((int<TypeName(number)>, 'a120,) -> ())
//│ ╟── while constraining:  ((myArray<> & {size: Int, set: ((Int, 'a126,) -> ()), get: (Int -> 'a126)}) & {MyArray#A: mut 'a126..'a126})  <!<  {size: Int, set: ((Int, 'a120,) -> ()), get: (Int -> 'a120)}
//│ ╟── while constraining:  MyArray['a126]  <!<  {size: Int, set: ((Int, 'a120,) -> ()), get: (Int -> 'a120)}
//│ ╟── while constraining:  MyArray['a126]  <!<  'a123
//│ ╟── while constraining:  MyArray['a126]  <!<  'a124
//│ ╟── while constraining:  MyArray['a126]  <!<  'a125
//│ ╟── while constraining:  MyArray['a126]  <!<  'a120
//│ ╟── while constraining:  'a128  <!<  'a120
//│ ╟── while constraining:  MyArray['a128]  <!<  MyArray['a120]
//│ ╟── while constraining:  MyArray['a128]  <!<  'a124
//│ ╟── while constraining:  MyArray['a128]  <!<  'a125
//│ ╟── while constraining:  MyArray['a128]  <!<  'a123
//│ ╟── while constraining:  'a126  <!<  'a123
//│ ╟── while constraining:  ((myArray<> & {size: Int, set: ((Int, 'a123,) -> ()), get: (Int -> 'a123)}) & {MyArray#A: mut 'a123..'a123})  <!<  {MyArray#A: mut 'a126..'a126}
//│ ╟── while constraining:  MyArray['a123]  <!<  {MyArray#A: mut 'a126..'a126}
//│ ╟── while constraining:  MyArray['a123]  <!<  'a128
//│ ╟── while constraining:  MyArray['a123]  <!<  'a126
//│ ╟── while constraining:  'a125  <!<  'a126
//│ ╟── while constraining:  MyArray['a125]  <!<  MyArray['a126]
//│ ╟── while constraining:  MyArray['a125]  <!<  'a126
//│ ╟── while constraining:  'a120  <!<  'a126
//│ ╟── while constraining:  ((myArray<> & {size: Int, set: ((Int, 'a126,) -> ()), get: (Int -> 'a126)}) & {MyArray#A: mut 'a126..'a126})  <!<  {MyArray#A: mut 'a120..'a120}
//│ ╟── while constraining:  MyArray['a126]  <!<  {MyArray#A: mut 'a120..'a120}
//│ ╟── while constraining:  'a126  <!<  {MyArray#A: mut 'a120..'a120}
//│ ╟── while constraining:  ∀ 0. 'a95'  <!<  {MyArray#A: mut 'a120..'a120}
//│ ╟── while constraining:  ∀ 0. 'a95'  <!<  ((myArray<> & {size: Int, set: ((Int, 'a120,) -> ()), get: (Int -> 'a120)}) & {MyArray#A: mut 'a120..'a120})
//│ ╟── while constraining:  ∀ 0. 'a95'  <!<  MyArray['a120]
//│ ╟── while constraining:  'a120  <!<  MyArray['a120]
//│ ╟── while constraining:  ((myArray<> & {size: Int, set: ((Int, 'a120,) -> ()), get: (Int -> 'a120)}) & {MyArray#A: mut 'a120..'a120})  <!<  (‘a | MyArray[MyArray['a120]])
//│ ╟── while constraining:  MyArray['a120]  <!<  (‘a | MyArray[MyArray['a120]])
//│ ╟── while constraining:  MyArray['a120]  <!<  'a121
//│ ╟── while constraining:  (int<TypeName(number)>, MyArray['a120],)  <!<  (int<TypeName(number)>, 'a121,)
//│ ╟── while constraining:  ((int<TypeName(number)>, 'a121,) -> ())  <!<  ((int<TypeName(number)>, MyArray['a120],) -> ())
//│ ╟── while constraining:  ((myArray<> & {size: Int, set: ((Int, 'a121,) -> ()), get: (Int -> 'a121)}) & {MyArray#A: mut 'a121..'a121})  <!<  (‘a | MyArray[MyArray['a120]])
//│ ╟── while constraining:  MyArray['a121]  <!<  (‘a | MyArray[MyArray['a120]])
//│ ╟── while constraining:  'a121  <!<  (‘a | MyArray[MyArray['a120]])
//│ ╟── while constraining:  ∀ 0. 'a95'  <!<  (‘a | MyArray[MyArray['a120]])
//│ ╙── while constraining:  ∀ 0. 'a95'  <!<  'a120
//│ constrain calls  : 1381
//│ annoying  calls  : 260
//│ subtyping calls  : 1755

:e // FIXME (probably the issue reproduced in `ADRsRepro.mls`)
:stats
ty3A = ty3B
//│ 'a
//│   where
//│     'a := MyArray[MyArray['a]]
//│   <:  ty3A:
//│ 'a
//│   where
//│     'a := MyArray['a]
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ∀ 0. 'a110'  <:  MyArray[MyArray['a148]]    PolymorphicType  TypeRef
//│ ╙──  ... looks like:  ∀ 0. 'a110'  <:  MyArray[MyArray['a110']]
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a145]  <:  MyArray[MyArray['a148]]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray[MyArray['a110']]
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a147]]  <:  {size: Int, set: ((Int, MyArray['a147],) -> ()), get: (Int -> MyArray['a147])}    TypeRef  RecordType
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  {size: Int, set: ((Int, MyArray['a110'],) -> ()), get: (Int -> MyArray['a110'])}
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a148]  <:  MyArray['a147]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a148]]  <:  {size: Int, set: ((Int, 'a145,) -> ()), get: (Int -> 'a145)}    TypeRef  RecordType
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  {size: Int, set: ((Int, 'a110',) -> ()), get: (Int -> 'a110')}
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a148]  <:  MyArray['a147]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a148]]  <:  {MyArray#A: mut MyArray['a147]..MyArray['a147]}    TypeRef  RecordType
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  {MyArray#A: mut MyArray['a110']..MyArray['a110']}
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a148]  <:  MyArray['a149]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a149]  <:  MyArray['a148]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a147]]  <:  {MyArray#A: mut MyArray['a147]..MyArray['a147]}    TypeRef  RecordType
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  {MyArray#A: mut MyArray['a110']..MyArray['a110']}
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a149]  <:  MyArray['a147]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ∀ 0. 'a110'  <:  MyArray[MyArray['a149]]    PolymorphicType  TypeRef
//│ ╙──  ... looks like:  ∀ 0. 'a110'  <:  MyArray[MyArray['a110']]
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a145]  <:  MyArray[MyArray['a149]]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray[MyArray['a110']]
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a149]  <:  MyArray['a147]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a149]  <:  MyArray['a148]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a148]  <:  MyArray['a149]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a149]]  <:  {size: Int, set: ((Int, 'a145,) -> ()), get: (Int -> 'a145)}    TypeRef  RecordType
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  {size: Int, set: ((Int, 'a110',) -> ()), get: (Int -> 'a110')}
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a149]  <:  MyArray['a147]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  (‘a & MyArray['a144])  <:  MyArray['a145]    ComposedType  TypeRef
//│ ╙──  ... looks like:  (‘a & MyArray['a95'])  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a149]]  <:  MyArray['a145]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a149]]  <:  (‘a | MyArray['a144])    TypeRef  ComposedType
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  (‘a | MyArray['a95'])
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a148]]  <:  MyArray['a145]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a148]]  <:  (‘a | MyArray['a144])    TypeRef  ComposedType
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  (‘a | MyArray['a95'])
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a147]]  <:  MyArray['a145]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a147]]  <:  (‘a | MyArray['a144])    TypeRef  ComposedType
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  (‘a | MyArray['a95'])
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a145]  <:  (‘a | MyArray['a144])    TypeRef  ComposedType
//│ ╙──  ... looks like:  MyArray['a110']  <:  (‘a | MyArray['a95'])
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a149]]  <:  MyArray['a147]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a148]]  <:  MyArray['a147]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a147]]  <:  MyArray['a147]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ∀ 0. 'a110'  <:  MyArray['a147]    PolymorphicType  TypeRef
//│ ╙──  ... looks like:  ∀ 0. 'a110'  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a145]]  <:  MyArray['a145]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a147]  <:  MyArray['a145]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a145]  <:  MyArray['a149]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a149]  <:  MyArray['a145]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a147]  <:  MyArray['a145]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a145]  <:  MyArray['a148]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a148]  <:  MyArray['a145]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a145]]  <:  {size: Int, set: ((Int, 'a145,) -> ()), get: (Int -> 'a145)}    TypeRef  RecordType
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  {size: Int, set: ((Int, 'a110',) -> ()), get: (Int -> 'a110')}
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a147]  <:  MyArray['a145]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  (‘a & MyArray['a144])  <:  {MyArray#A: mut MyArray['a145]..MyArray['a145]}    ComposedType  RecordType
//│ ╙──  ... looks like:  (‘a & MyArray['a95'])  <:  {MyArray#A: mut MyArray['a110']..MyArray['a110']}
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a149]]  <:  MyArray['a147]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a149]]  <:  (‘a | MyArray['a144])    TypeRef  ComposedType
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  (‘a | MyArray['a95'])
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a149]  <:  MyArray['a145]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a145]  <:  MyArray['a149]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a148]]  <:  MyArray['a147]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a148]]  <:  (‘a | MyArray['a144])    TypeRef  ComposedType
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  (‘a | MyArray['a95'])
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a148]  <:  MyArray['a145]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a145]  <:  MyArray['a148]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a147]]  <:  MyArray['a147]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a147]]  <:  (‘a | MyArray['a144])    TypeRef  ComposedType
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  (‘a | MyArray['a95'])
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a147]  <:  MyArray['a145]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ∀ 0. 'a110'  <:  MyArray['a147]    PolymorphicType  TypeRef
//│ ╙──  ... looks like:  ∀ 0. 'a110'  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a145]  <:  MyArray['a150]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a150]  <:  MyArray['a145]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a145]  <:  MyArray['a151]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a151]  <:  MyArray['a145]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a145]  <:  (‘a | MyArray['a144])    TypeRef  ComposedType
//│ ╙──  ... looks like:  MyArray['a110']  <:  (‘a | MyArray['a95'])
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a145]  <:  MyArray[MyArray['a145]]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray[MyArray['a110']]
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a147]]  <:  MyArray['a147]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a147]  <:  MyArray[MyArray['a149]]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray[MyArray['a110']]
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a147]  <:  MyArray[MyArray['a148]]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray[MyArray['a110']]
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a147]  <:  MyArray[MyArray['a147]]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray[MyArray['a110']]
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a147]]  <:  MyArray['a147]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a148]]  <:  MyArray['a147]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a149]]  <:  MyArray['a147]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ∀ 0. 'a110'  <:  MyArray['a147]    PolymorphicType  TypeRef
//│ ╙──  ... looks like:  ∀ 0. 'a110'  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a149]  <:  (‘a | MyArray['a144])    TypeRef  ComposedType
//│ ╙──  ... looks like:  MyArray['a110']  <:  (‘a | MyArray['a95'])
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a149]  <:  MyArray[MyArray['a145]]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray[MyArray['a110']]
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a149]  <:  MyArray[MyArray['a149]]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray[MyArray['a110']]
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a149]]  <:  MyArray['a147]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ∀ 0. 'a110'  <:  MyArray['a147]    PolymorphicType  TypeRef
//│ ╙──  ... looks like:  ∀ 0. 'a110'  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a147]]  <:  MyArray['a147]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a148]]  <:  MyArray['a147]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a149]]  <:  MyArray['a147]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a149]  <:  MyArray[MyArray['a148]]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray[MyArray['a110']]
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a149]  <:  MyArray[MyArray['a147]]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray[MyArray['a110']]
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a149]  <:  (‘a | MyArray['a144])    TypeRef  ComposedType
//│ ╙──  ... looks like:  MyArray['a110']  <:  (‘a | MyArray['a95'])
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a145]]  <:  MyArray['a149]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a147]]  <:  MyArray['a149]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a148]]  <:  MyArray['a149]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a149]]  <:  MyArray['a149]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ∀ 0. 'a110'  <:  MyArray['a149]    PolymorphicType  TypeRef
//│ ╙──  ... looks like:  ∀ 0. 'a110'  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a149]]  <:  MyArray['a147]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a148]]  <:  MyArray['a147]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a147]]  <:  MyArray['a147]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ∀ 0. 'a110'  <:  MyArray['a147]    PolymorphicType  TypeRef
//│ ╙──  ... looks like:  ∀ 0. 'a110'  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a148]]  <:  MyArray['a147]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a110']]  <:  MyArray['a110']
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray['a148]  <:  MyArray[MyArray['a148]]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray['a110']  <:  MyArray[MyArray['a110']]
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?a. ?a <: ?a0` took too many steps and ran out of fuel (2000)
//│ ║  l.+1: 	ty3A = ty3B
//│ ║        	^^^^^^^^^^^
//│ ╟──  + (‘a & MyArray['a144])
//│ ║  l.170: 	def ty3B: MyArray[MyArray['a]] as 'a
//│ ║         	          ^^^^^^^^^^^^^^^^^^^^
//│ ╟──  + (‘a & MyArray['a144])
//│ ║  l.170: 	def ty3B: MyArray[MyArray['a]] as 'a
//│ ║         	          ^^^^^^^^^^^^^^^^^^^^
//│ ╟──  + (‘a & MyArray['a144])
//│ ║  l.170: 	def ty3B: MyArray[MyArray['a]] as 'a
//│ ║         	          ^^^^^^^^^^^^^^^^^^^^
//│ ╟──  + 'a145
//│ ║  l.170: 	def ty3B: MyArray[MyArray['a]] as 'a
//│ ║         	          ^^^^^^^^^^^^^^^^^^^^
//│ ╟──  - 'a148
//│ ║  l.170: 	def ty3B: MyArray[MyArray['a]] as 'a
//│ ╙──       	          ^^^^^^^^^^^^^^^^^^^^
//│ constrain calls  : 1621
//│ annoying  calls  : 380
//│ subtyping calls  : 594

def ty4B: MyArray[MyArray[MyArray['a]]] as 'a
//│ ty4B: 'a
//│   where
//│     'a := MyArray[MyArray[MyArray['a]]]

:e // FIXME (probably the issue reproduced in `ADRsRepro.mls`)
:stats
ty4B = ty4B
//│ 'a
//│   where
//│     'a := MyArray[MyArray[MyArray['a]]]
//│   <:  ty4B:
//│ 'a
//│   where
//│     'a := MyArray[MyArray[MyArray['a]]]
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty4B = ty4B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ((int<TypeName(number)>, MyArray[MyArray['a172]],) -> ())  <:  ((int<TypeName(number)>, MyArray[MyArray['a170]],) -> ())    FunctionType  FunctionType
//│ ╙──  ... looks like:  ((int<TypeName(number)>, MyArray[MyArray['a159']],) -> ())  <:  ((int<TypeName(number)>, MyArray[MyArray['a159']],) -> ())
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty4B = ty4B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a172]]  <:  MyArray[MyArray['a170]]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a159']]  <:  MyArray[MyArray['a159']]
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty4B = ty4B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a170]]  <:  MyArray[MyArray['a173]]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a159']]  <:  MyArray[MyArray['a159']]
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty4B = ty4B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a173]]  <:  MyArray[MyArray['a170]]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a159']]  <:  MyArray[MyArray['a159']]
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty4B = ty4B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ((int<TypeName(number)>, MyArray[MyArray['a169]],) -> ())  <:  ((int<TypeName(number)>, MyArray[MyArray['a170]],) -> ())    FunctionType  FunctionType
//│ ╙──  ... looks like:  ((int<TypeName(number)>, MyArray[MyArray['a159']],) -> ())  <:  ((int<TypeName(number)>, MyArray[MyArray['a159']],) -> ())
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.+1: 	ty4B = ty4B
//│ ║        	^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  MyArray[MyArray['a170]]  <:  MyArray[MyArray['a169]]    TypeRef  TypeRef
//│ ╙──  ... looks like:  MyArray[MyArray['a159']]  <:  MyArray[MyArray['a159']]
//│ constrain calls  : 103
//│ annoying  calls  : 72
//│ subtyping calls  : 111



//===//===//===// ERRORS //===//===//===//


:e
:stats
ty1A = ty1B
//│ MyArray[0 | 1]
//│   <:  ty1A:
//│ MyArray[int]
//│ ╔══[ERROR] Type mismatch in def definition:
//│ ║  l.+1: 	ty1A = ty1B
//│ ║        	^^^^^^^^^^^
//│ ╟── type `int` does not match type `0 | 1`
//│ ║  l.17: 	def ty1A: MyArray[int]
//│ ╙──      	                  ^^^
//│ constrain calls  : 26
//│ annoying  calls  : 29
//│ subtyping calls  : 101

:e
:stats
ty1B = ty1A
//│ MyArray[int]
//│   <:  ty1B:
//│ MyArray[0 | 1]
//│ ╔══[ERROR] Type mismatch in def definition:
//│ ║  l.+1: 	ty1B = ty1A
//│ ║        	^^^^^^^^^^^
//│ ╟── type `int` does not match type `0 | 1`
//│ ║  l.17: 	def ty1A: MyArray[int]
//│ ╙──      	                  ^^^
//│ constrain calls  : 26
//│ annoying  calls  : 29
//│ subtyping calls  : 72


:e
:stats
ty2A = ty2B
//│ MyArray[MyArray['a]]
//│   <:  ty2A:
//│ MyArray['a]
//│ ╔══[ERROR] Type mismatch in def definition:
//│ ║  l.+1: 	ty2A = ty2B
//│ ║        	^^^^^^^^^^^
//│ ╟── type `‘a` is not an instance of type `MyArray`
//│ ║  l.23: 	def ty2A: MyArray['a]
//│ ║        	                  ^^
//│ ╟── Note: constraint arises from applied type reference:
//│ ║  l.35: 	def ty2B: MyArray[MyArray['a]]
//│ ╙──      	                  ^^^^^^^^^^^
//│ ╔══[ERROR] Type mismatch in def definition:
//│ ║  l.+1: 	ty2A = ty2B
//│ ║        	^^^^^^^^^^^
//│ ╟── type `‘a` is not a record (expected a record with fields: size, set, get)
//│ ║  l.23: 	def ty2A: MyArray['a]
//│ ║        	                  ^^
//│ ╟── Note: constraint arises from record type:
//│ ║  l.4: 	class MyArray[A]: { size: int; set: (int, A) -> (); get: int -> A }
//│ ║       	                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── from applied type reference:
//│ ║  l.35: 	def ty2B: MyArray[MyArray['a]]
//│ ╙──      	                  ^^^^^^^^^^^
//│ ╔══[ERROR] Type mismatch in def definition:
//│ ║  l.+1: 	ty2A = ty2B
//│ ║        	^^^^^^^^^^^
//│ ╟── type `‘a` does not have field 'MyArray#A'
//│ ║  l.23: 	def ty2A: MyArray['a]
//│ ║        	                  ^^
//│ ╟── Note: constraint arises from applied type reference:
//│ ║  l.35: 	def ty2B: MyArray[MyArray['a]]
//│ ╙──      	                  ^^^^^^^^^^^
//│ ╔══[ERROR] Type mismatch in def definition:
//│ ║  l.+1: 	ty2A = ty2B
//│ ║        	^^^^^^^^^^^
//│ ╟── type `MyArray[?a]` is not an instance of type `'a`
//│ ║  l.35: 	def ty2B: MyArray[MyArray['a]]
//│ ║        	                  ^^^^^^^^^^^
//│ ╟── Note: constraint arises from type variable:
//│ ║  l.23: 	def ty2A: MyArray['a]
//│ ╙──      	                  ^^
//│ ╔══[ERROR] Type mismatch in def definition:
//│ ║  l.+1: 	ty2A = ty2B
//│ ║        	^^^^^^^^^^^
//│ ╟── type `‘a` is not a record (expected a record with fields: size, set, get)
//│ ║  l.23: 	def ty2A: MyArray['a]
//│ ║        	                  ^^
//│ ╟── Note: constraint arises from record type:
//│ ║  l.4: 	class MyArray[A]: { size: int; set: (int, A) -> (); get: int -> A }
//│ ║       	                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── from applied type reference:
//│ ║  l.35: 	def ty2B: MyArray[MyArray['a]]
//│ ╙──      	                  ^^^^^^^^^^^
//│ ╔══[ERROR] Type mismatch in def definition:
//│ ║  l.+1: 	ty2A = ty2B
//│ ║        	^^^^^^^^^^^
//│ ╟── type `‘a` does not have field 'MyArray#A'
//│ ║  l.23: 	def ty2A: MyArray['a]
//│ ║        	                  ^^
//│ ╟── Note: constraint arises from applied type reference:
//│ ║  l.35: 	def ty2B: MyArray[MyArray['a]]
//│ ╙──      	                  ^^^^^^^^^^^
//│ ╔══[ERROR] Type mismatch in def definition:
//│ ║  l.+1: 	ty2A = ty2B
//│ ║        	^^^^^^^^^^^
//│ ╟── type `MyArray[?a]` is not an instance of type `'a`
//│ ║  l.35: 	def ty2B: MyArray[MyArray['a]]
//│ ║        	                  ^^^^^^^^^^^
//│ ╟── Note: constraint arises from type variable:
//│ ║  l.23: 	def ty2A: MyArray['a]
//│ ╙──      	                  ^^
//│ constrain calls  : 40
//│ annoying  calls  : 32
//│ subtyping calls  : 105


