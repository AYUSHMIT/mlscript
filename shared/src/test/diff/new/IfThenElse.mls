:AllowParseErrors
:AllowTypeErrors // TODO rm


if true then 1 else 2
//│ |#if| |true| |#then| |1| |#else| |2|
//│ Parsed: ‹if true then 1 else 2›

if a == 0
then "false" else 2
//│ |#if| |a| |==| |0|↵|#then| |"false"| |#else| |2|
//│ Parsed: ‹if a == 0 then "false" else 2›

if a == 0
then "false"
else 2
//│ |#if| |a| |==| |0|↵|#then| |"false"|↵|#else| |2|
//│ Parsed: ‹if a == 0 then "false" else 2›

if a == 0
  then "false"
  else 2
//│ |#if| |a| |==| |0|→|#then| |"false"|↵|#else| |2|
//│ Parsed: ‹if a == 0 then "false" else 2›

if a == 0
then "false"
  else 2
//│ |#if| |a| |==| |0|↵|#then| |"false"|→|#else| |2|
//│ Parsed: ‹if a == 0 then "false" else 2›

if a == 0
  then "false"
else 2
//│ |#if| |a| |==| |0|→|#then| |"false"|←|↵|#else| |2|
//│ Parsed: ‹if a == 0 then "false" else 2›

if a == 0
  then "false"
print of "ok!"
//│ |#if| |a| |==| |0|→|#then| |"false"|←|↵|print| |#of| |"ok!"|
//│ Parsed: ‹if a == 0 then "false"; (print ("ok!",))›

if a == 0 then "false"
  else 2
print of "ok!"
//│ |#if| |a| |==| |0| |#then| |"false"|→|#else| |2|←|↵|print| |#of| |"ok!"|
//│ Parsed: ‹if a == 0 then "false" else 2; (print ("ok!",))›

if
  true  then "true"
  false then "false"
//│ |#if|→|true| |#then| |"true"|↵|false| |#then| |"false"|
//│ Parsed: ‹if ‹true then "true"; false then "false"››

if
  a == 0 then "false"
  a == 1 then "true"
//│ |#if|→|a| |==| |0| |#then| |"false"|↵|a| |==| |1| |#then| |"true"|
//│ Parsed: ‹if ‹a == 0 then "false"; a == 1 then "true"››

if a ==
  0 then "false"
  1 then "true"
//│ |#if| |a| |==|→|0| |#then| |"false"|↵|1| |#then| |"true"|
//│ Parsed: ‹if a == ‹0 then "false"; 1 then "true"››

if a ==
  0 then "false"
  1 then "true"
else 2
//│ |#if| |a| |==|→|0| |#then| |"false"|↵|1| |#then| |"true"|←|↵|#else| |2|
//│ Parsed: ‹if a == ‹0 then "false"; 1 then "true"› else 2›


if lol
//│ |#if| |lol|
//│ ╔══[ERROR] Expected 'then' clause; found reference instead
//│ ║  l.76: 	if lol
//│ ║        	   ^^^
//│ ╟── Note: 'if' expression started here:
//│ ║  l.76: 	if lol
//│ ╙──      	^^
//│ Parsed: ‹if lol then ()›

if lol then
//│ |#if| |lol| |#then|
//│ Parsed: ‹if lol then ()›

if lol then else
//│ |#if| |lol| |#then| |#else|
//│ ╔══[ERROR] Unexpected 'else' keyword in expression position
//│ ║  l.90: 	if lol then else
//│ ╙──      	            ^^^^
//│ Parsed: ‹if lol then ()›

if lol
then
else
//│ |#if| |lol|↵|#then|↵|#else|
//│ ╔══[ERROR] Unexpected newline in expression position
//│ ║  l.98: 	then
//│ ║        	    
//│ ║  l.99: 	else
//│ ╙──      	
//│ ╔══[ERROR] Unexpected 'else' keyword in expression position
//│ ║  l.99: 	else
//│ ╙──      	^^^^
//│ Parsed: ‹if lol then ()›

if lol else 2
//│ |#if| |lol| |#else| |2|
//│ ╔══[ERROR] Expected 'then' clause; found reference instead
//│ ║  l.111: 	if lol else 2
//│ ║         	   ^^^
//│ ╟── Note: 'if' expression started here:
//│ ║  l.111: 	if lol else 2
//│ ╙──       	^^
//│ Parsed: ‹if lol then () else 2›





