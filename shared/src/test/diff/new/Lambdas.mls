:AllowParseErrors
:AllowTypeErrors // TODO rm


x => x
//│ |x| |=>| |x|
//│ Parsed: {=> x x}

(x) => x
//│ |(|x|)| |=>| |x|
//│ Parsed: {=> '(' x, ')' x}

fun x => x
//│ |#fun| |x| |=>| |x|
//│ ╔══[ERROR] Unexpected 'fun' keyword in expression position
//│ ║  l.13: 	fun x => x
//│ ╙──      	^^^
//│ Parsed: {=> x x}


fun f x = x
//│ |#fun| |f| |x| |#=| |x|
//│ ╔══[ERROR] Unexpected 'fun' keyword in expression position
//│ ║  l.21: 	fun f x = x
//│ ╙──      	^^^
//│ ╔══[ERROR] Unexpected '=' keyword in expression position
//│ ║  l.21: 	fun f x = x
//│ ╙──      	        ^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.21: 	fun f x = x
//│ ╙──      	      ^^^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.21: 	fun f x = x
//│ ╙──      	    ^^^^^^^
//│ Parsed: {f (x (x,),)}

fun f(x) = x
//│ |#fun| |f|(|x|)| |#=| |x|
//│ ╔══[ERROR] Unexpected 'fun' keyword in expression position
//│ ║  l.37: 	fun f(x) = x
//│ ╙──      	^^^
//│ ╔══[ERROR] Unexpected '=' keyword in expression position
//│ ║  l.37: 	fun f(x) = x
//│ ╙──      	         ^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.37: 	fun f(x) = x
//│ ╙──      	    ^^^^^^^^
//│ Parsed: {f (x,) (x,)}

f(x) + x
//│ |f|(|x|)| |+| |x|
//│ Parsed: {+ (f (x,)) x}


(x, y) => x
//│ |(|x|,| |y|)| |=>| |x|
//│ Parsed: {=> '(' x, y, ')' x}


