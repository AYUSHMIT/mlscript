:AllowParseErrors
:AllowTypeErrors // TODO rm

1
//│ |1|
//│ Parsed: ‹1›

f 1
//│ |f| |1|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.8: 	f 1
//│ ╙──     	^^^
//│ Parsed: ‹(f (1,))›

f(1)
//│ |f|(|1|)|
//│ Parsed: ‹(f (1,))›

f (1)
//│ |f| |(|1|)|
//│ Parsed: ‹(f (1,))›

f of 1
//│ |f| |#of| |1|
//│ Parsed: ‹(f (1,))›

1 + 1
//│ |1| |+| |1|
//│ Parsed: ‹((+ 1) 1)›

f 1 + 1
//│ |f| |1| |+| |1|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.31: 	f 1 + 1
//│ ╙──      	^^^^^^^
//│ Parsed: ‹(f (((+ 1) 1),))›

f(1 + 1)
//│ |f|(|1| |+| |1|)|
//│ Parsed: ‹(f (((+ 1) 1),))›

f of 1 + 1
//│ |f| |#of| |1| |+| |1|
//│ Parsed: ‹(f (((+ 1) 1),))›

1 2 3
//│ |1| |2| |3|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.46: 	1 2 3
//│ ╙──      	  ^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.46: 	1 2 3
//│ ╙──      	^^^^^
//│ Parsed: ‹(1 ((2 (3,)),))›

12  3
//│ |12| |3|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.56: 	12  3
//│ ╙──      	^^^^^
//│ Parsed: ‹(12 (3,))›

3 + 2 4 - 1
//│ |3| |+| |2| |4| |-| |1|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.63: 	3 + 2 4 - 1
//│ ╙──      	    ^^^^^^^
//│ Parsed: ‹((+ 3) (2 (((- 4) 1),)))›

foo bar
  baz 1
  2 3
//│ |foo| |bar|→|baz| |1|↵|2| |3|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.71: 	  baz 1
//│ ╙──      	  ^^^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.72: 	  2 3
//│ ╙──      	  ^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.70: 	foo bar
//│ ║        	    ^^^
//│ ║  l.71: 	  baz 1
//│ ║        	^^^^^^^
//│ ║  l.72: 	  2 3
//│ ╙──      	^^^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.70: 	foo bar
//│ ║        	^^^^^^^
//│ ║  l.71: 	  baz 1
//│ ║        	^^^^^^^
//│ ║  l.72: 	  2 3
//│ ╙──      	^^^^^
//│ Parsed: ‹(foo ((bar (‹(baz (1,)); (2 (3,))›,)),))›

foo bar
  baz 1
    2 3
  4 v5
//│ |foo| |bar|→|baz| |1|→|2| |3|←|↵|4| |v5|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.98: 	    2 3
//│ ╙──      	    ^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.97: 	  baz 1
//│ ║        	      ^
//│ ║  l.98: 	    2 3
//│ ╙──      	^^^^^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.97: 	  baz 1
//│ ║        	  ^^^^^
//│ ║  l.98: 	    2 3
//│ ╙──      	^^^^^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.99: 	  4 v5
//│ ╙──      	  ^^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.96: 	foo bar
//│ ║        	    ^^^
//│ ║  l.97: 	  baz 1
//│ ║        	^^^^^^^
//│ ║  l.98: 	    2 3
//│ ║        	^^^^^^^
//│ ║  l.99: 	  4 v5
//│ ╙──      	^^^^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.96: 	foo bar
//│ ║        	^^^^^^^
//│ ║  l.97: 	  baz 1
//│ ║        	^^^^^^^
//│ ║  l.98: 	    2 3
//│ ║        	^^^^^^^
//│ ║  l.99: 	  4 v5
//│ ╙──      	^^^^^^
//│ Parsed: ‹(foo ((bar (‹(baz ((1 (‹(2 (3,))›,)),)); (4 (v5,))›,)),))›

foo of bar of
  baz of 1 of
    2 of 3
  4 of v5
//│ |foo| |#of| |bar| |#of|→|baz| |#of| |1| |#of|→|2| |#of| |3|←|↵|4| |#of| |v5|
//│ Parsed: ‹(foo ((bar (‹(baz ((1 (‹(2 (3,))›,)),)); (4 (v5,))›,)),))›

foo
  1
//│ |foo|→|1|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.144: 	foo
//│ ║         	^^^
//│ ║  l.145: 	  1
//│ ╙──       	^^^
//│ Parsed: ‹(foo (‹1›,))›

foo of
  1
//│ |foo| |#of|→|1|
//│ Parsed: ‹(foo (‹1›,))›

  
//│ | |
//│ ╔══[ERROR] Unexpected space in expression position
//│ ║  l.159: 	  
//│ ╙──       	^^
//│ Parsed: ‹()›

  1
//│ | |1|
//│ ╔══[ERROR] Unexpected space in expression position
//│ ║  l.166: 	  1
//│ ╙──       	^^
//│ Parsed: ‹1›

  
  1
//│ | |→|1|
//│ ╔══[ERROR] Unexpected space in expression position
//│ ║  l.173: 	  
//│ ╙──       	^^
//│ Parsed: ‹‹1››

(1)
//│ |(|1|)|
//│ Parsed: ‹(1)›

(1
//│ |(|1|
//│ ╔══[ERROR] Expected closing parenthesis; found end of input instead
//│ ║  l.185: 	(1
//│ ║         	  
//│ ╟── Note: unmatched parenthesis was opened here:
//│ ║  l.185: 	(1
//│ ╙──       	^
//│ Parsed: ‹(1)›

(1))
//│ |(|1|)|)|
//│ ╔══[ERROR] Expected end of input; found closing parenthesis instead
//│ ║  l.195: 	(1))
//│ ╙──       	   ^
//│ Parsed: ‹(1)›

(
//│ |(|
//│ ╔══[ERROR] Expected closing parenthesis; found end of input instead
//│ ║  l.202: 	(
//│ ║         	 
//│ ╟── Note: unmatched parenthesis was opened here:
//│ ║  l.202: 	(
//│ ╙──       	^
//│ Parsed: ‹(())›

)
//│ |)|
//│ ╔══[ERROR] Unexpected closing parenthesis in expression position
//│ ║  l.212: 	)
//│ ╙──       	^
//│ Parsed: ‹()›

1+
//│ |1|+|
//│ Parsed: ‹((+ 1) ())›

*
//│ |*|
//│ ╔══[ERROR] Unexpected operator in expression position
//│ ║  l.223: 	*
//│ ╙──       	^
//│ Parsed: ‹()›


f 1
//│ |f| |1|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.231: 	f 1
//│ ╙──       	^^^
//│ Parsed: ‹(f (1,))›

f(1)
//│ |f|(|1|)|
//│ Parsed: ‹(f (1,))›

f (1)
//│ |f| |(|1|)|
//│ Parsed: ‹(f (1,))›


f 1, 2, 3
//│ |f| |1|,| |2|,| |3|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.247: 	f 1, 2, 3
//│ ╙──       	^^^^^^^^^
//│ Parsed: ‹(f (1, 2, 3,))›

f (1, 2, 3)
//│ |f| |(|1|,| |2|,| |3|)|
//│ Parsed: ‹(f (1, 2, 3,))›

f(1, 2, 3)
//│ |f|(|1|,| |2|,| |3|)|
//│ Parsed: ‹(f (1, 2, 3,))›


f 1,, 2
//│ |f| |1|,|,| |2|
//│ ╔══[ERROR] Unexpected comma in expression position
//│ ║  l.263: 	f 1,, 2
//│ ╙──       	    ^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.263: 	f 1,, 2
//│ ╙──       	^^^^^^^
//│ Parsed: ‹(f (1, 2,))›


f of x
//│ |f| |#of| |x|
//│ Parsed: ‹(f (x,))›

f of g of x
//│ |f| |#of| |g| |#of| |x|
//│ Parsed: ‹(f ((g (x,)),))›

f of of g
//│ |f| |#of| |#of| |g|
//│ ╔══[ERROR] Unexpected 'of' keyword in expression position
//│ ║  l.282: 	f of of g
//│ ╙──       	     ^^
//│ Parsed: ‹(f (g,))›


f x: 1
//│ |f| |x|:| |1|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.290: 	f x: 1
//│ ╙──       	^^^^^^
//│ Parsed: ‹(f (x: 1,))›

f x: 1,
//│ |f| |x|:| |1|,|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.297: 	f x: 1,
//│ ╙──       	^^^^^^^
//│ Parsed: ‹(f (x: 1, (),))›

f x : 1
//│ |f| |x| |:| |1|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.304: 	f x : 1
//│ ╙──       	^^^^^^^
//│ Parsed: ‹(f (((: x) 1),))›

f x: 1, y: 2
//│ |f| |x|:| |1|,| |y|:| |2|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.311: 	f x: 1, y: 2
//│ ╙──       	^^^^^^^^^^^^
//│ Parsed: ‹(f (x: 1, y: 2,))›

f x : 1, y: 2
//│ |f| |x| |:| |1|,| |y|:| |2|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.318: 	f x : 1, y: 2
//│ ╙──       	^^^^^^^^^^^^^
//│ Parsed: ‹(f (((: x) 1), y: 2,))›

f x: 1, y: 2, z: 3
//│ |f| |x|:| |1|,| |y|:| |2|,| |z|:| |3|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.325: 	f x: 1, y: 2, z: 3
//│ ╙──       	^^^^^^^^^^^^^^^^^^
//│ Parsed: ‹(f (x: 1, y: 2, z: 3,))›

f x: 1, y: g 2, z: 3
//│ |f| |x|:| |1|,| |y|:| |g| |2|,| |z|:| |3|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.332: 	f x: 1, y: g 2, z: 3
//│ ╙──       	           ^^^^^^^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.332: 	f x: 1, y: g 2, z: 3
//│ ╙──       	^^^^^^^^^^^^^^^^^^^^
//│ Parsed: ‹(f (x: 1, y: (g (2, z: 3,)),))›

f  x: 1,  y:  g  2, z: 3
//│ |f| |x|:| |1|,| |y|:| |g| |2|,| |z|:| |3|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.342: 	f  x: 1,  y:  g  2, z: 3
//│ ╙──       	              ^^^^^^^^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.342: 	f  x: 1,  y:  g  2, z: 3
//│ ╙──       	^^^^^^^^^^^^^^^^^^^^^^^^
//│ Parsed: ‹(f (x: 1, y: (g (2, z: 3,)),))›

f of x: 1, y: g of 2, z: 3
//│ |f| |#of| |x|:| |1|,| |y|:| |g| |#of| |2|,| |z|:| |3|
//│ Parsed: ‹(f (x: 1, y: (g (2, z: 3,)),))›

f x: 1 + 1, y: 2 2, z: 3 + 2 4 - 1
//│ |f| |x|:| |1| |+| |1|,| |y|:| |2| |2|,| |z|:| |3| |+| |2| |4| |-| |1|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.356: 	f x: 1 + 1, y: 2 2, z: 3 + 2 4 - 1
//│ ╙──       	                           ^^^^^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.356: 	f x: 1 + 1, y: 2 2, z: 3 + 2 4 - 1
//│ ╙──       	               ^^^^^^^^^^^^^^^^^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.356: 	f x: 1 + 1, y: 2 2, z: 3 + 2 4 - 1
//│ ╙──       	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ Parsed: ‹(f (x: ((+ 1) 1), y: (2 (2, z: ((+ 3) (2 (((- 4) 1),))),)),))›


x.y
//│ |x|.|y|
//│ Parsed: ‹((. x) y)›

.y
//│ |.|y|
//│ ╔══[ERROR] Unexpected operator in expression position
//│ ║  l.374: 	.y
//│ ╙──       	^
//│ Parsed: ‹y›

acc
+ 1
//│ |acc|↵|+| |1|
//│ Parsed: ‹((+ acc) 1)›

acc
  + 1
//│ |acc|→|+| |1|
//│ Parsed: ‹((+ acc) 1)›

acc
  + 1
  + 2
  * 3
//│ |acc|→|+| |1|↵|+| |2|↵|*| |3|
//│ Parsed: ‹((+ ((+ acc) 1)) ((* 2) 3))›

acc + 1 + 2 * 3
//│ |acc| |+| |1| |+| |2| |*| |3|
//│ Parsed: ‹((+ ((+ acc) 1)) ((* 2) 3))›

acc+1+2*3
//│ |acc|+|1|+|2|*|3|
//│ Parsed: ‹((+ ((+ acc) 1)) ((* 2) 3))›

acc +
  foo bar
  baz
//│ |acc| |+|→|foo| |bar|↵|baz|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.407: 	  foo bar
//│ ╙──       	  ^^^^^^^
//│ Parsed: ‹((+ acc) ‹(foo (bar,)); baz›)›

a+
  b
  c
//│ |a|+|→|b|↵|c|
//│ Parsed: ‹((+ a) ‹b; c›)›


