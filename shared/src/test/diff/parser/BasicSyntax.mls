:AllowParseErrors
:AllowTypeErrors // TODO rm

1
//│ |1|
//│ Parsed: {1}

f 1
//│ |f| |1|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.8: 	f 1
//│ ╙──     	^^^
//│ Parsed: {f (1,)}

()
//│ |(BEG:||:END)|
//│ Parsed: {'('  ')'}

// FIXME `(undefined,)`
f()
//│ |f|(BEG:||:END)|
//│ Parsed: {f ()}

f(1)
//│ |f|(BEG:|1|:END)|
//│ Parsed: {f (1,)}

f (1)
//│ |f| |(BEG:|1|:END)|
//│ Parsed: {f (1,)}

f of 1
//│ |f| |#of| |1|
//│ Parsed: {f (1,)}

1 + 1
//│ |1| |+| |1|
//│ Parsed: {+ 1 1}

f 1 + 1
//│ |f| |1| |+| |1|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.40: 	f 1 + 1
//│ ╙──      	^^^^^^^
//│ Parsed: {f (+ 1 1,)}

f(1 + 1)
//│ |f|(BEG:|1| |+| |1|:END)|
//│ Parsed: {f (+ 1 1,)}

f of 1 + 1
//│ |f| |#of| |1| |+| |1|
//│ Parsed: {f (+ 1 1,)}

f(1) + 1
//│ |f|(BEG:|1|:END)| |+| |1|
//│ Parsed: {+ (f (1,)) 1}

1 2 3
//│ |1| |2| |3|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.59: 	1 2 3
//│ ╙──      	  ^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.59: 	1 2 3
//│ ╙──      	^^^^^
//│ Parsed: {1 (2 (3,),)}

12  3
//│ |12| |3|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.69: 	12  3
//│ ╙──      	^^^^^
//│ Parsed: {12 (3,)}

3 + 2 4 - 1
//│ |3| |+| |2| |4| |-| |1|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.76: 	3 + 2 4 - 1
//│ ╙──      	    ^^^^^^^
//│ Parsed: {+ 3 (2 (- 4 1,))}

foo bar
  baz 1
  2 3
//│ |foo| |bar|→|baz| |1|↵|2| |3|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.83: 	foo bar
//│ ╙──      	^^^^^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.84: 	  baz 1
//│ ╙──      	  ^^^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.85: 	  2 3
//│ ╙──      	  ^^^
//│ Parsed: {foo (bar,) {baz (1,); 2 (3,)}}

foo bar
  baz 1
    2 3
  4 v5
//│ |foo| |bar|→|baz| |1|→|2| |3|←|↵|4| |v5|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.98: 	foo bar
//│ ╙──      	^^^^^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.99: 	  baz 1
//│ ╙──      	  ^^^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.100: 	    2 3
//│ ╙──       	    ^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.101: 	  4 v5
//│ ╙──       	  ^^^^
//│ Parsed: {foo (bar,) {baz (1,) {2 (3,)}; 4 (v5,)}}

foo of bar of
  baz of 1 of
    2 of 3
  4 of v5
//│ |foo| |#of| |bar| |#of|→|baz| |#of| |1| |#of|→|2| |#of| |3|←|↵|4| |#of| |v5|
//│ Parsed: {foo (bar (baz (1 (2 (3,),),),) {4 (v5,)},)}

foo
  1
//│ |foo|→|1|
//│ Parsed: {foo {1}}

foo of
  1
//│ |foo| |#of|→|1|
//│ Parsed: {foo (1,)}

foo
  of 1
//│ |foo|→|#of| |1|
//│ Parsed: {foo (1,)}

foo
  of 1, 2, 3
//│ |foo|→|#of| |1|,| |2|,| |3|
//│ Parsed: {foo (1, 2, 3,)}

foo
  of (1, 2, 3)
//│ |foo|→|#of| |(BEG:|1|,| |2|,| |3|:END)|
//│ Parsed: {foo ('(' 1, 2, 3, ')',)}

foo
  of
    1
//│ |foo|→|#of|→|1|
//│ Parsed: {foo ({1},)}

foo
  of 1
  of 2
//│ |foo|→|#of| |1|↵|#of| |2|
//│ Parsed: {foo (1,) (2,)}

foo
  of f
    of 2
//│ |foo|→|#of| |f|→|#of| |2|
//│ Parsed: {foo (f (2,),)}

foo
    of 1
  of 2
//│ |foo|→|#of| |1|←|→|#of| |2|
//│ Parsed: {foo (1,) (2,)}

  
//│ | |
//│ ╔══[ERROR] Unexpected space in expression position
//│ ║  l.173: 	  
//│ ╙──       	^^
//│ Parsed: {undefined}

  1
//│ | |1|
//│ ╔══[ERROR] Unexpected space in expression position
//│ ║  l.180: 	  1
//│ ╙──       	^^
//│ Parsed: {1}

  
  1
//│ | |→|1|
//│ ╔══[ERROR] Unexpected space in expression position
//│ ║  l.187: 	  
//│ ╙──       	^^
//│ Parsed: {{1}}

(1)
//│ |(BEG:|1|:END)|
//│ Parsed: {'(' 1, ')'}

(1
//│ ╔══[ERROR] Unmatched opening parenthesis
//│ ║  l.199: 	(1
//│ ╙──       	^
//│ |1|
//│ Parsed: {1}

(1))
//│ ╔══[ERROR] Unexpected closing parenthesis
//│ ║  l.206: 	(1))
//│ ╙──       	   ^
//│ |(BEG:|1|:END)|
//│ Parsed: {'(' 1, ')'}

(
//│ ╔══[ERROR] Unmatched opening parenthesis
//│ ║  l.213: 	(
//│ ╙──       	^
//│ ||
//│ Parsed: {}

)
//│ ╔══[ERROR] Unexpected closing parenthesis
//│ ║  l.220: 	)
//│ ╙──       	^
//│ ||
//│ Parsed: {}

1+
//│ |1|+|
//│ ╔══[ERROR] Unexpected end of input; an expression was expected here
//│ ║  l.227: 	1+
//│ ╙──       	  ^
//│ Parsed: {+ 1 undefined}

*
//│ |*|
//│ ╔══[ERROR] Unexpected operator in expression position
//│ ║  l.234: 	*
//│ ╙──       	^
//│ Parsed: {undefined}


f 1
//│ |f| |1|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.242: 	f 1
//│ ╙──       	^^^
//│ Parsed: {f (1,)}

f(1)
//│ |f|(BEG:|1|:END)|
//│ Parsed: {f (1,)}

f (1)
//│ |f| |(BEG:|1|:END)|
//│ Parsed: {f (1,)}


f 1, 2, 3
//│ |f| |1|,| |2|,| |3|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.258: 	f 1, 2, 3
//│ ╙──       	^^^^^^^^^
//│ Parsed: {f (1, 2, 3,)}

f (1, 2, 3)
//│ |f| |(BEG:|1|,| |2|,| |3|:END)|
//│ Parsed: {f (1, 2, 3,)}

f(1, 2, 3)
//│ |f|(BEG:|1|,| |2|,| |3|:END)|
//│ Parsed: {f (1, 2, 3,)}

f[]
//│ |f|[BEG:||:END]|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.273: 	f[]
//│ ╙──       	^^^
//│ Parsed: {f ('('  ')',)}

f[1]
//│ |f|[BEG:|1|:END]|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.280: 	f[1]
//│ ╙──       	^^^^
//│ Parsed: {f ('(' 1, ')',)}

f[1, 2, 3]
//│ |f|[BEG:|1|,| |2|,| |3|:END]|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.287: 	f[1, 2, 3]
//│ ╙──       	^^^^^^^^^^
//│ Parsed: {f ('(' 1, 2, 3, ')',)}

f{}
//│ |f|{BEG:||:END}|
//│ ╔══[ERROR] Expected end of input; found curly brace section instead
//│ ║  l.294: 	f{}
//│ ╙──       	 ^^
//│ Parsed: {f}

f{1}
//│ |f|{BEG:|1|:END}|
//│ ╔══[ERROR] Expected end of input; found curly brace section instead
//│ ║  l.301: 	f{1}
//│ ╙──       	 ^^^
//│ Parsed: {f}

f{1, 2, 3}
//│ |f|{BEG:|1|,| |2|,| |3|:END}|
//│ ╔══[ERROR] Expected end of input; found curly brace section instead
//│ ║  l.308: 	f{1, 2, 3}
//│ ╙──       	 ^^^^^^^^^
//│ Parsed: {f}


f 1,, 2
//│ |f| |1|,|,| |2|
//│ ╔══[ERROR] Unexpected comma in expression position
//│ ║  l.316: 	f 1,, 2
//│ ╙──       	    ^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.316: 	f 1,, 2
//│ ╙──       	^^^^^^^
//│ Parsed: {f (1, 2,)}


f of x
//│ |f| |#of| |x|
//│ Parsed: {f (x,)}

f g x
//│ |f| |g| |x|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.331: 	f g x
//│ ╙──       	  ^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.331: 	f g x
//│ ╙──       	^^^^^
//│ Parsed: {f (g (x,),)}

f of g of x
//│ |f| |#of| |g| |#of| |x|
//│ Parsed: {f (g (x,),)}

f of of g
//│ |f| |#of| |#of| |g|
//│ ╔══[ERROR] Unexpected 'of' keyword in expression position
//│ ║  l.345: 	f of of g
//│ ╙──       	     ^^
//│ Parsed: {f (g,)}


f x: 1
//│ |f| |x|#:| |1|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.353: 	f x: 1
//│ ╙──       	^^^^^^
//│ Parsed: {f (x: 1,)}

f x: 1,
//│ |f| |x|#:| |1|,|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.360: 	f x: 1,
//│ ╙──       	^^^^^^
//│ Parsed: {f (x: 1,)}

f x : 1
//│ |f| |x| |#:| |1|
//│ ╔══[ERROR] Unexpected ':' keyword in expression position
//│ ║  l.367: 	f x : 1
//│ ╙──       	    ^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.367: 	f x : 1
//│ ╙──       	  ^^^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.367: 	f x : 1
//│ ╙──       	^^^^^^^
//│ Parsed: {f (x (1,),)}

f x: 1, y: 2
//│ |f| |x|#:| |1|,| |y|#:| |2|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.380: 	f x: 1, y: 2
//│ ╙──       	^^^^^^^^^^^^
//│ Parsed: {f (x: 1, y: 2,)}

f x : 1, y: 2
//│ |f| |x| |#:| |1|,| |y|#:| |2|
//│ ╔══[ERROR] Unexpected ':' keyword in expression position
//│ ║  l.387: 	f x : 1, y: 2
//│ ╙──       	    ^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.387: 	f x : 1, y: 2
//│ ╙──       	  ^^^^^^^^^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.387: 	f x : 1, y: 2
//│ ╙──       	^^^^^^^^^^^^^
//│ Parsed: {f (x (1, y: 2,),)}

f x: 1, y: 2, z: 3
//│ |f| |x|#:| |1|,| |y|#:| |2|,| |z|#:| |3|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.400: 	f x: 1, y: 2, z: 3
//│ ╙──       	^^^^^^^^^^^^^^^^^^
//│ Parsed: {f (x: 1, y: 2, z: 3,)}

f x: 1, y: g 2, z: 3
//│ |f| |x|#:| |1|,| |y|#:| |g| |2|,| |z|#:| |3|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.407: 	f x: 1, y: g 2, z: 3
//│ ╙──       	           ^^^^^^^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.407: 	f x: 1, y: g 2, z: 3
//│ ╙──       	^^^^^^^^^^^^^^^^^^^^
//│ Parsed: {f (x: 1, y: g (2, z: 3,),)}

f(x: 1, y: g(2, z: 3))
//│ |f|(BEG:|x|#:| |1|,| |y|#:| |g|(BEG:|2|,| |z|#:| |3|:END)|:END)|
//│ Parsed: {f (x: 1, y: g (2, z: 3,),)}

f(x: 1, y: g(2), z: 3)
//│ |f|(BEG:|x|#:| |1|,| |y|#:| |g|(BEG:|2|:END)|,| |z|#:| |3|:END)|
//│ Parsed: {f (x: 1, y: g (2,), z: 3,)}

f  x: 1,  y:  g  2, z: 3
//│ |f| |x|#:| |1|,| |y|#:| |g| |2|,| |z|#:| |3|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.425: 	f  x: 1,  y:  g  2, z: 3
//│ ╙──       	              ^^^^^^^^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.425: 	f  x: 1,  y:  g  2, z: 3
//│ ╙──       	^^^^^^^^^^^^^^^^^^^^^^^^
//│ Parsed: {f (x: 1, y: g (2, z: 3,),)}

f of x: 1, y: g of 2, z: 3
//│ |f| |#of| |x|#:| |1|,| |y|#:| |g| |#of| |2|,| |z|#:| |3|
//│ Parsed: {f (x: 1, y: g (2, z: 3,),)}

f x: 1 + 1, y: 2 2, z: 3 + 2 4 - 1
//│ |f| |x|#:| |1| |+| |1|,| |y|#:| |2| |2|,| |z|#:| |3| |+| |2| |4| |-| |1|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.439: 	f x: 1 + 1, y: 2 2, z: 3 + 2 4 - 1
//│ ╙──       	                           ^^^^^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.439: 	f x: 1 + 1, y: 2 2, z: 3 + 2 4 - 1
//│ ╙──       	               ^^^^^^^^^^^^^^^^^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.439: 	f x: 1 + 1, y: 2 2, z: 3 + 2 4 - 1
//│ ╙──       	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ Parsed: {f (x: + 1 1, y: 2 (2, z: + 3 (2 (- 4 1,)),),)}


x.y
//│ |x|.|y|
//│ Parsed: {. x y}

.y
//│ |.|y|
//│ ╔══[ERROR] Unexpected operator in expression position
//│ ║  l.457: 	.y
//│ ╙──       	^
//│ Parsed: {y}


2 + f of 3 + 3
//│ |2| |+| |f| |#of| |3| |+| |3|
//│ Parsed: {+ 2 (f (+ 3 3,))}

2 + 2
  of 3 + 3
//│ |2| |+| |2|→|#of| |3| |+| |3|
//│ Parsed: {+ 2 2 (+ 3 3,)}




