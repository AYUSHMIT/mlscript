:AllowParseErrors
:AllowTypeErrors // TODO rm



if f of
  0 then "ok"
  1 then "ko"
//│ |#if| |f| |#of|→|0| |#then| |"ok"|↵|1| |#then| |"ko"|←|
//│ ╔══[ERROR] Unexpected 'then' keyword here
//│ ║  l.7: 	  0 then "ok"
//│ ╙──     	    ^^^^
//│ ╔══[ERROR] Expected 'then'/'else' clause; found application instead
//│ ║  l.6: 	if f of
//│ ║       	   ^^^^
//│ ║  l.7: 	  0 then "ok"
//│ ║       	^^^^
//│ ╟── Note: 'if' expression started here:
//│ ║  l.6: 	if f of
//│ ╙──     	^^
//│ Parsed: {if (f (0,)) then undefined}

if f (
  0 then "ok"
  1 then "ko"
)
//│ |#if| |f| |(BEG:|→|0| |#then| |"ok"|↵|1| |#then| |"ko"|←|↵|:END)|
//│ ╔══[ERROR] Unexpected 'then' keyword here
//│ ║  l.24: 	  0 then "ok"
//│ ╙──      	    ^^^^
//│ ╔══[ERROR] Expected 'then'/'else' clause; found application instead
//│ ║  l.23: 	if f (
//│ ║        	   ^^^
//│ ║  l.24: 	  0 then "ok"
//│ ║        	^^^^^^^^^^^^^
//│ ║  l.25: 	  1 then "ko"
//│ ║        	^^^^^^^^^^^^^
//│ ║  l.26: 	)
//│ ║        	^
//│ ╟── Note: 'if' expression started here:
//│ ║  l.23: 	if f (
//│ ╙──      	^^
//│ Parsed: {if (f (0,)) then undefined}

if f of
  0 then "ok"
  1 then "ko"
  else "?"
//│ |#if| |f| |#of|→|0| |#then| |"ok"|↵|1| |#then| |"ko"|↵|#else| |"?"|←|
//│ ╔══[ERROR] Unexpected 'then' keyword here
//│ ║  l.46: 	  0 then "ok"
//│ ╙──      	    ^^^^
//│ ╔══[ERROR] Expected 'then'/'else' clause; found application instead
//│ ║  l.45: 	if f of
//│ ║        	   ^^^^
//│ ║  l.46: 	  0 then "ok"
//│ ║        	^^^^
//│ ╟── Note: 'if' expression started here:
//│ ║  l.45: 	if f of
//│ ╙──      	^^
//│ Parsed: {if (f (0,)) then undefined}

if f of
  0 is 0 then "ok"
  1 is 1 then "ko"
//│ |#if| |f| |#of|→|0| |is| |0| |#then| |"ok"|↵|1| |is| |1| |#then| |"ko"|←|
//│ ╔══[ERROR] Unexpected 'then' keyword here
//│ ║  l.64: 	  0 is 0 then "ok"
//│ ╙──      	         ^^^^
//│ ╔══[ERROR] Expected 'then'/'else' clause; found application instead
//│ ║  l.63: 	if f of
//│ ║        	   ^^^^
//│ ║  l.64: 	  0 is 0 then "ok"
//│ ║        	^^^^^^^^
//│ ╟── Note: 'if' expression started here:
//│ ║  l.63: 	if f of
//│ ╙──      	^^
//│ Parsed: {if (f (is 0 0,)) then undefined}




